<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>对象化的自觉与其对爱情的解读</title>
      <link href="/2021/07/30/%E6%96%87%E5%AD%A6/%E3%A5%80%E6%A2%A7/%E5%AF%B9%E8%B1%A1%E5%8C%96%E7%9A%84%E8%87%AA%E8%A7%89%E4%B8%8E%E5%85%B6%E5%AF%B9%E7%88%B1%E6%83%85%E7%9A%84%E8%A7%A3%E8%AF%BB%E7%94%A8/"/>
      <url>/2021/07/30/%E6%96%87%E5%AD%A6/%E3%A5%80%E6%A2%A7/%E5%AF%B9%E8%B1%A1%E5%8C%96%E7%9A%84%E8%87%AA%E8%A7%89%E4%B8%8E%E5%85%B6%E5%AF%B9%E7%88%B1%E6%83%85%E7%9A%84%E8%A7%A3%E8%AF%BB%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>从对象化的角度对爱情解读</p><a id="more"></a><p><strong>对象化</strong>在哲学的范畴上讲是指主体的劳动的实现、劳动物化在对象之中。对象化在我理解（欢迎指正）是一种通过对客观世界的作用来进行自我的证明或自我的发泄的方式，是生物学意义上过剩精力的现实表现，当我们被认可了我们也就发泄了，对象化是当代普遍意义上人类（也可能有人不会这样）与生俱来的一种属性，在现实生活中表现为各种各样的形态，文学理论中就把文学创作的一种意义归为创作者主观情绪的对象化。</p><p>首先，要说明的是，很多理论上的东西在不被提及的时候就已经深深地烙在了我们身上，只是我们并没有认识其的<strong>自觉</strong>或者说我们的意识敏感程度不够而意识到的东西十分有限。随着我们一点点成长、老去，很多东西我们越来越不能感知，这是一个不可逆的过程，我多么希望我能在再年轻一些的时候多写下当时的感悟。不要以为一种东西存在才重要，而对它的意识不重要，不论是从自然科学的角度还是从人文科学的角度，自觉都是一个很重要的词，而不仅仅是我们上学时候的自觉学习的意思，文学有了自觉才有了文学理论，各种自然学科的自觉更不用提了，如果没有那个自觉引导着，我们只会生活在没有科技的时代，盲目地使用着自然的力量。而对象化这个概念也是如此，这是对于人类活动本质的一种自觉。</p><p>我想从<strong>爱情</strong>的角度再切入。“爱情是双方的事情，如果只有一方喜欢另一方，那谈不上爱情”，我记不得第一次是从哪里得来的这句话，但这成了我的一个信条，这句话笼统的逻辑自洽是爱情是一种双方都有感情才会产生的感情，包括了信任、依赖、对关系的认可等。我不想从爱是单纯的为对方好这个角度考量，从为对方好出发某种意义上讲只能说是自己的自私，是一种单方面的对象化，即使有了对这句话的自觉，也无法避免这件事情。从对象化的角度讲，爱情只有在双方对象化的情况下才会产生，让我们拿常见的父母对子女的爱举个反例：我们经常看到父母对子女说“还不是为了你好，至少我们出发点是好”这种话，这就是一种单方面的对象化，单方面输出自己，而没有考虑对方并接受对方的对象化。养花养草养宠物也是如此，花草、宠物不会对你要求什么，或者说他们只有着固定的生理需求，不会向你提什么其他的要求，他们不会对饲主有对象化的需求，只有被对象化、依赖的需求，像是不会讲话的孩子，而饲主，也只是在单向输出自己的对象化罢了，这是一件很轻松的事情。换个角度说，这也就是爱情的沉重之处，爱情需要双方的对象化与被对象化，也就是俗称的<strong>爱</strong>与被爱，当然爱（本篇文章爱与爱情不同，只是一个单向的动作）这个动词本身就是一个很暧昧的词，爱对于主体之于客体究竟是依赖还是被依赖，究竟是被对象化还是对象化，还是说客体的依赖就是主体所依赖的东西？我们可以经常在爱情里看到这种情况，当一段爱情即将终结的时候，总是有一方表现为对这段关系的冷淡，主体的冷淡换句话说就是对于客体的无要求与不满足，<strong>无要求和不满足</strong>哪个是第一性的？只要我们稍加思索我们就会从众多的关系表现中发现，无要求是第一性的，在婚姻里一个人他可以满足你的要求而不爱你，但不会发生的是不让你接近他的内心却还爱你。</p><p>所以，爱是对客体的对象化，我喜欢你，我希望我能影响你，我想在你面前表现。但是有一个新的问题产生了，当你喜欢一个人的时候你已经被对方对象化了，所以爱一个人从客观上讲是一种由主体出发但是是客体对主体的对象化，爱这个单向的动词也包括了希望客体对自己的对象化，也就是被爱，在爱情里面，对象化的渴望是被对象化，爱的渴望是被爱。所以爱情这种关系，就是我迄今为止所发现的最伟大最能体现双方而且互相纠缠的关系。爱并不只意味着满足对方的要求，也意味着向对方提出要求，这样也就意味着，希望对方提出要求并也能满足自己的要求，这个<strong>AaBb的排列组合</strong>，也就是爱情的真谛，也就是终将成为你的深层意义，也就是对爱情是互相爱才会产生的最好的注解。</p><p>写到这里我已经离最初的主题——对对象化的理解，偏离太远，反而成了一篇从对象化讲爱情的文章，已经没办法往下写了，或许还有什么其他我没有接触到的词可以更精确地来表达爱情里的这种形态而不是对象化，但通过对象化的<strong>自觉</strong>并从对象化角度的<strong>解读</strong>我想还是有一定意义的，你们…应该懂我的意思吧。</p>]]></content>
      
      
      <categories>
          
          <category> 文学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爱情 </tag>
            
            <tag> 人类 </tag>
            
            <tag> 意识 </tag>
            
            <tag> 两性 </tag>
            
            <tag> 自觉 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文艺产品态度</title>
      <link href="/2021/07/30/%E6%96%87%E5%AD%A6/%E3%A5%80%E6%A2%A7/%E6%96%87%E8%89%BA%E4%BA%A7%E5%93%81%E6%80%81%E5%BA%A6/"/>
      <url>/2021/07/30/%E6%96%87%E5%AD%A6/%E3%A5%80%E6%A2%A7/%E6%96%87%E8%89%BA%E4%BA%A7%E5%93%81%E6%80%81%E5%BA%A6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>鉴赏的层次性，人性的极端性，挖掘的深度，两者的联系。</p><a id="more"></a><p>游戏是当代通俗小说。</p><p>在玩解密游戏、玩剧本杀、看推理小说、看科幻小说的时候，我总是感觉没意思，心里总会浮上来不过如此的感觉，怎么讲呢，就好像是一个东西就摆在那里，但是非得用一些没有什么很相关很有意义的方式去揭示，作者自以为还显得很高明，与传统小说相比，情节与人物塑造上太弱了，语言也太弱了，一开始就让人提不起很大劲。</p><p>算是我认真玩的第一个剧本杀，就是把所有物证盘查一遍，然后排除每个人的嫌疑物品，找出他们原本动机，最后的那个就凶手了，可是在这个过程中，人物动机表现不深刻，塑造就很弱，就成了个无趣的盘查游戏而已，好吧，我本身是那种没办法说谎的类型，虽然喜欢体验角色，但感觉这样费时间费精力到头来只是这样一点点的东西（塑造很弱的人物、几乎为0的情感）很吃亏。</p><p>看过东野圭吾几本小说，《恶意》、《白夜行》、《从前我死去的家》、《解忧杂货铺》，还有一本《犯罪嫌疑人X的献身》，前四本在我心中的排名和列出来的顺序一致，最后一本看的时间太久远了已经没办法和之前的几本作比较了。我算不上一个推理迷，所以即使能体会推理的乐趣，但体会到乐趣的程度肯定也是与推理迷相异的，我并不很以情节、办案、作案等的高明为乐，至少这不是第一位的，排在第一位的更多是在这些技巧后面表达的东西，塑造的人物、揭示的人性等。与传统小说相比，推理小说的人物描写其实不算多，更偏向通俗、记流水账一些，《白夜行》对于主角的描写是特别特别少的，几乎全部都是在写他们周围的人物，其电视剧的拍摄和其完全不同。在我看来，《恶意》是要比《白夜行》高上一分的，至于为什么《恶意》高一分，已经记不太清了，或许是《恶意》更加纯粹，作案动机更深入人心（这里的人心不是指读者），至于对于作案者的心理描写…这两本都是没有的吧，或许这是推理小说所避免的（我看过的推理小说的确太少）也或许这是东野圭吾的个人风格。在文学理论中，有过推理小说、科幻小说算不算小说的争论，因为小说是人物情感的流动，而这两类小说更多是其他的东西在推动，而不是人物的情感。不从人物情感流动出发，而得来的人性真相，总是感觉不那么得劲，在现实生活中，性格的塑造总是通过情感的流动来推动，而性格的表现也是通过情感的流露来表现。纯粹探讨技艺、战略、战术… todo</p>]]></content>
      
      
      <categories>
          
          <category> 文学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 鉴赏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不可承受之轻</title>
      <link href="/2021/07/23/%E8%AF%BB%E4%B9%A6/%E8%AF%BB%E4%B9%A6/%E4%B8%8D%E5%8F%AF%E6%89%BF%E5%8F%97%E4%B9%8B%E8%BD%BB/"/>
      <url>/2021/07/23/%E8%AF%BB%E4%B9%A6/%E8%AF%BB%E4%B9%A6/%E4%B8%8D%E5%8F%AF%E6%89%BF%E5%8F%97%E4%B9%8B%E8%BD%BB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>生命不可承受之轻           捷克 米兰·昆德拉</p><a id="more"></a><p>生命不可承受之轻1<br>工作的重复性 与 轮回<br>人生是一场永远不会正式演出的排练，所以也谈不上排练<br>我们不知道这样做会这样，那样做会那样，但我们非得这样做不可，即使这样做了会那样<br>在日常生活中尽量少用隐喻，不要把具体的人和代表性的象征放一起，不然你会无法自拔。</p><p>灵与肉1<br>灵魂飞出表面<br>偶然 巧合  与  感情之间的相辅相成，并造就了人们对于美的法则的符号建构？  星座也是之一吧。<br>捷克斯洛伐克的历史，与俄国之间的关系，屈辱软弱  与  人性<br>正因为弱才知道要强<br>眩晕是沉醉在自己的软弱之中 意识到自己的软弱，却并不去抗争，反而自暴自弃。<br>我在等着。</p><p>不解之词<br>对他来说，爱情是一种甘心屈从于对方的意愿和控制的热望。…  所以，我可以说，爱情之于弗兰茨，就是对死亡的不断等待。<br>对于帽子的无法理解<br>不断的背叛  不断的远离    永不安定<br>异口同声呼喊同一个口号可以是一种恶<br>扫荡这座教堂的赫拉克勒斯巨人之帚   但有一种别样的东西把银行家和穷人联合在了一起：对美的仇视  P130<br>美就是被背弃的世界<br>活在真实里：隐藏是真实  还是 和盘托出是真实   和盘托出意味着将自我全部曝光，也意味着自我的消逝<br>对玛丽来说 爱情是一场战斗  弗兰茨不想抗争<br>赋予我们行为以意义的，我们往往对其全然不知<br>他闭着眼</p><p>灵与肉2</p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>麦田守望者</title>
      <link href="/2021/07/21/%E8%AF%BB%E4%B9%A6/%E8%AF%BB%E4%B9%A6/%E9%BA%A6%E7%94%B0%E5%AE%88%E6%9C%9B%E8%80%85/"/>
      <url>/2021/07/21/%E8%AF%BB%E4%B9%A6/%E8%AF%BB%E4%B9%A6/%E9%BA%A6%E7%94%B0%E5%AE%88%E6%9C%9B%E8%80%85/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前人的经历与经验。</p><a id="more"></a><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>这是真正的东西！当然是的！他妈的为什么不是？人们就是不把真正的东西当东西看待。我他妈的对这都腻烦透啦。P187</p><p>你要是在麦田遇到了我  P188</p><p>这很是个极妙的安排。而且这不是教育。这是历史。这是诗。P207</p><p>她穿着那么件蓝大衣，老那么转个不停，看去真他妈的好看极了。老天爷，我真希望你当时也在场。P230</p><p>她不是那种值得带着去的人。不过可怕的是，我要求带她去的时候却真有这个意思。P145</p><p>他们只是把性关系看成是肉体和精神的双重关系。P158</p><p>我的问题是，每次我都住手了。大多数男人都不这样。我却由不得自己。P101</p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>盗梦空间</title>
      <link href="/2021/07/20/%E7%94%B5%E5%BD%B1/%E7%94%B5%E5%BD%B1/Aloners/"/>
      <url>/2021/07/20/%E7%94%B5%E5%BD%B1/%E7%94%B5%E5%BD%B1/Aloners/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一部关于社会原子化的电影。</p><a id="more"></a><p>如果没有一个人生活的经验可能有些地方不容易理解。</p><p>片子整体节奏沉闷，除了片尾报制作人员表的地方没有背景音乐。节奏很慢，基本上都是在看女主角，心境变化缓缓推进，从Aloners的心境到在办公室的小爆发再到后续的自暴自弃再到最后自我解脱谅解，很细腻。</p><p>人是社会性的，追根溯源，人，是群居性动物。很多很多时候，真的是很讨厌作为人本身所携带的无法抗拒的本能的那一面，生存本能、繁殖欲望、破坏欲、他人承认等等等等，但没办法，我们是人。</p><p>很明显的细节，假装独自生活的人。  无时无刻不在看手机；一个人的时候会打开电视制作点声音，甚至睡觉的时候；会关注其他人的生活，但不会让他人知道等。比较有感触的是，我会学习的时候放着歌，一个人的时候不停地放歌，外放着歌睡觉，在桐乡还有在黔江的时候，房东的猫或者三三或者万青的歌都不知道重复多少遍了。</p>]]></content>
      
      
      <categories>
          
          <category> 电影 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 社会 </tag>
            
            <tag> 人性 </tag>
            
            <tag> 原子化 </tag>
            
            <tag> 孤独 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>积累</title>
      <link href="/2021/07/17/%E6%96%87%E5%AD%A6/%E3%A5%80%E6%A2%A7/%E7%A7%AF%E7%B4%AF/"/>
      <url>/2021/07/17/%E6%96%87%E5%AD%A6/%E3%A5%80%E6%A2%A7/%E7%A7%AF%E7%B4%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>随便的一些记录</p><hr><a id="more"></a><p>ACG  画风的时代变化    从浪漫主义到现实主义的转移</p><p>《不存在的骑士》  西方骑士精神的内涵以及消亡  可能要去看《堂吉诃德》</p><h1 id="细琐积累"><a href="#细琐积累" class="headerlink" title="细琐积累"></a>细琐积累</h1><p>舅舅  最后那段话，我之前有过想法，但忘记了</p><hr><p>老朋友：由激战2NPC的老朋友联想到自己的老朋友，与个人世界的关联。</p><hr><p>教育结构与产业结构的不匹配，即就业的另一角度解读，这导致了学生到工作阶段的异化意识问题，但大多数人并不认为这是个问题。<br>可以就此写个小说，然后再引入元小说，加入构思过程中幻想被请喝茶等部分。</p><hr><p>科夫图阿情节 </p><hr><p>㥀梧 22:08:02<br>人最大的实现</p><p>㥀梧 22:08:06<br>是自我的实现</p><p>㥀梧 22:08:11<br>最理想的社会</p><p>㥀梧 22:08:23<br>是每个人能充分实现自己</p><p>㥀梧 22:10:47<br><img src="E:%5CBlog%5Csource_posts%5C%E3%A5%80%E6%A2%A7%5C%E7%A7%AF%E7%B4%AF.assets%5CIkiru.1952.%E7%94%9F%E4%B9%8B%E6%AC%B2.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.784X576.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86%E5%88%B6%E4%BD%9C.mkv_20211006_220735.972.jpg" alt="img"></p><p><img src="E:%5CBlog%5Csource_posts%5C%E3%A5%80%E6%A2%A7%5C%E7%A7%AF%E7%B4%AF.assets%5Cimage-20211006221633857.png" alt="image-20211006221633857"></p><p>㥀梧 22:11:05<br>给每个人提供工作机会是低层次的</p><p>㥀梧 22:12:11<br>从个人的角度讲，可以不通过工作，还有其他的方式能让自己安定下来</p><p>㥀梧 22:13:05<br>郁郁不得志的另一个角度是人在时代下无法实现</p><p>㥀梧 22:13:14<br>不仅仅是个人</p><p>㥀梧 22:13:40<br>无法将自身对象化是活得最难的</p><p>㥀梧 22:14:38<br>不论是工作、爱情、政治、哲学、艺术还是其他什么东西，人始终是社会性的，或者从生物学角度，是群体动物，无法对象化真的太难了。</p><p>㥀梧 22:15:19<br>再引申下去就是和主流意识形态的对抗，对于身份召唤的对抗，会导致自身社会性招来质疑</p><p>㥀梧 22:24:36<br>《生之欲》除了从个人角度 生命的活力、人生的意义出发</p><p>㥀梧 22:24:53<br>还是一出日本的《组织部来了个年轻人》</p><p>㥀梧 22:25:52<br><img src="E:%5CBlog%5Csource_posts%5C%E3%A5%80%E6%A2%A7%5C%E7%A7%AF%E7%B4%AF.assets%5COZV%7D2C%5DAOED9BAZIYC7928H.png" alt="img"></p><p>㥀梧 22:26:45<br>但总会有人来打破这套冗政、体制改变人的说辞</p><p>㥀梧 22:52:41<br><img src="E:%5CBlog%5Csource_posts%5C%E3%A5%80%E6%A2%A7%5C%E7%A7%AF%E7%B4%AF.assets%5C8LDO48C$8@%5BGWU0353$FOVS.png" alt="img"><a href="http://music.163.com/song?id=1387183465&amp;userid=3856561357" target="_blank" rel="noopener">http://music.163.com/song?id=1387183465&amp;userid=3856561357</a></p><hr><p>玄天幽且默   humor 幽默的引入  是否有关联</p><hr><p>打了疫苗，灭活的病毒却因为被打疫苗人A体质的特殊，会根据其读的书进行相应的变异</p><hr><p>㥀梧 11:55:57<br>使用内容的象征性来设置游戏玩法</p><p>㥀梧 11:56:18<br>然后在情节上既塑造人物又推进剧情</p><p>㥀梧 11:56:38<br>内容的象征性本身就使得玩法与内容的契合</p><p>㥀梧 11:56:52<br>其实很多时候游戏的开发是从玩法设计上入手</p><p>㥀梧 11:56:59<br>而不是说我想表达什么东西来入手</p><p>㥀梧 11:57:08<br>但我总是想从内容出发</p><p>㥀梧 11:59:29<br>比如从越来越轻的时间之河</p><p>㥀梧 11:59:51<br>象征人生某些无用之物的丧失</p><p>㥀梧 12:00:18<br>然后再点出得以维持的力量</p><p>㥀梧 12:01:03<br>之前我对于游戏的创作观就不太对 或者说和主流相悖</p><hr><p>㥀梧 13:17:39<br>从比喻到幻想、到现实、到梦醒、到忧虑中的幸福</p><p>㥀梧 13:17:52<br>这是爱不同阶段的形态</p><p>㥀梧 13:19:08<br>不仅仅是爱 这是所有一切事物对于人来说的生长顺序，但总是到不了最后的极端</p><p>㥀梧 13:19:10<br>阶段</p><p>㥀梧 13:19:46<br>梦醒后即使获得了幸福 很多时候也不是之前的那个对象，可能在不自觉中就已经开始了新的梦</p><p>㥀梧 13:20:44<br>比喻是很危险的一件事情</p><p>㥀梧 13:21:02<br>一个简单的比喻，便可从中产生爱情。</p><p>㥀梧 13:22:18<br>“托马斯当时还没有意识到，比喻是一种危险的东西。人是不能和比喻闹着玩的。一个简单的比喻，便可从中产生爱情。”</p><p>“特蕾莎的呼吸有一两次变成了轻轻的鼾声。托马斯感觉不到自己丝毫的同情心。他唯一感觉到的，是胃中央的压迫和归来的绝望。”<br>“不，这绝不是迷信…… 偶然的幸运之鸟再一次飞落她的肩头。她含着热泪，无限幸福地听着他在身边呼吸。”</p><p>这忧虑意味着：我们已在最后一站。这幸福意味着：我们在一起。忧虑是形式，幸福是内容。幸福充盈着忧虑的空间。</p><p>㥀梧 13:22:50<br>昨天看影评，我就想到了《生命不能承受之轻》里关于比喻的说法，但我之前一直忽略了后面的东西</p><p>㥀梧 13:23:05<br>比喻与幻想是很初级的阶段</p><p>㥀梧 13:23:21<br>很多时候是在梦醒的时候 关系随之破碎</p><p>㥀梧 13:24:18<br>在关系中能够承受梦醒的那部分</p><p>㥀梧 13:24:21<br>就是最后一站</p><p>㥀梧 13:24:41<br>但不是对于比喻、幻想的否认</p><p>㥀梧 13:26:43<br>所以之前的内容是刻在身心上的，爱是一种刻刀，也正是因为之前的阶段才能到最后的阶段。</p><p>㥀梧 13:27:28<br>人类是时间的奴隶</p><p>婚姻不应该是对爱情的妥协  应该是对其的发展，是对梦醒后的忧虑的幸福</p><hr><p>假若人还年轻，他们的生命乐章不过刚刚开始，那他们可以一同创作旋律，交换动机，但是，当他们在比较成熟的年纪相遇，各自的生命乐章已经差不多完成，那么，在每个人的乐曲中，每个词，每件物所指的意思便各不相同。</p><hr><p>爱是无意义的意义</p><p>安全感的不同表现方式</p><p>与其更好的人，不如义无反顾的爱</p><p>海胆球</p><p>南辕北辙更容易发现原来正确的路在哪里。</p><h2 id="剧场"><a href="#剧场" class="headerlink" title="剧场"></a>剧场</h2><p>自卑、自负、越美好越爱越折磨</p><p>我竟是边缘人</p><h2 id="夜以继日"><a href="#夜以继日" class="headerlink" title="夜以继日"></a>夜以继日</h2><p>爱之刀</p><p>是譬喻，是刻刀，是变形，是无时无刻，是无法抹去。</p><p>有主题曲，很能体现主题。<br>爱情的擦除与覆写</p><h2 id="时间之河"><a href="#时间之河" class="headerlink" title="时间之河"></a>时间之河</h2><p>我昨天睡不着 翻聊天记录看  我知道生活不单单是像王小波说的那样不断受锤，还是在一条密度越来越小的时间之河上往前且无法后退，你只能不断地不断地丢掉那些看似无用的东西，即使只是暂时把他们放进河里，捞出来的时候也会变质。</p><p>也像一个中了美杜莎射线的却不会因此而死的人，一点点变成石雕，在单向的时间维度里慢慢失去感受力，越来越麻木，失掉对亲情的纯粹，失掉对爱情的信仰，失掉对世界的热爱，失掉对理想的热情，为什么不在27岁已经成为石雕的时候就死去呢？</p><p>通过文字、照片、回忆，算了，回忆永远会把美好的东西埋葬，以期当下肮脏的自己心安。通过客观记录以往事物的载体来窥探当时的自己，越来越意识到现在自己的可悲与热情的丧失，那种经历了挫败失掉以往信仰信念的自己的可悲，之前的信仰信念越深越高越坚定，认清真相受到挫败后的热情消散得越了无踪迹，真想永远眼睛里闪着光用无尽的精力与热情去投入这个世界，可那除非一开始就对生活有一个超级客观的认识把期望拉到极低才行吧。</p><p>美杜莎的射线在人群中反射<br>二十七岁零一天的他完全变成了石雕<br>但这丝毫不影响他 进食、排泄、睡觉、生产、交流<br>甚至比还未完全石化前要进行得都要好<br>在越来越轻的时间之河上<br>只有石雕才能漂得更远<br>为什么不在二十七岁前沉底<br>至少那时血肉还存在</p><h2 id="你也一样不正经"><a href="#你也一样不正经" class="headerlink" title="你也一样不正经"></a>你也一样不正经</h2><p>“你所谓的普通，就是放弃的借口吗”</p><p>“只要你觉得可以，那就好”  “因为普通来讲就应该是这样吧”</p><p>复杂性和放弃纯粹是两回事</p><h2 id="爱情"><a href="#爱情" class="headerlink" title="爱情"></a>爱情</h2><p>㥀梧 12:08:12<br>很多时候，爱情</p><p>㥀梧 12:08:14<br>是被爱情本是</p><p>㥀梧 12:08:16<br>本身</p><p>㥀梧 12:08:17<br>打败的</p><p>㥀梧 12:09:55<br>所以</p><p>㥀梧 12:09:59<br>即使离别也是美好的</p><p>我是要成为海贼王的男人！ 12:10:24<br><img src="file:///C:/Users/xiaox/AppData/Local/Microsoft/Windows/Clipboard/HistoryData/%7B94077EF5-E6CF-4937-BA8D-9795ABA173F1%7D/%7BDB5248F4-333C-4D0F-A6E9-35172172D665%7D/ResourceMap/%7B4D37634C-350C-4F1B-B776-BFAC09918D61%7D" alt="img"></p><p>㥀梧 12:12:56<br><img src="file:///C:/Users/xiaox/AppData/Local/Microsoft/Windows/Clipboard/HistoryData/%7B94077EF5-E6CF-4937-BA8D-9795ABA173F1%7D/%7BDB5248F4-333C-4D0F-A6E9-35172172D665%7D/ResourceMap/%7B8531EB8A-EB60-4E77-B670-EC4DC239987A%7D" alt="img"></p><p>㥀梧 12:13:14<br>我是在想为什么昨天那个电影分手还是那样的基调</p><p>㥀梧 12:13:30<br>为什么明明很合适 也意识到了问题 却无法回头</p><p>㥀梧 12:13:42<br>这不是问题解不解决得了的问题</p><p>㥀梧 12:13:45<br>这是对于</p><p>㥀梧 12:13:54<br>之前那种美好时光的一种</p><p>㥀梧 12:14:07<br>不愿破坏</p><p>㥀梧 12:14:29<br>正是因为有之前美好的回忆 所以才不愿继续下去</p><p>㥀梧 12:14:40<br>这就是爱情被爱情本是打败的内蕴</p><p>㥀梧 12:15:30<br>这也是人和人相遇是注定的别离</p><p>㥀梧 12:15:35<br>的一个解释</p><hr><p>㥀梧 2021/8/15 18:33:09<br>我刚看完那个电影的一个bilibili解说</p><p>㥀梧 2021/8/15 18:33:28<br>光着脚去拿了《生命不可承受之轻》 摘录内容写转发</p><p>㥀梧 2021/8/15 18:41:43<br>“托马斯当时还没有意识到，比喻是一种危险的东西。人是不能和比喻闹着玩的。一个简单的比喻，便可从中产生爱情。”</p><p>“特蕾莎的呼吸有一两次变成了轻轻的鼾声。托马斯感觉不到自己丝毫的同情心。他唯一感觉到的，是胃中央的压迫和归来的绝望。”<br>“不，这绝不是迷信…… 偶然的幸运之鸟再一次飞落她的肩头。她含着热泪，无限幸福地听着他在身边呼吸。”</p><p>这忧虑意味着：我们已在最后一站。这幸福意味着：我们在一起。忧虑是形式，幸福是内容。幸福充盈着忧虑的空间。</p><hr><p>从比喻到幻想，到现实，到破碎，到忧虑中的幸福，我看到爱不同阶段的形态，有美有悲伤，但都是那么让人向往。</p><h2 id="信仰与自由的矛盾"><a href="#信仰与自由的矛盾" class="headerlink" title="信仰与自由的矛盾"></a>信仰与自由的矛盾</h2><p>邦尼爱之信仰的崩塌</p><p>everyone must trust something, even select don’t trust everything, it’s also a trust.</p><p>一不小心对于信仰的陷入</p><h2 id="倾城之恋"><a href="#倾城之恋" class="headerlink" title="倾城之恋"></a>倾城之恋</h2><p>生命之轻：要小心譬喻</p><p>倾城之恋：倾了一座城，才爱上了一个人</p><p>你也一样不正经：</p><p>去他妈的世界</p><p>花束：花 想起</p><p>到底哪个是因哪个是果</p><h2 id="强大在感情里是弱小-或者说强大的主动"><a href="#强大在感情里是弱小-或者说强大的主动" class="headerlink" title="强大在感情里是弱小 或者说强大的主动"></a>强大在感情里是弱小 或者说强大的主动</h2><h2 id="显性不幸与隐性不幸-△"><a href="#显性不幸与隐性不幸-△" class="headerlink" title="显性不幸与隐性不幸 △"></a>显性不幸与隐性不幸 △</h2><h2 id="大时代与小人物"><a href="#大时代与小人物" class="headerlink" title="大时代与小人物"></a>大时代与小人物</h2><ul><li>山河故人</li><li>地久天长</li><li>顽主</li><li>不成问题的问题</li><li>太阳照常升起</li></ul><h2 id="细碎的家庭生活"><a href="#细碎的家庭生活" class="headerlink" title="细碎的家庭生活"></a>细碎的家庭生活</h2><ul><li>步履不停</li><li>比海更深</li></ul><h2 id="思君使人老"><a href="#思君使人老" class="headerlink" title="思君使人老"></a>思君使人老</h2><p>思君使人老《古诗十九首》</p><p>思君如流水，何有穷已时   建安七子 徐干</p><h2 id="含苞待放-含苞即凋-身份归属与爱情-喜欢是放肆，爱是克制-银翼杀手2049中的JOY△"><a href="#含苞待放-含苞即凋-身份归属与爱情-喜欢是放肆，爱是克制-银翼杀手2049中的JOY△" class="headerlink" title="含苞待放 含苞即凋    身份归属与爱情      喜欢是放肆，爱是克制    银翼杀手2049中的JOY△"></a>含苞待放 含苞即凋    身份归属与爱情      喜欢是放肆，爱是克制    银翼杀手2049中的JOY△</h2><p>毕竟告诉别人自己爱他这件事情  是多么让人害羞与感到耻辱，不做好完全的准备是很难讲出来的。</p><p>关于男性总是在个人内心获得充实感之后才会涌起向女性的来往，而女性也会基于男性的主动程度来判断男性本身情况，这基本上可以说是一种原始的基因，或者说是一种远古时期流传下来的普遍的集体记忆，但有相对的强弱，以及发展到现代后理智对其影响程度不同。即使不考虑在这件事情上的理性，男性自身内心充实感也是由不同东西引起的，这和每个人的认知、自我期望有关，对于一些人来说可能很简单地就充实了，而对于另一些人来说可能很难，这也是爱的克制的一种表现。</p><ul><li>寒冬夜归人 第三章，p66 这个任务将会鼓励我去同茨维达小姐讲话，但是，只是现在我才看清这点，才清楚地意识到这种感觉</li><li>麦田守望者，最喜欢的姑娘却凑头到尾都没有联系过一次</li><li>火口的两人  我害怕   这样也没法让你下定决心吗</li><li>何时是读书天  爱的克制</li><li>路边野餐</li></ul><h2 id="关于自我学习、整体思维方式与文学积累-△"><a href="#关于自我学习、整体思维方式与文学积累-△" class="headerlink" title="关于自我学习、整体思维方式与文学积累 △"></a>关于自我学习、整体思维方式与文学积累 △</h2><p>为什么我学习给人不努力的感觉<br>我是在努力<br>但和别人不一样<br>别人是学会了就没了<br>我是学到了一个就不停地沉浸<br>我的学习是看不到的<br>和作家感性积累 思考 以及最后的艺术发现是一致的<br>雾草<br>怪不得我学一会就累了<br>原来是因为<br>我学的更多更深<br>快记下来<br>这是新的素材<br>雾草 原来是这样<br>那我适合做专一的一件事情  或者类似作家这种需要不停感悟<br>可能工程性的东西不适合我<br>理论性的更适合我</p><h2 id="重生-△"><a href="#重生-△" class="headerlink" title="重生 △"></a>重生 △</h2><p>关于年轻人被社会锤倒，被反差锤倒，热情消耗殆尽，又是如何在社会分工层面被分化，而又如何重新站起来。</p><h1 id="非文学学术人学"><a href="#非文学学术人学" class="headerlink" title="非文学学术人学"></a>非文学学术人学</h1><h2 id="《人论》"><a href="#《人论》" class="headerlink" title="《人论》"></a>《人论》</h2><p>第一章 进化论，人的脱颖而出，与其他动物是否还有脱颖而出的可能性。</p><h2 id="自我的定位，对于上班工作的否认——不稳定的因子-△"><a href="#自我的定位，对于上班工作的否认——不稳定的因子-△" class="headerlink" title="自我的定位，对于上班工作的否认——不稳定的因子  △"></a>自我的定位，对于上班工作的否认——不稳定的因子  △</h2><h2 id="人存在的意义之输出与他人认同-△"><a href="#人存在的意义之输出与他人认同-△" class="headerlink" title="人存在的意义之输出与他人认同 △"></a>人存在的意义之输出与他人认同 △</h2><h2 id="将说未说"><a href="#将说未说" class="headerlink" title="将说未说"></a>将说未说</h2><p>  很多时候，由于时机、地点等等一系列条件的不成熟，导致我们说出了本不想说的话或没有经过大脑的话，事后反过来才会想到，“哦，原来是这样，我应该那样说的”，遗憾就这样产生了，而本来应该说出的话却也不容易再次讲出来，毕竟情境不是说再现就再现，和不是很熟的人突兀讲这些话又会显得很不自然甚至刻意，让人感觉功利性、目的性很强，和一开始就自然表达的效果大大不同。那些本应该被表达的东西，就这样被埋了起来，不想起来的时候也就不想起来，可每次被生活中其他东西触发而想到的时候那些话语就会膨胀一下，让你如鲠在喉，不吐不快却只能卡着。出于这样的缘故，借用文学排解内心苦闷的作用，在这里把这些话、这些东西记下来，让自己好过一点。<br>  让我们再分析下我们当时为什么说出了本不想说或没有经过大脑的话。外因，是目前信息时代大量信息充斥的影响，太多的价值判断充斥在我们的脑海里，主流的声音太过强大，很容易地，就会迷失其中，找不准自己真正用来判断的基绳也搞不清对方讲话时到底是基于何种角度，甚至对于不是很熟的人，我们下意识地就采用了迁就而不认真去思考的想法；往内里讲，这是自身不够坚定，也是一种什么都想要的狡猾与投机主义，如果真真正正想和一个人进行深层次的交流，首要的是，我们要坚定自己，对于自己的不坚定也是对于和自己同类人的不坚定，这等于是背叛了自己和本应该愉快交流的对方，最终只能是浮于表面的互相敷衍。只是马卡 2021/7/16 23:43:24<br>我高中的时候讲过我被享乐主义腐蚀了  </p><p>只是马卡 2021/7/16 23:43:33<br>我现在才意识到 那不是享乐主义</p><p>只是马卡 2021/7/16 23:43:46<br>那是封建残余的力量</p><p>只是马卡 2021/7/16 23:43:59<br>那是人性的一部分</p><p>只是马卡 2021/7/16 23:44:31<br>那是既得利益者总是想着利用现有规则来剥削其他人耍小聪明的软弱</p><p>只是马卡 2021/7/16 23:49:01<br>都是相同的</p><p>只是马卡 2021/7/16 23:49:03<br>想通的</p><p>只是马卡 2021/7/16 23:49:06<br>相通的</p><p>只是马卡 2021/7/16 23:49:48<br>从封建专制 到教会腐败 到种族歧视 到官僚主义 到资本剥削</p><p>只是马卡 2021/7/16 23:50:58<br>都是既得利益者，固守已有资源建立对应规则，把人变得不成人。</p><p>只是马卡 2021/7/16 23:51:38<br>但人性是永远最宝贵的东西，解放的任务永远不会完成</p><p>只是马卡 2021/7/16 23:52:51<br>阿威 悟了么   为人类解放而奋斗中审</p><p>只是马卡 2021/7/16 23:52:53<br>终身</p><p>只是马卡 2021/7/16 23:52:59<br>不是一句空话</p><p>只是马卡 2021/7/16 23:53:14<br>你得先明白 我们要解放的东西是什么</p><h2 id="剑来"><a href="#剑来" class="headerlink" title="剑来"></a>剑来</h2><ul><li>总有一些人，可能兜里就只有几文钱，却敢想着富甲天下的事情。寻常人敢这么想，是异想天开，但是总有那么一几个人，想得到，就做得成。 （可为之处）</li><li>万年以来，世间道法的高度和深度，并没有得到一种跳跃数个大台阶式的提升，甚至就连学问一事，也未曾真正脱离早年诸子百家的窠臼，至于那个更大的文字藩篱，就更不用提了，但是随着道心与人性不断的融合，由此带来道法的宽度和广度，不是万年之前可以比的。</li></ul><hr><h1 id="文学学术-△"><a href="#文学学术-△" class="headerlink" title="文学学术 △"></a>文学学术 △</h1><h2 id="巴金对专制大家庭兴衰的刻画-兴衰与出走"><a href="#巴金对专制大家庭兴衰的刻画-兴衰与出走" class="headerlink" title="巴金对专制大家庭兴衰的刻画  兴衰与出走"></a>巴金对专制大家庭兴衰的刻画  兴衰与出走</h2><h2 id="沈从文对于都市病的刻画与理想中美好世界人性的刻画-价值判断之回归本源"><a href="#沈从文对于都市病的刻画与理想中美好世界人性的刻画-价值判断之回归本源" class="headerlink" title="沈从文对于都市病的刻画与理想中美好世界人性的刻画   价值判断之回归本源"></a>沈从文对于都市病的刻画与理想中美好世界人性的刻画   价值判断之回归本源</h2><h2 id="老舍的幽默、京味，社会重锤，个人主义末路鬼"><a href="#老舍的幽默、京味，社会重锤，个人主义末路鬼" class="headerlink" title="老舍的幽默、京味，社会重锤，个人主义末路鬼"></a>老舍的幽默、京味，社会重锤，个人主义末路鬼</h2><h2 id="茅盾前期与后期-剖析写作-政治文学双线-大事件的刻画-女性"><a href="#茅盾前期与后期-剖析写作-政治文学双线-大事件的刻画-女性" class="headerlink" title="茅盾前期与后期   剖析写作   政治文学双线 大事件的刻画  女性"></a>茅盾前期与后期   剖析写作   政治文学双线 大事件的刻画  女性</h2><h2 id="男性、女性的-灵肉-描写-在二三十年代"><a href="#男性、女性的-灵肉-描写-在二三十年代" class="headerlink" title="男性、女性的 灵肉 描写      在二三十年代"></a>男性、女性的 灵肉 描写      在二三十年代</h2><h2 id="中国传统文化的断层-周梦蝶"><a href="#中国传统文化的断层-周梦蝶" class="headerlink" title="中国传统文化的断层  周梦蝶"></a>中国传统文化的断层  周梦蝶</h2><p><a href="https://www.acfun.cn/v/ac30183438" target="_blank" rel="noopener">https://www.acfun.cn/v/ac30183438</a><br>  新文化运动对于传统文化的抵制是为了救亡图存，人学大大发展，思想解放，之后的革命文学十七年文学也有很强的zz因素，之后就是wg了，再然后就是拨乱反正，改革开放，传统文化中间某个角度上实际上是出过断层的，像台湾周梦蝶这样从传统文化过渡来的诗人在大陆那些特殊的年代不可能存在下去。</p><h2 id="文学起源-游戏发生说与当代游戏类型的若干联系-文学理论P39"><a href="#文学起源-游戏发生说与当代游戏类型的若干联系-文学理论P39" class="headerlink" title="文学起源 游戏发生说与当代游戏类型的若干联系  文学理论P39"></a>文学起源 游戏发生说与当代游戏类型的若干联系  文学理论P39</h2><p>自我对象化：游戏的互动性   配置与表现</p><h2 id="中国神话与仙话-神话的流变-神话被封建意识的浸染"><a href="#中国神话与仙话-神话的流变-神话被封建意识的浸染" class="headerlink" title="中国神话与仙话  神话的流变    神话被封建意识的浸染"></a>中国神话与仙话  神话的流变    神话被封建意识的浸染</h2><h2 id="对于马克思文论的批判"><a href="#对于马克思文论的批判" class="headerlink" title="对于马克思文论的批判"></a>对于马克思文论的批判</h2><ul><li>人类物质需求与精神需求实际上并没有先后顺序，只是大多数情况下表现为物质先于精神</li><li>劳动说现实启示意义并不如游戏说   虽然说是“沦为生物学意义的解释”，但反而体现了“灵与肉”</li></ul><h2 id="文学起源游戏说与当前游戏的同源性-对象化-功利与非功利等-以及文学对于游戏进步之处"><a href="#文学起源游戏说与当前游戏的同源性-对象化-功利与非功利等-以及文学对于游戏进步之处" class="headerlink" title="文学起源游戏说与当前游戏的同源性  对象化 功利与非功利等   以及文学对于游戏进步之处"></a>文学起源游戏说与当前游戏的同源性  对象化 功利与非功利等   以及文学对于游戏进步之处</h2><h2 id="有关马理论中的人的全面发展"><a href="#有关马理论中的人的全面发展" class="headerlink" title="有关马理论中的人的全面发展"></a>有关马理论中的人的全面发展</h2><h2 id="精神生产与物质生产之间的不平衡-文学与时代之间的不平衡-越贫瘠的土壤越能开出美丽的花"><a href="#精神生产与物质生产之间的不平衡-文学与时代之间的不平衡-越贫瘠的土壤越能开出美丽的花" class="headerlink" title="精神生产与物质生产之间的不平衡    文学与时代之间的不平衡      越贫瘠的土壤越能开出美丽的花"></a>精神生产与物质生产之间的不平衡    文学与时代之间的不平衡      越贫瘠的土壤越能开出美丽的花</h2><h2 id="文学创作"><a href="#文学创作" class="headerlink" title="文学创作"></a>文学创作</h2><p>和特定人聊天对我来说是促使灵感出现的一个很好的方式，我会进入形而上的境界，讲着讲着就会不知所云，新的东西就会诞生，挂了电话还意犹未尽，灵感往往就在这个时候产生了，我要做的就是抓住他思考他记下他。然后，作品就会在我胸中积淀，直到有一天我忍无可忍，他就喷涌而出了。</p><p>文学理论之艺术创作艺术发现——开天眼</p><p>车厘子与榴莲？？</p><hr><h1 id="社会"><a href="#社会" class="headerlink" title="社会"></a>社会</h1><h2 id="信仰缺失问题"><a href="#信仰缺失问题" class="headerlink" title="信仰缺失问题"></a>信仰缺失问题</h2><p>爱自己对我来说是一个伪命题，我需要将自我进行分裂才可以实现这个任务，或者说我太不在意物质和社会中的我从而导致我表现得将一些都搞砸，其实这正是因为我对精神上的我的爱。<br>对于高度自觉，对很多平时可以作为人们信念有着更高层次的意识和自觉的人，很难找到自己的信念而坚持做事情，对于我来说只能将信念归于爱，但对于没有爱人的我陷入一个鸡和蛋境地。从形而上到神到日心说到进化论，一次次人们的信仰被打破，一次次又去寻找，到了当代，“没有一个时代人们的信仰如此分裂”，而我对一切的否认让我陷入了信仰的缺失，信仰的缺失也就是动力的缺失，非得去找一个信仰不可，但我对宗教是否认的，这个可以来得最快的自我欺骗的方式是在开倒车，从我目前的认知来看我还没有否认的是从人出发的爱，爱可以承受住生命之轻，但有时候却承受不住生命之重，要有对爱是一种信仰的自觉才能做到对生命之重的承受。</p><h2 id="厨房消亡的历史趋势"><a href="#厨房消亡的历史趋势" class="headerlink" title="厨房消亡的历史趋势"></a>厨房消亡的历史趋势</h2><ul><li>做饭是一个很费精力占用大脑的事情</li><li>现代人的思想解放</li><li>大锅菜的成本节省  吃饭时间相对固定</li></ul><ul><li>个人口味问题</li></ul><h2 id="电子游戏的扬与弃"><a href="#电子游戏的扬与弃" class="headerlink" title="电子游戏的扬与弃"></a>电子游戏的扬与弃</h2><h2 id="当前社会的文化（精神建设与异化程度）问题"><a href="#当前社会的文化（精神建设与异化程度）问题" class="headerlink" title="当前社会的文化（精神建设与异化程度）问题"></a>当前社会的文化（精神建设与异化程度）问题</h2><h2 id="各省之间思想开放差距-四川、山东-△"><a href="#各省之间思想开放差距-四川、山东-△" class="headerlink" title="各省之间思想开放差距  四川、山东 △"></a>各省之间思想开放差距  四川、山东 △</h2><h2 id="方言与歌曲，不同地区主流价值观的一方面体现"><a href="#方言与歌曲，不同地区主流价值观的一方面体现" class="headerlink" title="方言与歌曲，不同地区主流价值观的一方面体现"></a>方言与歌曲，不同地区主流价值观的一方面体现</h2><h2 id="开玩笑-闲拉呱-是一种意识形态灌输的伪装方式-△"><a href="#开玩笑-闲拉呱-是一种意识形态灌输的伪装方式-△" class="headerlink" title="开玩笑 闲拉呱  是一种意识形态灌输的伪装方式 △"></a>开玩笑 闲拉呱  是一种意识形态灌输的伪装方式 △</h2><ul><li><p>关于笑话的变形  根据人们对于笑话的接受与笑话本身将意识形态正当化的特点   将笑话变形成与之相反的恐怖的东西</p></li><li><p>只是马卡 17:21:27<br>很多人在表达观念的时候，最后经常用一句”这不是在闲拉呱/讲笑话“来掩盖自己观念上的错误。但从意识形态的角度来看，闲拉呱/讲笑话是在以这种不在意的方式将自己的观念正当化、轻松化、娱乐化，从而达成意识形态传达的作用。当没有人去指出其观念的错误性时，这种观念也就开始传播，意识形态的灌输也就完成。</p><p>只是马卡 17:21:59<br>这是通过对 开玩笑/闲拉呱  的陌生化处理   以另一个角度和视野来看待</p><p>只是马卡 17:22:26<br>如果别人讲着讲着话 你来了句意识形态 正当化，绝对他们就被镇住了 emmm</p><p>只是马卡 17:22:52<br>喜剧很多时候也起到了意识形态灌输的作用。</p></li></ul><h2 id="对于佛系的重新定义"><a href="#对于佛系的重新定义" class="headerlink" title="对于佛系的重新定义"></a>对于佛系的重新定义</h2><p>生产力发展后对于现有生产关系的冲击 外力是生产力发展后生活条件的提高 内力是个人性格、见识、教育水平等因素 (赘婿大同世界、大跃进，各种改革与社会共识)</p><h2 id="女性教育与生育率的宏观关系，以及具体到个人时的表现"><a href="#女性教育与生育率的宏观关系，以及具体到个人时的表现" class="headerlink" title="女性教育与生育率的宏观关系，以及具体到个人时的表现"></a>女性教育与生育率的宏观关系，以及具体到个人时的表现</h2><h2 id="信息技术发展与精神需求发展之间的不匹配以及一系列的新问题"><a href="#信息技术发展与精神需求发展之间的不匹配以及一系列的新问题" class="headerlink" title="信息技术发展与精神需求发展之间的不匹配以及一系列的新问题"></a>信息技术发展与精神需求发展之间的不匹配以及一系列的新问题</h2><ul><li>人群不断地分散，各行各业各个地域的高低不再按照实际的个人能力，更多的是意愿</li><li>到底变革应该适应的是什么  是当前的生产力和人们的意识水平    还是</li><li>生产力解放后 是 对什么的否定  又是对什么的肯定</li></ul><h2 id="革命革的是什么-战争战的是什么-△"><a href="#革命革的是什么-战争战的是什么-△" class="headerlink" title="革命革的是什么 战争战的是什么 △"></a>革命革的是什么 战争战的是什么 △</h2><ul><li>对于德国、日本的侵略   以及  他们向既有制度的挑战</li><li>对于资本的抵制如果成为了全民性的，那现有制度将会失效，生产将会停摆，那么，这是进步还是倒退<ul><li>五四的罢工罢学是进步还是倒退</li><li>区别进步还是倒退的东西是什么</li></ul></li><li>我们无法得知真正的天堂是什么， 但我们知道地狱是什么样的；我们无法得到那理想制度，但我们可以不断纠错<br>所以，很多时候与其关注成功者，不如关注失败者，看是怎么失败的</li><li>历史是生产力、制度的历史，文学史是人性解放的历史</li></ul><hr><h1 id="漫画、动画"><a href="#漫画、动画" class="headerlink" title="漫画、动画"></a>漫画、动画</h1><h2 id="灌篮高手、京吹、历经弦音、慕结的共通点-△"><a href="#灌篮高手、京吹、历经弦音、慕结的共通点-△" class="headerlink" title="灌篮高手、京吹、历经弦音、慕结的共通点 △"></a>灌篮高手、京吹、历经弦音、慕结的共通点 △</h2><hr><h1 id="电影"><a href="#电影" class="headerlink" title="电影"></a>电影</h1><h2 id="无耻混蛋"><a href="#无耻混蛋" class="headerlink" title="无耻混蛋"></a>无耻混蛋</h2><p>当法国人不讲情义，美国人不讲人权，德国人不讲原则，英国人满脑浆糊，犹太人大开杀戒，希特勒就死了。  豆瓣短评</p><h2 id="春潮"><a href="#春潮" class="headerlink" title="春潮"></a>春潮</h2><p>笑死我了10分钟多一点，家庭饭桌上的典型<br>各种典型：女主角男朋友典型、介绍的主任典型、母亲的典型    </p><blockquote><p>再有长颈鹿、盲人收集的各种动物声音等等，赋予电影了多义性，为观众提供了很多解读空间，然而琐碎的线索不能合理收拢，<strong>一些意象过于生涩，高度风格化个人化的影像表达则又多少偏离于现实之外，显得相对自我，对女性主义这个电影母题起到了消解的反作用。</strong></p><p><strong>很多导演执着于将中国文化转喻为“一个压抑的女人和一个万难毁灭的铁屋子”，并辅之以偷情、乱伦、虐恋等力比多奇观。</strong></p></blockquote><blockquote><p>到了一定时间，海水推波助澜，迅猛上涨，达到高潮；过后一些时间，上涨的海水又自行退去，留下一片沙滩，出现低潮。如此循环重复，永不停息。海水的这种运动现象就是潮汐。春潮就是春天的潮汐，形容其势之猛。</p></blockquote><h2 id="落水狗"><a href="#落水狗" class="headerlink" title="落水狗"></a>落水狗</h2><p>典型黑帮两难问题  卧底的人性与任务</p><h2 id="next-floor"><a href="#next-floor" class="headerlink" title="next floor"></a>next floor</h2><p>贪婪有一个因素是   人 竞争 人 互相 异化   。</p><h2 id="路边野餐"><a href="#路边野餐" class="headerlink" title="路边野餐"></a>路边野餐</h2><p>西南口音  亦幻亦真 爱</p><h2 id="何时是读书天"><a href="#何时是读书天" class="headerlink" title="何时是读书天"></a>何时是读书天</h2><p>含苞的爱  盛放 瞬间凋零     但已经盛放</p><p>克制 爆发 回归</p><h2 id="Aloners"><a href="#Aloners" class="headerlink" title="Aloners"></a>Aloners</h2><p>原子化 真正的独处 人群居性的本性等</p><h2 id="火口的两人"><a href="#火口的两人" class="headerlink" title="火口的两人"></a>火口的两人</h2><p>日本地震的无常 人生的无常       日本国民性</p><p>不安定感与稳定的近亲关系    乱世下的人生态度</p><p>背德感的纠缠态</p><h2 id="被解放的姜戈"><a href="#被解放的姜戈" class="headerlink" title="被解放的姜戈"></a>被解放的姜戈</h2><p>吃人吃人还是吃人<br>解放解放解放<br>解放不能停止<br>无论在什么时候，过去现在还是未来<br>打破一切现有体制既得利益者所抑制的自由<br>为人类解放而终身斗争</p><p>未成年时，我以为我是被享乐主义腐蚀了<br>我现在才意识到 那不是享乐主义<br>那是封建残余的力量<br>那是人性的一部分<br>那是既得利益者总是想着利用现有规则来剥削其他人耍小聪明的软弱</p><p>从封建专制 到教会腐败 到种族歧视 到官僚主义 到资本剥削<br>都是既得利益者，固守已有资源建立对应规则，把人变得不成人<br>人性永远是最宝贵的东西<br>也是最邪恶的东西<br>解放的任务永远不会完成</p><h2 id="色戒"><a href="#色戒" class="headerlink" title="色戒"></a>色戒</h2><p>最难背叛是人性。</p><p>可以分成前后两段</p><p>香港段和上海段</p><p>香港段：学生；革命献身；无意义的献身；血。</p><p>上海段：人性应泯灭的特务与任务的人性要求；献身的意义寻求；身份的迷失；人性与革命的冲突。</p><p>我认为主人公只有女主角一个，香港段和上海段的变化也很明显。</p><p>插叙、倒叙</p><p>变换式人物有限视角</p><p>最后服药与未服药</p><p>革命与人性冲突贯穿始终，且在不同情境不断呈现</p><h2 id="低俗小说"><a href="#低俗小说" class="headerlink" title="低俗小说"></a>低俗小说</h2><p>插叙  倒叙</p><p>多人物多视角转换</p><p>由于多视角从而形成了  多个故事形成主故事</p><p>枪、毒、血腥、犯罪、变态、假拳、圣经、音乐、舞蹈等要素，现象</p><p>文森特和boss老婆那段很有感觉，就是那种遇到对的人的感觉，但文森特有两难问题；在酒吧吃饭那段像相亲，跳舞很经典，回家蜜儿听歌，歌词很形象写出蜜儿的心情；后即使蜜儿吸毒过量，闹出糗事，最后他们离开的时候，仍然用那个之前的冷笑话，把感觉拐回来了。</p><p>拳击手那段，一个是他和他的honey之间的对话，情况的紧急和honey的女生形象形成了强烈的对比，拳击手一边暴躁一边安抚真真是让人发笑；最后去救boss那段戏也很棒，这里的两难问题一边是人性，一边是自己的利益甚至生命，但他还是回去救了boss，最后他们那段“what now?”双关就体现了两人面对人渣（人性）时站在了一起。</p><p>黑人杀手圣经那段 还有神迹  挺有意思的  哲学思辨</p><p>整体上来看这部电影的双方关系很容易就会发生翻转，文森特盯人上厕所被打死，咖啡店男女抢劫遇到黑帮，boss和拳击手遇到变态佬，力量的对比很容易就发生了变化。解读这部分的话，可以看成是在没有规则的体系和现代暴力高度发展的情况下，人的脆弱，以及…    而且这样很好看。</p><h2 id="盗梦空间"><a href="#盗梦空间" class="headerlink" title="盗梦空间"></a>盗梦空间</h2><p>倒叙</p><p>梦境的重叠与设计   与    多视角</p><p>弗洛伊德精神分析法</p><p>梦境醒来的设定与情节紧张度的契合</p><p>对于梦，我自身的读者经验，我仍然喜欢沉迷梦境不愿醒来</p><p>换个角度说，对于世界的感知度也是陷入梦境的维度，两者有共通点，也就说经历一件事情每个人的感知到的东西是不同的，时间维度上的的深度与深邃在这里体现。</p><p>时间，时间感知度，真实经历的时间。</p><p>生命，生命感知度，真实生命的时间。</p><p>人生=时间X感知度</p><p>去感受吧 去参与吧 去爱吧   这才是人生的真谛</p><p>植梦的设定，蜜儿的幽灵形象，爱情的歌颂，是什么非得让我们醒来。是在真实世界中的那些人，而不是我们脑海里自我想象的那些东西。</p><p>最后尚停未停的陀螺非要进行有意义的解读的话，我认为应该解读成：各自生活在自己的时空里。</p><h1 id="大纲"><a href="#大纲" class="headerlink" title="大纲"></a>大纲</h1><h2 id="由将说未说的经历到社会表现-自以为是-把自己放低，低到尘埃里"><a href="#由将说未说的经历到社会表现-自以为是-把自己放低，低到尘埃里" class="headerlink" title="由将说未说的经历到社会表现  自以为是      把自己放低，低到尘埃里"></a>由将说未说的经历到社会表现  自以为是      把自己放低，低到尘埃里</h2><h2 id="科幻-根据基因进行的婴儿分类"><a href="#科幻-根据基因进行的婴儿分类" class="headerlink" title="科幻   根据基因进行的婴儿分类"></a>科幻   根据基因进行的婴儿分类</h2><h1 id="剪辑"><a href="#剪辑" class="headerlink" title="剪辑"></a>剪辑</h1><h2 id="日常-柚子和mio闹脾气最后和好-火花里sparks组合最后漫才的反话"><a href="#日常-柚子和mio闹脾气最后和好-火花里sparks组合最后漫才的反话" class="headerlink" title="日常 柚子和mio闹脾气最后和好    火花里sparks组合最后漫才的反话"></a>日常 柚子和mio闹脾气最后和好    火花里sparks组合最后漫才的反话</h2>]]></content>
      
      
      <categories>
          
          <category> 文学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 两性 </tag>
            
            <tag> 人生 </tag>
            
            <tag> 电影 </tag>
            
            <tag> 社会 </tag>
            
            <tag> 历史 </tag>
            
            <tag> 文学 </tag>
            
            <tag> 人性 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>低俗小说</title>
      <link href="/2021/01/01/%E7%94%B5%E5%BD%B1/%E7%94%B5%E5%BD%B1/%E4%BD%8E%E4%BF%97%E5%B0%8F%E8%AF%B4/"/>
      <url>/2021/01/01/%E7%94%B5%E5%BD%B1/%E7%94%B5%E5%BD%B1/%E4%BD%8E%E4%BF%97%E5%B0%8F%E8%AF%B4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><a id="more"></a><h2 id="学术"><a href="#学术" class="headerlink" title="学术"></a>学术</h2><p>插叙  倒叙</p><p>多人物多视角转换</p><p>由于多视角从而形成了  多个故事形成主故事</p><p>枪、毒、血腥、犯罪、变态、假拳、圣经、音乐、舞蹈等要素，现象</p><h2 id="本体分析"><a href="#本体分析" class="headerlink" title="本体分析"></a>本体分析</h2><p>文森特和boss老婆那段很有感觉，就是那种遇到对的人的感觉，但文森特有两难问题；在酒吧吃饭那段像相亲，跳舞很经典，回家蜜儿听歌，歌词很形象写出蜜儿的心情；后即使蜜儿吸毒过量，闹出糗事，最后他们离开的时候，仍然用那个之前的冷笑话，把感觉拐回来了。</p><p>拳击手那段，一个是他和他的honey之间的对话，情况的紧急和honey的女生形象形成了强烈的对比，拳击手一边暴躁一边安抚真真是让人发笑；最后去救boss那段戏也很棒，这里的两难问题一边是人性，一边是自己的利益甚至生命，但他还是回去救了boss，最后他们那段“what now?”双关就体现了两人面对人渣（人性）时站在了一起。</p><p>黑人杀手圣经那段 还有神迹  挺有意思的  哲学思辨</p><h2 id="读者经验"><a href="#读者经验" class="headerlink" title="读者经验"></a>读者经验</h2><p>整体上来看这部电影的双方关系很容易就会发生翻转，文森特盯人上厕所被打死，咖啡店男女抢劫遇到黑帮，boss和拳击手遇到变态佬，力量的对比很容易就发生了变化。解读这部分的话，可以看成是在没有规则的体系和现代暴力高度发展的情况下，人的脆弱，以及…    而且这样很好看。</p>]]></content>
      
      
      <categories>
          
          <category> 电影 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>盗梦空间</title>
      <link href="/2021/01/01/%E7%94%B5%E5%BD%B1/%E7%94%B5%E5%BD%B1/%E7%9B%97%E6%A2%A6%E7%A9%BA%E9%97%B4/"/>
      <url>/2021/01/01/%E7%94%B5%E5%BD%B1/%E7%94%B5%E5%BD%B1/%E7%9B%97%E6%A2%A6%E7%A9%BA%E9%97%B4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><a id="more"></a><h2 id="学术"><a href="#学术" class="headerlink" title="学术"></a>学术</h2><p>倒叙</p><p>梦境的重叠与设计   与    多视角</p><p>弗洛伊德精神分析法</p><p>梦境醒来的设定与情节紧张度的契合</p><h2 id="读者经验"><a href="#读者经验" class="headerlink" title="读者经验"></a>读者经验</h2><p>对于梦，我自身的读者经验，我仍然喜欢沉迷梦境不愿醒来</p><p>换个角度说，对于世界的感知度也是陷入梦境的维度，两者有共通点，也就说经历一件事情每个人的感知到的东西是不同的，时间维度上的的深度与深邃在这里体现。</p><p>时间，时间感知度，真实经历的时间。</p><p>生命，生命感知度，真实生命的时间。</p><p>人生=时间X感知度</p><p>去感受吧 去参与吧 去爱吧   这才是人生的真谛</p><h2 id="本体分析"><a href="#本体分析" class="headerlink" title="本体分析"></a>本体分析</h2><p>植梦的设定，蜜儿的幽灵形象，爱情的歌颂，是什么非得让我们醒来。是在真实世界中的那些人，而不是我们脑海里自我想象的那些东西。</p><p>最后尚停未停的陀螺非要进行有意义的解读的话，我认为应该解读成：各自生活在自己的时空里。</p>]]></content>
      
      
      <categories>
          
          <category> 电影 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 时间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>色 戒</title>
      <link href="/2021/01/01/%E7%94%B5%E5%BD%B1/%E7%94%B5%E5%BD%B1/%E8%89%B2%20%E6%88%92/"/>
      <url>/2021/01/01/%E7%94%B5%E5%BD%B1/%E7%94%B5%E5%BD%B1/%E8%89%B2%20%E6%88%92/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最难背叛是人性。</p><a id="more"></a><h2 id="学术"><a href="#学术" class="headerlink" title="学术"></a>学术</h2><p>可以分成前后两段</p><p>香港段和上海段</p><p>香港段：学生；革命献身；无意义的献身；血。</p><p>上海段：人性应泯灭的特务与任务的人性要求；献身的意义寻求；身份的迷失；人性与革命的冲突。</p><p>插叙、倒叙</p><p>变换式人物有限视角</p><p>最后服药与未服药</p><p>革命与人性冲突贯穿始终，且在不同情境不断呈现</p><p>我认为主人公只有女主角一个，香港段和上海段的变化也很明显。</p>]]></content>
      
      
      <categories>
          
          <category> 电影 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 时间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Next 基础修改</title>
      <link href="/2020/04/27/%E5%99%A8/%E5%90%9B%E5%AD%90%E4%B8%8D%E5%99%A8%E4%BD%86%E7%94%A8%E5%99%A8/Next%20%E5%9F%BA%E7%A1%80%E4%BF%AE%E6%94%B9/"/>
      <url>/2020/04/27/%E5%99%A8/%E5%90%9B%E5%AD%90%E4%B8%8D%E5%99%A8%E4%BD%86%E7%94%A8%E5%99%A8/Next%20%E5%9F%BA%E7%A1%80%E4%BF%AE%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>给阿策策搭了博客，是直接把我的项目拉了过去，很多个人化的东西还没有做，这里写一下。</p><a id="more"></a><p>Hexo 是博客的一种方案，而 Next 可以理解为是 Hexo 下的一个主题</p><p>博客文件夹下有个 _config.yml，主题的 Next 目录下也有个 _config.yml 文件，分别用来配置不同的一些东西。</p><p>我的图床链接 <a href="http://106.13.190.225/" target="_blank" rel="noopener">http://106.13.190.225/</a>    国内域名搞起来有点麻烦。。之前用的国外的服务器，但是有点贵。。。直接把图片拖上去或者ctrl+c ctrl+v 或者 用 print screen sys rq 那个键直接截取，然后 把鼠标放到框框里 按 ctrl+v。</p><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p>可以配置站点的一些信息</p><p>这里直接把我的博客下的 _config.yml 拿过来加了 ‘#’ 的后面都是注释</p><p>没在后面注释的可以看英文大致了解，基本上不用改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line"></span><br><span class="line"># Site</span><br><span class="line">title: 自由 #博客名</span><br><span class="line">subtitle: #博客子标题</span><br><span class="line">description: #描述，由于这里我改了代码，所以不生效吧</span><br><span class="line">keywords: Unity；生活；艺术；游戏； #关键词</span><br><span class="line">author: 胡桃 #作者名</span><br><span class="line">language: zh-CN #语言</span><br><span class="line">timezone: #时区，不填自动选取电脑时区</span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">url: https://orangexx.github.io/ #我的域名</span><br><span class="line">root: / #不是分配的子域名的话 默认即可</span><br><span class="line">permalink: :year/:month/:day/:category/:title/ </span><br><span class="line">permalink_defaults: </span><br><span class="line"></span><br><span class="line"># Directory</span><br><span class="line">source_dir: source #.md文件目录</span><br><span class="line">public_dir: public #发布文件夹</span><br><span class="line">tag_dir: tags </span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render:</span><br><span class="line"></span><br><span class="line"># Search </span><br><span class="line">search:</span><br><span class="line">  path: ./public/search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 20</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Writing</span><br><span class="line">new_post_name: :title.md # File name of new posts</span><br><span class="line">default_layout: post</span><br><span class="line">titlecase: false # Transform title into titlecase</span><br><span class="line">external_link: true # Open external links in new tab</span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: false</span><br><span class="line">post_asset_folder: false</span><br><span class="line">relative_link: false</span><br><span class="line">future: true</span><br><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: true</span><br><span class="line">  auto_detect: false</span><br><span class="line">  tab_replace:</span><br><span class="line">  </span><br><span class="line"># Home page setting</span><br><span class="line"># path: Root path for your blogs index page. (default = &apos;&apos;)</span><br><span class="line"># per_page: Posts displayed per page. (0 = disable pagination)</span><br><span class="line"># order_by: Posts order. (Order by date descending by default)</span><br><span class="line">index_generator:</span><br><span class="line">  path: &apos;&apos;</span><br><span class="line">  per_page: 10</span><br><span class="line">  order_by: -date</span><br><span class="line">  </span><br><span class="line"># Category &amp; Tag</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"># Date / Time format</span><br><span class="line">## Hexo uses Moment.js to parse and display date</span><br><span class="line">## You can customize the date format as defined in</span><br><span class="line">## http://momentjs.com/docs/#/displaying/format/</span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line"></span><br><span class="line"># Pagination</span><br><span class="line">## Set per_page to 0 to disable pagination</span><br><span class="line">per_page: 10</span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: next</span><br><span class="line"></span><br><span class="line">symbols_count_time:</span><br><span class="line"> #文章内是否显示</span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line"> # 网页底部是否显示</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br><span class="line">  </span><br><span class="line"> # Security</span><br><span class="line"> </span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br><span class="line">  template: ./sitemap.xml</span><br><span class="line">  sitemap: true</span><br><span class="line">##</span><br><span class="line">encrypt:</span><br><span class="line">    enable: true</span><br><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:Orangexx/Orangexx.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h2 id="Next"><a href="#Next" class="headerlink" title="Next"></a>Next</h2><p>next 下的 _config.yml</p><ul><li><p>favicon 下的 /images 指的是 <strong>E:\Blog\themes\next\source\images</strong>  自己把图片放进去然后修改，也可以使用</p></li><li><p>阿策 有个 bing_site 你搜一下 然后删掉吧。。。</p></li><li><p><strong>menu 这个比较重要</strong>  </p><ul><li>以 日常 那一行为例， “/categories/日常/“  代表 “<a href="https://orangexx.github.io/categories/日常/&quot;">https://orangexx.github.io/categories/日常/&quot;</a>   这个链接；   </li><li>日常 <img src="https://unixiao.gitee.io/imagebed/imgs/2020/04/2e8b55d851c047a5.png" alt> 代表日常这两个字</li><li>calendar 代表图片日常左边的那个图标</li><li>这样我们就可以自己自定义一些链接跳转了</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  #home: / || home  #相当于https://orangexx.github.io</span><br><span class="line">  日常: /categories/日常/ || calendar </span><br><span class="line">  Unity: /categories/Unity/ || heartbeat</span><br><span class="line">  ACG: /categories/ACG/ || user</span><br><span class="line">  计院素养: /categories/计院素养 || heartbeat</span><br><span class="line">  #https://orangexx.github.io/categories/日常/</span><br><span class="line">  #tags: /tags/ || tags</span><br><span class="line">  #categories: /categories/ || th</span><br><span class="line">  #archives: /archives/ || archive</span><br><span class="line">  about: /about/ || th</span><br><span class="line">  #https://orangexx.github.io/categories/日常/</span><br><span class="line">  #schedule: /schedule/ || calendar</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap</span><br><span class="line">  #commonweal: /404/ || heartbeat</span><br></pre></td></tr></table></figure></li><li><p>然后是 social    这里代表了自己一些联系方式或者其他平台的主页</p><p><img src="https://unixiao.gitee.io/imagebed/imgs/2020/04/d380b3602dd65534.png" alt></p></li><li><p>友链  扩列用的，互相商业宣传23333，这就把阿策加上</p><p><img src="https://unixiao.gitee.io/imagebed/imgs/2020/04/016e73f4f9c45f0a.png" alt></p></li><li><p>改头像在这里  有一些属性 改一改可以有不同的效果</p><p>url 就是头像的地址，可以把图片上传到我的图床  或者直接用 source/image 的路径试一试，像上面的图标一样，可能会慢一些</p><p><img src="https://unixiao.gitee.io/imagebed/imgs/2020/04/4d63fbdac972e1ed.png" alt></p></li></ul><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>剩下扩展的部分可以看 <a href="https://orangexx.github.io/2019/06/13/%E5%8D%9A%E5%AE%A2/%E5%8D%9A%E5%AE%A2/Next%20%E5%AE%9A%E5%88%B6%E5%8C%96%E8%AE%B0%E5%BD%95/">Next 定制化记录</a> 那一篇   直接点开就好了。</p>]]></content>
      
      
      <categories>
          
          <category> 器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Next </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wii模拟器+手机控制器=全家乐</title>
      <link href="/2020/02/29/%E5%99%A8/%E5%90%9B%E5%AD%90%E4%B8%8D%E5%99%A8%E4%BD%86%E7%94%A8%E5%99%A8/wii%E6%A8%A1%E6%8B%9F%E5%99%A8+%E6%89%8B%E6%9C%BA%E6%8E%A7%E5%88%B6%E5%99%A8=%E5%85%A8%E5%AE%B6%E4%B9%90/"/>
      <url>/2020/02/29/%E5%99%A8/%E5%90%9B%E5%AD%90%E4%B8%8D%E5%99%A8%E4%BD%86%E7%94%A8%E5%99%A8/wii%E6%A8%A1%E6%8B%9F%E5%99%A8+%E6%89%8B%E6%9C%BA%E6%8E%A7%E5%88%B6%E5%99%A8=%E5%85%A8%E5%AE%B6%E4%B9%90/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>wii 是一款任天堂上世代的家用游戏机，具有体感感应器，有许多优质的游戏。目前国内流通的机器多为破解后机器，二手，价格较为便宜，某鱼上也有很多。</p><p>2020年的疫情爆发，想要在家锻炼，从而了解到了这方面的一些情况。由于毕竟是使用模拟器，不是好的事情，推荐大家还是去购买正版机器或者选择最新的NS。Steam上有舞力全开2017，应该是手机感应。</p><p>下面开始介绍这篇教程可以达到的效果，硬件要求，具体步骤等。</p><p>参考或引用了以下链接</p><blockquote><p>感谢舞力全开吧吧主  <a href="https://tieba.baidu.com/p/5024841896" target="_blank" rel="noopener">https://tieba.baidu.com/p/5024841896</a></p></blockquote><blockquote><p>感谢dolphin论坛kevlahnota <a href="https://forums.dolphin-emu.org/Thread-unofficial-udpmote-for-android" target="_blank" rel="noopener">https://forums.dolphin-emu.org/Thread-unofficial-udpmote-for-android</a></p></blockquote><blockquote><p>感谢舞力全开吧吧友 <a href="http://tieba.baidu.com/p/6035679686" target="_blank" rel="noopener">http://tieba.baidu.com/p/6035679686</a></p></blockquote><a id="more"></a><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><ul><li>可以玩 wii 上的大多数游戏（舞力全开和马里奥赛车这种体感的也可以） <ul><li>但需要距离感应器的应该不行（未成功）</li></ul></li><li>将手机当做手柄</li><li>最多四人同屏</li></ul><h2 id="硬件要求"><a href="#硬件要求" class="headerlink" title="硬件要求"></a>硬件要求</h2><ul><li>普通PC一台  windows系统    有些性能要求，但能玩的话主流就好</li><li>安卓手机1-4台（友情提示：最好使用老旧的手机跳舞，不然摔了会心疼的）</li></ul><h2 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h2><ul><li><p>下载并安装 Dolphin 模拟器，使用该软件模拟 wii 机器，从而运行游戏，三选一即可。</p><ul><li><a href="https://cn.dolphin-emu.org/" target="_blank" rel="noopener">官网</a> 国内也可访问，可以直接下载  4系列的版本都支持UDP连接。可以跳舞， 但触控效果不行，<strong>推荐给不放心定制版的玩家。</strong></li><li><a href="https://pan.baidu.com/s/1miRYvck" target="_blank" rel="noopener">网盘</a>下载  舞力全开吧大佬提供的，应该是对基础版本进行了定制化。<strong>推荐。</strong></li><li><a href="https://github.com/kevlahnota/dolphin/releases/tag/Dolphin-UDPWii-June2017" target="_blank" rel="noopener">论坛大佬的github</a> 但需要手动改写配置文件，<strong>不是很推荐，参考前言的论坛链接的方法配置。</strong></li></ul></li><li><p>设置模拟器的控制部分，控制器UDP，如果不想用手机，想用手柄、键盘也可以按照提示进行操作。</p><p>这一步只提供贴吧大佬的方法，图也是从那边搞的。</p><p>点击 wii控制器  端口号自己设置就好。</p><p><img src="https://unixiao.gitee.io/imagebed/imgs/2020/02/4c7f875f197c2144.jpg" alt></p><p><img src="https://unixiao.gitee.io/imagebed/imgs/2020/02/e4d451d2a3eb2a71.png" alt></p></li><li><p>下载并安装 手机上的 UDP 控制器</p><p>官方的版本不是很好用，这两个分别是舞力全开吧吧主和论坛国外大佬根据原官方模拟器修改的进阶版，特别是国外大佬做的这个，适合大部分游戏。</p><ul><li><p>舞力全开吧吧主  <a href="https://pan.baidu.com/s/1miRYvck" target="_blank" rel="noopener">网盘</a>下载。 <strong>一般只用来跳舞</strong></p></li><li><p>论坛大佬 这里大佬存的是谷歌盘，我转到了<a href="https://pan.baidu.com/s/1CdALhYTxDq9doAMUlo8iFQ" target="_blank" rel="noopener">网盘</a>，提取码 kohd  <strong>适合基本上所有游戏</strong></p></li></ul></li><li><p>连接手机和模拟器</p><p><strong>将手机和PC连接到同一个局域网下</strong>，可以是用热点(理论没问题)，也可以是连同一个wifi，甚至没有外网也可以(用热点时关上流量也可以)。</p><p>最好把该控制器设置为后台、锁屏可运行，但具体跳舞时可不可以锁屏也因手机而有所差异。</p></li></ul><p>  先确认PC的本地IP地址。 一般是192.168开头。</p><p>  填入手机ip地址和端口号</p><p>  端口填自己设置模拟器时的UDP端口即可，默认是4432。</p><p>  点击连接。</p><p>  <img src="https://unixiao.gitee.io/imagebed/imgs/2020/02/6a0fb0460946950d.png" alt></p><p>  <img src="https://unixiao.gitee.io/imagebed/imgs/2020/02/ed0523ee92cf09da.jpg" alt></p><p>  <img src="https://unixiao.gitee.io/imagebed/imgs/2020/02/f4bafd85ed2fcedd.jpg" alt></p><ul><li><p>下载对应游戏的镜像，拖入模拟器框或者预先选定目录并拖入选定目录。</p><p>提供舞力全开游戏的链接</p><p><a href="https://pan.baidu.com/s/1NG0wnPBpNU3riJBznxQ9AA" target="_blank" rel="noopener">舞力全开</a>  v18s</p><p><a href="https://pan.baidu.com/s/1nCN4bjbBxG8IIUqzXHS5lQ" target="_blank" rel="noopener">杂项，包含超级马里奥赛车，强推</a></p></li><li><p>运行游戏</p><p>运行时记得点击一下游戏窗口，不然模拟器监测不到UDP传输。</p></li></ul><h2 id="其余"><a href="#其余" class="headerlink" title="其余"></a>其余</h2><ul><li>由于是上世代的游戏机与游戏，表现上会差一些</li><li>可以自己进行一些图形上的设置，可以参考舞力全开吧主的设置，仅供参考</li><li>一些地方可能讲的比较粗，可以参考贴吧的两个链接</li></ul><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>和大家一起开心跳舞或者马车吧！！！</p>]]></content>
      
      
      <categories>
          
          <category> 器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wii </tag>
            
            <tag> 歪门邪道 </tag>
            
            <tag> 舞力全开 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>装机记录</title>
      <link href="/2020/01/30/%E5%99%A8/%E5%90%9B%E5%AD%90%E4%B8%8D%E5%99%A8%E4%BD%86%E7%94%A8%E5%99%A8/%E8%A3%85%E6%9C%BA%E8%AE%B0%E5%BD%95/"/>
      <url>/2020/01/30/%E5%99%A8/%E5%90%9B%E5%AD%90%E4%B8%8D%E5%99%A8%E4%BD%86%E7%94%A8%E5%99%A8/%E8%A3%85%E6%9C%BA%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Who am I ？" />    <label for="pass">Who am I ？</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX1/CZRfxzdSASMTZfhbORFBxw1KZCZqRtuAaqEB4DLrMXKySNUXFD3WHVNnwyH87ZRpmvR3fv13FhYrWXpPBUqpfe0bZc0Lp7c55g+DbtpWxGZs738JamXzgtKVVx9TWchvn06yLSZbWpD/vpNNAx+3IlVLsOKvmn51f52f9nhyWp8cz1/9epuKqX+Uhiw0P0XbxqEVDIMSlfccU4VahqbMl8gTQsIfstjjwYNFjkKzHjxjzTCTJOAZKpq2jMetF2t6oqAp/L2Z8pzD9WDpzGxPkDCDvZAXJ/1tFpsfONyHCPLgU+/1bHhhgbQ35lyVPrAfv0VvZhSfhwkLUXPX3bUxDbyt56SiUhRs1Laj9cODd6mv831Ae6MMm/IRO1aTrYSeWpEKHo65PY5kWgGL0ohR5Ydg2Ho8CLOTTlisou3tLQ24SyjXkNgEhCjek4A+FnITBQJupLfDl7Do/yL5oKMHHaFjzE74roK+j8waxPsM9q/pRYC6ttrmKh9lwAYT+m6Z5gB5RG28mqQR+hlmIkPt1FDWN3v3sTxCtSehGBjqyfQzVQgGF5TKnp1iljGQOC0hyfk63Ap9cRM/n8V4c3DPcVL08h3LUFgLbQG9Z2EVyu9BJtJem32cjQ22T+yag5EE6TpGGaPJqcWKjBJ16/UdjO/QHxmv4M9xKMZjs58soX59dMvwB/vO6UNfyBh2YGN8uuccZ/+cBiVqSxNIuY68EONeN6FfJgt4ADIVbjgJHpUDy/tKWCI1LNUHkDsCuFBcxYG5OMSHA/6uGCHW+Dvozjpp9GuYJOeOYk6SA5rXU3axOT3b7ZMq9yastmjKtId+V4dInkbaKqwry8P9Yf8iDrl202j8b9uS586FhOrbc512QHTFwT4fcmoA0m9v4p54+gfaNqfy6EBh9gtKtjzVlt9t5yY19QM5kA5l8dgOLi4JyZkBwgH0xNAI5eCb45skSVG+X+qwn5GltnyqA8D8NagsHYQjT+wt7HB/WJEUV88s8C8b+WL/cuM0xtaQZuTVDrH9toTWGtZsIOn/qknkJI88jwOqc/9+vqTad7k4B+gP9zldaBtcdM+bpyiuCqPhrq0fGj6+Tle+p2zu6aXj8uf0vmqiqeLH+SczWjx67N9YE/QezRS5X/+3IE03HvcPtHDIyp+pv6Dy5WZdzB2bW3rDCAUCSiGp+9AjHC8etuM6OXHUzZo1HHGy+e04k/KKvw/iO3DnrOG7m+TWEBe01YkL/cnfsHQnGoxcbCRaLmh/7qnwOsahpBxnZEi0LEtJTWIBjsXwZVblexOR+ZYxUv4JkBhWZkyZ5cDgjYM8A0hzP4HzZeY0FShbB22KBklA6lB0i0S54wUobDsrAcg0xV/IWDaQhlK6iQ/ygwj6zpTPtOfxDnP29qSMn2Xw32/GpzBbwkSdhob+AC9iyoO/mqwtuhwMeA9RjiWQrRPoJlE/DuJt5lD/UfuB9671Sv2TCkb2GKpQEr7GSo5eaZhLeyxcZ9ty+hsw177dYnoOwGy8i+3rcUby5iJ4YZdr7LT/fTneH6PO7+EDgzleXcIKehwaxqdhJZ8/Yu7b8GMG+EO0J/NrMGC00lUbkSxuR5BQpYtbCMk6atb2sQhJgXT9qtgFmd+0HsZfPz5bid1JmWt9xvi2avhH3Jch95J5LUpP5Y/EFXpMLxAMSt1Jd4DEDvcQABB5cUn9isEh3nbpmTQIKbNApUjQks2Obi3NOt1WXKoo/jMjOY2SkMmkSftRYEOQ+mmiB6NBvhkF1QCqmPIvUc4rrfnoP5UsSo2O7AahWPbDCXAEZuPjv21IVMHowi5FrpkmxudTgOdQRdFoD5KBDgqJWrzpvJdvt9gVzZSuJ0osGBhpOzriCwo2Y2d6Rd7cbMOkJWcU4scmi2CrQEdKTSVJNzv1fu6I/zt6SG5nSEadUYdqMmjyGCFV+dwOtTrjXLDTO6Vb+xJlYG9dtXP4J7JzTFq9A47YXXkzPzGpFnkGvF7rJaoL91+Jq1yTUaNnzvltZ/hzjAJ14wByV/seh2VfhROtWGmaIz5vN6CytgZVI4sNNRVRvWCl1uPciD+U8kRrtTs8pRoXtzB4nkg1U2AsZljT1DoGuKgcRmTU4CWzKju7sVztWrKvLwbxIcb5b/hAJASUEX5gK9mtRv1XRREFgnKXAP53m9MRQPEx3mco4dU9uWQdax2VQ3zFW/w27EwoqM4UcwdV6/kTdds1GnB0VEPY/YLukxBnc9lWNCesMVuoye5P18ZrNjJoTw070MoofmmWn1fv4AEoTtpm37wIbFhLqU3Ykge3iF+urF8EcaXFNavGLGBKY0ArQ6OEuYQJPjDOU97y0svom4CdFthFx3jIg+3n8EhR/YUN1urAlL7CaWw5rs7UCNJMInTH7hJ36TNLmF1eg2Gffl+obp4a69z8apU/OgmTRSBxjs25OoSCP+SAq5IMZz84/Dyo2jU+IYb665KAWTmIU+dp2CuVycdvqVlP4VeGAqXoNz1BpbQ/pfb9KZNCBK4Ixy1TC13hPz1eYDa/anBG/AERcE9TksIYQsYR1funXCZYt/VP/Vz8yGA6upc1iSeGe1N2noM/t+kJKhCPPMIah5C+QbEaRT4Y99d3hXNxJ1K7KvyBxiu+oXraxfPlFSD1eaRBGC7URBuVd6KIKcFQCHnFwODH+6z6ag2hTuLjLFxb9GOiTyqVWuj13nPJ4sCcgzMh8ICPs4P/tEtbwAUHQCnF3XX3A4iNyYjw9YzqbCeqvkYXeNvW9biaToGtNK5dwJiTLAjsoXR9kLb70L3f2dKPZEb0+4jLxaukTo/qRvfyE/5V/KjkJSux0UT3KK1fPrNut51HAjDESjn99VS5Zyr099gD/inKLOvMa/wQexbHdHN0sMifnCvnG6Bl/v280kRgqeINQi0fVhMOXEx2LTsyb8598Z7/rrkuMnn5LiJ46Gfo7/OpgK4Vr33PTV63rjEiAiuKEE4e3LVnJ1EvDTSnGg4e21HSh66Ixs/cqglU6W1SbXnNXPEHpM+eViZyTq4zuwRI4kHqRR2gTgk01coPbZ4CJb4J27bjhiMX5/2WH46xTpp11g9n2zDQvgC3dtBT701OvRSve4RYKldVdSIlKSiSv2sIBblfQSrQC/NvPM4nKxe3fgOncnIFX6htP9J7/g6Uudv347nBcWX0uDOJbVO0aUTYUSyagT7xW/LiDQmUj80ELE9bNUxIsJRo34N9k+U9FaxIOrB385F0UnZDLxm7qAysFEyI5AZPPOItQtBVyC60Yh/zYSruD+69u3AN8WisdA2HAA1N3dT6ojqvaRAh5ah6rt2pToQ69uXHL5AtUjIwr8xvw0KVPY4iPN9MuF2P6urx9xYQXkwieuy+BFQe9gJdN7j3xETsqkeNEfcK5JwKjcBatYJVYFoIMXjelqvb9pFQoSxenTPC5lSj/9LsyDkBm91JSlMfbgffYAgEoNomdBETO+DOvRn2FZKWel/9G9CIUyDh+QW+BsqVWQMQ0TMrmLmZAJth9703sqvh5sAGGtCj0agizeOFSkziYTBeau3gfrbFmsHbdVnfb/ynfe+jxIrzPTY+WJZ+UTN8oyCXyWKnfububN2SdRBco21tQ6WMExUMZeIGQrH9F5RhrjXaACwpw7Ta9spVlpsNf1oGMxg25BpPqtHLi9DYmk+Z4MkuRa96LitM/FZ04mY1oL5o+vgPEwexiS88CMcXVW2P+HHGCzBKYhQGdhdd/blNCh/e72T4pFs8Fq1HTQMExpZYr06I2Gnw4s5QeCvnxNQv9eGWmapRjN/gptpQ4p+vVtGSFKnCPqD3QGezCDMKRLzqpnVxu/k8X/XMnn0eqWsU4f7C+TwaXm9/h8wY0M+2fJRfQDSrkJL8Daa1EsrbQzsLazTMOSgu+fzx1LNab/d1hs+AqQWT9TV+Cd+bHKx3ZA8a+Rwv6+Z6+8PU6Aq56g1W/dERp+b5J0Qp6UFgRwzbPwYn/W/X8MUWwZrudU0JfVt5sFIWb4rAlEgWDplAUeZrQGO8BWjgpMPDkUoW5+LfXYx1zcEw6mgMA266C6vY4qrBBiFGnbwXFvO5NBwsgcrok8IkohliZVQtvvOhJLBPfyMpzYTY8BNO0R/Mw495MPPvJ2DdvM490jBPzamHBiwyCFoY9pZjBLd0bQpewJe40ko5roEKAyNXJHA6Zb9tRF6m/mttkDhMTrcAOlvQkct9IR/qQTuJchfIDWmqG5haasqaQBUfQZtCcfACysrQDwWUhhyLt7Hk4ulaSP6RKasKP3CAtQceo+Y2+5+0qyD/paxFX/cJKxu63b4Z8vM2OAiUotXG1rOyOM0LghC1vo/OXGB7sms39Ov0iVkkgmezOSuMstRiG5KLdn4VnS4QGg/DUsxBT2eFq313/fuWKEdfN7pm8eCyei5xrFdMDK9EZ0aPVHOVKKouNY7yjTdQvUSRruU9fpOPSkk4ZGGpNqoiq7OSFjBqYYPK7uAoAAMAeK7x8OXCiIDCG8hDksRL2FXz4/KvA5Yza1lByW9gmeBKj/+rgAKTdOvF3PpdBOk5IUo30FkAQdG5P3+JZ+96YDOa50FcAuDS+itg4kBtBsbGAekK3uUQhyNDGll6wgw5OYbcN+Su7w9MAmRJUFtr7y9cPPjg8tIxtJL8YRzkFzd3I4sOdxnboNBSArCuIXJezX9hXhS2sFk3asH8VNroMMsre11ksybAwQXKzn0KJUoyPtafr/g58BmOX+cM6/ciTVJ2MG2NybWQlC+gZVTm0tx943nIYC+EQevlOk2eoPdezOivuE9DK5Fa2JhZ+x+Q33cLfBetBb5oS95sJbJ7tBgn0x70BynT2XAQCH8SyjAfe5TdqPYiNmqcU4N5bjjgT6PoiVtxW9/3Qpn9TmJ+HqSqNC8z30sN7PYcNLKffvX9jlL/9cQdnM+on8ELpan+tcQmnnrs4nyvKacgYVOFcx+I/ivJ+h3fqTmaRhvp1oNMXaXklnKSGtcCkG+IhAdgl1BsMOYJZu3or1R9SwQQ2zHtrYd3FPtmGFK9NQCPDKSw0kikAKtkUkfk5bwXNnoTceI1WTCU2RQ9UfROfxKxT+jT0Kasu1Ps7RT+Tt7T5/e/4zEcjdHSK06IZEl0obAbkskHl41Rh/9lKLtYollf71BKCAkekx5qCzc+eQRMBMgBkjYQgjWJipVM+MitN36zMgbEbO4ZY5oek65174xPuhN5J9/71MHHL2XSMQnEwDkr1x3cbQu38mgJg4QZrsVevjzH6Z9nzxgWq4dHe3YDXM2/aDpF1HqXaRh2yB8dAM6dSe5O3PcYVfUhWHrAJBa3hclM+JPmukHSlg3LhoFqx/aZmJIu5LG/127+szKP8X3V9JVcAY2GI89UYHkM7AWOCchgFSXx7vmTQaL2Ht3aQ2MF28KM5QmvThhpQ9bVGYdPbPFieaV+wo7pLbEMhG0xZUAPV0uSIoQ95eRAeffEr0fY3lCy7ANdWsOtMQwQjUwdDryp3/q4UPQOERQ+8CgRc06xY7b7eSeBQ0OzCnm+RKNHjse2pAgXd7adD5kc0vBct3YoprHU0zkFGWCqngqFKeXIDZt60P8II7Ouc10hKPHLA5y0iZyc/l4L5xpvKT5x3ndNy1GO4/xEpFb9Q677XE+vAZrZ/GObFXbDxFbWwu/fMN2DxK/G0O+1GKFTtq0Mb/QuyoQpmnzW26xFyl3vB9pKBO4Vn4Bfdq/J9q5Tc+lP7qIFzFzGB7bQnrVW9NDz534vlu8TyklTdpS+laMj8V1murJ8c+o9jJmPX9GJSCp07hhFyEePk48zVN5+kp8/Dn0u+cTegeUI3jyffmM2E8ex2L+9J0Mq7pYVsFskY0IycIajRgJ2bA7TnYCbEbVd8BJEtn8fza89IJ35rj9hGY2VKcyxCIhihuqp6I00ALUE6hNydTzKCqyOvu/0jDlW4lK1kMuDVVSL/JVwsdcNZY70vXPKI9Fnx/H0GcfHP+F+749aB2rbko5TZGFpaQPUMnwBiLpobnDQ0TFwWZEHsUP3knIbjKjqjgj24MUFqKkQc4Jy8+97YWu3gc5gSywZBNet+5hmLysCkyH7Z0SL7EfnJLTmhirjpyIkrdBnMzHBVolv+3AJBG9+jkokQIsfE87xx52Jtw0YtBxR2wK7foS3UpT3mTN3iNKDj8ukLBP/QC/bXBN+NtAPPZQWvEm2HHdy4B2KZYFe7xy36SjGqJrwI2+V3Ndo5Wduh8IEjxwriwBHJhvNVzI1fBeiO4lhqzFw9DvWGfmWgxrMUWf8me3I4gyNJA6XKlHa0kvcdk6YkpmW2z592GaWdRUKYlhIaFkMIMJ6/S54Zqp5+hI51zWyrZI6GIjoVZ9HQBbnNpR6DA5YgcrXE0FVCO8vGndKQg9KnUfvcoMY4bQGg4NFnPrRvdXGgodQuPr9Slh/Pr1mxEx2DpRmZh69Y6EEsyEifAZoAwFkFS842VgyGO4E85sBue3vZO3/9O9uI6Z7TdNw7mnkGLagEGl0ht3EDCV9rG/WKIiTZOpEYOS8T5s+aZTPrfreaaz5f/0AjU5DoLV93u9urMN6XLEjUd4WW3awU63GM4IUOf7pzX4iutJRIEQm4EKC5McuVliKY8isbChZh7xqh+/guPNNnynQhJ58keJh2ZCuBWtz+a+/Ot+60Som1We9Jjz9jphIV3849uRn+gmcAfHynwJavu4DXfW+SDGNoSHx0oQSrBRQUU/Qnh0WKw0hLify69hTFrWzwN6IzwdJdPtp+G9PhDGlo1OtcLVKsK/k+X0Zz23pxKH0lcYw1C12Xb6VVdOmguISVQiPEYCWhY74OWeo9WSusebJr5mQ8nx/UJP/DSyNK6kRolQxwxW0CK2J/DLZ/++iRaXWdg+3JJltzqMsstxxKZRYY4pbLGONKwQC8Am008URZ5JcOOUbljJoKSJQmsgW0LJOB1Pq9KszThhwXIHSG7n6NmAxmehCpKQl4AOO8j81KQqGdKbICqsyklFSFGYh2RgU1cknglB0o3hOY4mQ/9dn6qrtuhNbVpL1a3KEMxLwGJ/255EQM9kISM0EbzwfcOdR3q2HVkiAOTBSfZUX16g6/1tDRvSklLyxeASEv16Z6qFRb1XBv2vfBoj3iT22TU6sFTjMpHOs1QbhFzicGpt/DQylntIbxjbcbjToeUPDfdA==</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 装机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shader4_增加屏幕后效(上)</title>
      <link href="/2019/08/22/Unity/%E5%BD%92%E6%A1%A3/Unity/Shader4_%E5%A2%9E%E5%8A%A0%E5%B1%8F%E5%B9%95%E5%90%8E%E6%95%88(%E4%B8%8A)/"/>
      <url>/2019/08/22/Unity/%E5%BD%92%E6%A1%A3/Unity/Shader4_%E5%A2%9E%E5%8A%A0%E5%B1%8F%E5%B9%95%E5%90%8E%E6%95%88(%E4%B8%8A)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在开始的时候说到过，我们是对 Unity 的默认管线进行 Shader 的编写，并通过提取 Unity 默认的 UI Shader 编写了 UIDefault.cginc，这样就可以在原有的 UI默认Shader 基础上进行修改。</p><p><strong>屏幕后效</strong>的效果也特别简单，大部分情况下可以理解为上是将屏幕最后得到的渲染图当作一个 2D 的图片进行处理，所以对于 UI 的各种方法也都适用，也可以建立一个 PostEffcet.cginc 以及 其对应的 默认Shader模版。而对于 2D Sprite Shader 来说就比较复杂了，可以看到其背后的 .cginc 有很多东西，我们可以对其进行分析，然后总结出一套适合自己的 Unity默认管线 的 Shader 流程。</p><p>这里我们先添加屏幕后效的实现方法，这样之前写的 UI 效果也都适用。</p><p>参考文献：</p><ul><li>《UnityShader 入门精要》</li><li><a href="https://github.com/candycat1992/Unity_Shaders_Book" target="_blank" rel="noopener">入门精要项目地址</a></li></ul><a id="more"></a><h2 id="屏幕后效"><a href="#屏幕后效" class="headerlink" title="屏幕后效"></a>屏幕后效</h2><p>屏幕后效是针对相机来操作的，屏幕显示的最后是根据相机渲染的图片。而屏幕后效就是我们就是在处理完所有物体渲染后(UI可以不处理)，对得到的本该直接渲染到屏幕上的一张 2D图片 进行操作而已。</p><h3 id="PostEffectsBase脚本"><a href="#PostEffectsBase脚本" class="headerlink" title="PostEffectsBase脚本"></a>PostEffectsBase脚本</h3><p>需要挂在相机一个处理脚本，用来处理传入的 Shader ，使用 Shader 生成材质，并做一些判断，实际上我们也可以直接传入材质，这样在材质上就可以做参数输入了。</p><p>主要的 API 有两个：</p><blockquote><p>void OnRenderImage(RenderTexture src, RenderTexture dest)</p><p>当相机渲染完毕后会自动调用</p></blockquote><blockquote><p>public static void Blit(Texture source, RenderTexture dest, Material mat);</p><p>在 Graphics 类中，相当于使用 mat材质 处理 source 并传给 dest，配合 OnRenderImage 方法使用，可以使用 mat材质 渲染屏幕。</p></blockquote><p>PosetEffectsBase.cs  改自 入门精要</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">namespace Render.PostEffect</span><br><span class="line">&#123;</span><br><span class="line">    using UnityEngine;</span><br><span class="line">    using System.Collections;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    [ExecuteInEditMode]</span><br><span class="line">    [RequireComponent(typeof(Camera))]</span><br><span class="line">    public class PostEffectsBase : MonoBehaviour</span><br><span class="line">    &#123;</span><br><span class="line">        public Shader PEShader;</span><br><span class="line">        private Material m_PEMat;</span><br><span class="line">        protected Material PEMat &#123; get</span><br><span class="line">            &#123; return m_PEMat = CheckShaderAndCreateMaterial(PEShader, m_PEMat);</span><br><span class="line">            &#125; &#125;</span><br><span class="line"></span><br><span class="line">        // Called when start</span><br><span class="line">        protected void CheckResources()</span><br><span class="line">        &#123;</span><br><span class="line">            bool isSupported = CheckSupport();</span><br><span class="line"></span><br><span class="line">            if (isSupported == false)</span><br><span class="line">            &#123;</span><br><span class="line">                NotSupported();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Called in CheckResources to check support on this platform</span><br><span class="line">        protected bool CheckSupport()</span><br><span class="line">        &#123;</span><br><span class="line">            if (SystemInfo.supportsImageEffects == false || SystemInfo.supportsRenderTextures == false)</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.LogWarning(&quot;This platform does not support image effects or render textures.&quot;);</span><br><span class="line">                return false;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Called when the platform doesn&apos;t support this effect</span><br><span class="line">        protected void NotSupported()</span><br><span class="line">        &#123;</span><br><span class="line">            enabled = false;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        protected void Start()</span><br><span class="line">        &#123;</span><br><span class="line">            CheckResources();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Called when need to create the material used by this effect</span><br><span class="line">        protected Material CheckShaderAndCreateMaterial(Shader shader, Material material)</span><br><span class="line">        &#123;</span><br><span class="line">            if (shader == null)</span><br><span class="line">            &#123;</span><br><span class="line">                return null;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (shader.isSupported &amp;&amp; material &amp;&amp; material.shader == shader)</span><br><span class="line">                return material;</span><br><span class="line"></span><br><span class="line">            if (!shader.isSupported)</span><br><span class="line">            &#123;</span><br><span class="line">                return null;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                material = new Material(shader);</span><br><span class="line">                material.hideFlags = HideFlags.DontSave;</span><br><span class="line">                if (material)</span><br><span class="line">                    return material;</span><br><span class="line">                else</span><br><span class="line">                    return null;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h3><p>可以看到其实并没有实现 OnRenderImage 也没有调用 Blit，这是因为对应的材质不同需要输入的一些参数也不同，我们通过继承这个 Base 脚本根据不同的效果传入不同的参数。</p><p>例如： PencilPE.cs  配合 PencilPE.shader 实现铅笔画风格</p><p><img src="http://106.13.190.225//imgs/2019/08/f7e08a46679ffc57.png" alt></p><p>PencilPE.cs</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">namespace Render.PostEffect</span><br><span class="line">&#123;</span><br><span class="line">    public class PencilPE : PostEffectsBase</span><br><span class="line">    &#123;</span><br><span class="line">        [Range(0, 0.5f)]</span><br><span class="line">        public float BlurOffset;</span><br><span class="line"></span><br><span class="line">        void OnRenderImage(RenderTexture src, RenderTexture dest)</span><br><span class="line">        &#123;</span><br><span class="line">            if (PEMat == null)</span><br><span class="line">                return;</span><br><span class="line"></span><br><span class="line">            PEMat.SetFloat(&quot;_BlurOffset&quot;, BlurOffset);</span><br><span class="line"></span><br><span class="line">            Graphics.Blit(src, dest, PEMat);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PencilPE.shader  其中的主要方法和 UI 的相同</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">Shader &quot;PostEffect/Sharp&quot;</span><br><span class="line">&#123;</span><br><span class="line">    Properties</span><br><span class="line">    &#123;</span><br><span class="line">        _MainTex (&quot;Texture&quot;, 2D) = &quot;white&quot; &#123;&#125;</span><br><span class="line">        _BlurOffset(&quot;Blur Offset&quot;, Range(0, 0.5)) = 0.05</span><br><span class="line">    &#125;</span><br><span class="line">    SubShader</span><br><span class="line">    &#123;</span><br><span class="line">        // No culling or depth</span><br><span class="line">        Cull Off ZWrite Off ZTest Always</span><br><span class="line"></span><br><span class="line">        Pass</span><br><span class="line">        &#123;</span><br><span class="line">            CGPROGRAM</span><br><span class="line">            #pragma vertex vert</span><br><span class="line">            #pragma fragment frag</span><br><span class="line"></span><br><span class="line">            #include &quot;UnityCG.cginc&quot;</span><br><span class="line"></span><br><span class="line">            #include &quot;Assets/XiaoxiaoShaderLab/PostEffect.cginc&quot;</span><br><span class="line">            #include &quot;Assets/XiaoxiaoShaderLab/Method.cginc&quot;</span><br><span class="line"></span><br><span class="line">            float _BlurOffset;</span><br><span class="line">        fixed4 ProcessColor(v2f IN)</span><br><span class="line">&#123;</span><br><span class="line"> float3x3 pencilFilter = </span><br><span class="line">                &#123;</span><br><span class="line">                    -0.5, -1.0, 0.0,</span><br><span class="line">                    -1.0,  0.0, 1.0,</span><br><span class="line">                     0.0,  1.0, 0.5</span><br><span class="line">                &#125;;</span><br><span class="line"></span><br><span class="line">                float4 filterCol = filterWithoutA(pencilFilter,_BlurOffset, _MainTex, IN.uv);</span><br><span class="line">                float gray = 0.3 * filterCol.x + 0.59 * filterCol.y + 0.11 * filterCol.z;</span><br><span class="line">                gray = 1.0 - gray;</span><br><span class="line">                return float4(gray, gray, gray, filterCol.a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">            v2f vert (appdata v)</span><br><span class="line">            &#123;</span><br><span class="line">                return vert_default(v);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            fixed4 frag (v2f i) : SV_Target</span><br><span class="line">            &#123;</span><br><span class="line">                return frag_default(i);</span><br><span class="line">            &#125;</span><br><span class="line">            ENDCG</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到 PencilPE.cs 只是实现了参数的改变并调用了核心方法，如果我们不想多写脚本可以试着，直接在 Base 类中 把 mat 作为面板上的参数，直接传入。</p><p>而具体 PencilPE.shader 以及调用的 .cginc 我们放到下篇来讲。</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shader </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity渲染管线（四） 渲染路径（待完善）</title>
      <link href="/2019/07/29/Unity/%E5%BD%92%E6%A1%A3/Unity/Unity%20%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
      <url>/2019/07/29/Unity/%E5%BD%92%E6%A1%A3/Unity/Unity%20%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>接下来我们要学习一下 SRP ，真正地从头开始渲染一个物体(虽然没那么底层啦)，在这之前我们要先对一些概念进行一下梳理，这节课是对 Unity 中 不同的渲染路径进行梳理。</p><p>参考文章</p><ul><li><a href="https://docs.unity3d.com/Manual/SL-RenderPipeline.html" target="_blank" rel="noopener">Unity’s Rendering Pipeline</a></li><li><a href="https://docs.unity3d.com/Manual/RenderTech-ForwardRendering.html" target="_blank" rel="noopener">Forward Rendering Path Details</a></li><li><a href="https://docs.unity3d.com/Manual/RenderTech-DeferredShading.html" target="_blank" rel="noopener">Deferred shading rendering path</a></li></ul><a id="more"></a><h2 id="渲染路径概览"><a href="#渲染路径概览" class="headerlink" title="渲染路径概览"></a>渲染路径概览</h2><blockquote><p>在 Unity 里，渲染路径决定了光照是如何应用到 Unity Shader 中的。</p><p>​                                                                                                                            ——Unity Shader 入门精要</p></blockquote><p>指定了不同的渲染路径，Unity 中的渲染管线才知道如何将光源、光照信息传到 Shader 中供开发者使用。</p><p>目前 Unity 的主流渲染路径是 前向渲染路径 和 延迟渲染路径，默认的都是前向渲染路径，LWRP 是支持前向或延迟渲染，我们在第二篇文章 LWRP 的使用中创建的渲染器也是 Forward Renderer。</p><p><img src="https://unixiao.gitee.io/imagebed/imgs/2019/07/0bdcc9c6af50cf0f.png" alt></p><h2 id="前向渲染路径"><a href="#前向渲染路径" class="headerlink" title="前向渲染路径"></a>前向渲染路径</h2><ul><li>原理：先对图元进行深度测试，如果通过则进行光照计算。对于每个逐像素光照，都需要进行一次，如果有N个物体，M个逐像素光源，则需要进行MxN个Pass。相当于是每判断一次进行一次渲染，会有重复渲染的部分。</li><li>设置：光源可以设置Render Mode，根据Render Mode 和 Quality Setting 中设置的 Pixel Light Count 来判断是否逐像素计算</li><li>两种Pass:<ul><li>Base Pass:<br>实现：光照纹理、环境光、自发光、阴影（平行光的阴影）；<br>一个逐像素的平行光，所有逐顶点、SH 光源<br>模板：Tag{“LightMode” = “ForwardBase”}<br>#pragma multi_compile_fwbase</li><li>Additional Pass:<br>实现：默认情况下不支持阴影，但可以通过使用 #pragma multi_compile_fwdadd_fullshadows 来开启<br>除了 Base Pass 之外影响该物体的逐像素光源，每个光源执行一次 Pass<br>模板：Tags{“LightMode” = “ForwardAdd”}<br>Blend One One<br>#pragma multi_compile_fwdadd</li></ul></li><li>在 Unity 使用前向渲染通道可以得到对应的</li></ul><h2 id="延迟渲染路径"><a href="#延迟渲染路径" class="headerlink" title="延迟渲染路径"></a>延迟渲染路径</h2><ul><li>原理：一般是两个 Pass，第一个 Pass 用来对场景中所有的片元进行 Ｇ缓冲，即当前片元可见则把其信息存储到 G缓冲区；在第二个 Pass 中，利用 G缓冲区的各个片元信息进行真正的光照计算。相当于是整体判断再统一做渲染。</li><li>总结：    对于场景中光源多的情况下，但是存在一些缺点。</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这次介绍比较笼统浅显，主要是对两种渲染路径的理解，以后会进行扩充，并对一些概念进行深入讲解。</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shader </tag>
            
            <tag> 渲染管线 </tag>
            
            <tag> 图形学 </tag>
            
            <tag> Unity渲染管线 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity渲染管线（三） 深度值、渲染队列</title>
      <link href="/2019/07/28/Unity/%E5%BD%92%E6%A1%A3/Unity/Unity%20%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2019/07/28/Unity/%E5%BD%92%E6%A1%A3/Unity/Unity%20%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>上一章讲了使用 LWRP 的 Renderer Feature 来实现遮挡显示轮廓的效果，这节课对应着来用 Shader 实现，让我们看一下具体 Renderer Feature 完成了 Shader 中的哪些操作</p><p><img src="https://unixiao.gitee.io/imagebed/imgs/2019/07/34d3261e83de3387.gif" alt="效果图"></p><p>另外，和上一节的效果相同，存在同一个BUG，使用同一个遮挡显示效果的 GameObject A与B，当都被遮挡住时，两者的轮廓不一定是A在前还是B在前，因为同一队列的两个物体不一定是谁先被渲染，目前没有找到控制该顺序的较好方法。</p><a id="more"></a><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ul><li><p>编写 “Custom/Shield/ShieldWhite” Pass，用于渲染遮挡后的效果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">​```Shader &quot;Custom/Shield&quot;</span><br><span class="line">&#123;</span><br><span class="line">SubShader</span><br><span class="line">&#123;</span><br><span class="line">Tags&#123; &quot;Queue&quot; = &quot;Geometry+200&quot;&#125;</span><br><span class="line"></span><br><span class="line">Pass</span><br><span class="line">&#123;</span><br><span class="line">Name &quot;ShieldWhite&quot;</span><br><span class="line">Tags &#123; &quot;LightMode&quot; = &quot;ForwardBase&quot;  &#125;</span><br><span class="line">ZTest Greater</span><br><span class="line">ZWrite off</span><br><span class="line"></span><br><span class="line">CGPROGRAM</span><br><span class="line"></span><br><span class="line">#pragma vertex vert</span><br><span class="line">#pragma fragment frag</span><br><span class="line"></span><br><span class="line">#include &quot;UnityCG.cginc&quot;</span><br><span class="line">#include &quot;Lighting.cginc&quot;</span><br><span class="line"></span><br><span class="line">struct appdata</span><br><span class="line">&#123;</span><br><span class="line">float4 vertex : POSITION;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">struct v2f</span><br><span class="line">&#123;</span><br><span class="line">float4 pos: SV_POSITION;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">v2f vert(appdata v)</span><br><span class="line">&#123;</span><br><span class="line">v2f o;</span><br><span class="line">o.pos = UnityObjectToClipPos(v.vertex);</span><br><span class="line">return o;</span><br><span class="line">&#125;</span><br><span class="line">float4 frag(v2f i) : SV_Target</span><br><span class="line">&#123;</span><br><span class="line">return float4(1,1,1,1);</span><br><span class="line">&#125;</span><br><span class="line">ENDCG</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Fallback off</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>选择一个平常的 Shader(这里采用的是简单带光照的一个卡通Shader)，并在 SubShader 的第一个 Pass 前调用 “Custom/Shield/ShieldWhite” ，并设置队列使其在大多数不透明物体之后渲染</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">Shader &quot;Master/Toon&quot;</span><br><span class="line">&#123;</span><br><span class="line">Properties</span><br><span class="line">&#123;</span><br><span class="line">_Diffuse(&quot;Diffuse&quot;,Color) = (1,1,1,1) // 基础色值</span><br><span class="line">&#125;</span><br><span class="line">SubShader</span><br><span class="line">&#123;</span><br><span class="line">Tags &#123; &quot;LightMode&quot; = &quot;ForwardBase&quot; &quot;Queue&quot; = &quot;Geometry+200&quot; &#125;</span><br><span class="line"></span><br><span class="line">//重点！！！</span><br><span class="line">UsePass &quot;Custom/Shield/ShieldWhite&quot;</span><br><span class="line"></span><br><span class="line">Pass</span><br><span class="line">&#123;</span><br><span class="line">Tags &#123; &quot;LightMode&quot; = &quot;ForwardBase&quot; &#125;</span><br><span class="line">ZTest on</span><br><span class="line">ZWrite on</span><br><span class="line"></span><br><span class="line">CGPROGRAM</span><br><span class="line"></span><br><span class="line">#pragma vertex vert</span><br><span class="line">#pragma fragment frag</span><br><span class="line"></span><br><span class="line">#include &quot;UnityCG.cginc&quot;</span><br><span class="line">#include &quot;Lighting.cginc&quot;</span><br><span class="line"></span><br><span class="line">struct appdata</span><br><span class="line">&#123;</span><br><span class="line">float4 vertex : POSITION;</span><br><span class="line">float2 uv : TEXCOORD0;</span><br><span class="line">float3 normal:NORMAL;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">struct v2f</span><br><span class="line">&#123;</span><br><span class="line">float4 pos: SV_POSITION;</span><br><span class="line">float3 color : Color;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">float4 _Diffuse;</span><br><span class="line"></span><br><span class="line">v2f vert(appdata v)</span><br><span class="line">&#123;</span><br><span class="line">v2f o;</span><br><span class="line"></span><br><span class="line">o.pos = UnityObjectToClipPos(v.vertex);</span><br><span class="line"></span><br><span class="line">fixed3 ambient = UNITY_LIGHTMODEL_AMBIENT.xyz;</span><br><span class="line"></span><br><span class="line">fixed3 worldNormal = normalize(mul(v.normal,(float3x3)unity_WorldToObject));</span><br><span class="line"></span><br><span class="line">fixed3 worldLight = normalize(_WorldSpaceLightPos0.xyz);</span><br><span class="line"></span><br><span class="line">fixed3 diffuse = _LightColor0.rgb * _Diffuse.rgb * saturate(dot(worldNormal, worldLight));</span><br><span class="line"></span><br><span class="line">o.color = ambient + diffuse;</span><br><span class="line"></span><br><span class="line">return o;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">float4 frag(v2f i) : SV_Target</span><br><span class="line">&#123;</span><br><span class="line">return fixed4(i.color,1.0);</span><br><span class="line">&#125;</span><br><span class="line">ENDCG</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">Fallback off</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li>然后创建两个 材质，把 Shader 挂上去，分别调整下颜色作为区分。在场景中新建两个 Plane，分别作为遮挡面的反面与正面，调整位置，便于查看各种不同情况的效果。<br>就可以得到对应的效果了。</li></ul><h2 id="原理讲解"><a href="#原理讲解" class="headerlink" title="原理讲解"></a>原理讲解</h2><ul><li>首先对于深度值写入来说，我们不希望加入的遮挡显示影响其他物体的渲染，即在渲染遮挡的部分的时候我们不会写入深度。<strong>即，渲染遮挡部分的 Pass  ZWrite off</strong></li><li>我们需要判断片元是否被遮挡，才能进行渲染被遮挡的部分为想要的效果。那我们就需要将 SubShader 队列 尽量设置到后面，只有当其他物体渲染完毕写入深度值后，才可以得知是否需要渲染成被遮挡的样子。<strong>即，在被应用的 Shader 的 SubShader Tag{“Queue” = “Geometry+200”}，队列尽量设置在后面</strong></li><li>被遮挡的部分判断我们使用深度值大于缓冲中的深度值，<strong>即，ZTest Greater</strong></li><li>由于我们不希望使用同一个遮挡效果的片元之间有互相的遮挡效果，那么我们就应该将遮挡显示轮廓效果的 Pass 放到正常显示的 Pass 之前，不然的话，先渲染了正常显示的部分，写入了深度值，再渲染遮挡现实效果的部分就会出现这样的效果。<br><img src="https://unixiao.gitee.io/imagebed/imgs/2019/07/7eaa3c60f7d9722b.png" alt></li></ul><p>大家可以更改一下 UsePass 的位置，更改一下深度测试、深度写入的开关或者更改一下队列值，会对整体的理解更深刻一些，或者使用 Windows—&gt;Analysis—&gt;FrameDebug 窗口一步步渲染看下效果。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>可以看到，其实使用 Shader 也比较方便，只需要自定义一个 Pass，但是不能根据层级筛选，并且需要手动在代码中修改，队列设置也需要在项目中规定好，而不是可视化地设置。</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shader </tag>
            
            <tag> 渲染管线 </tag>
            
            <tag> 图形学 </tag>
            
            <tag> Unity渲染管线 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity渲染管线（二） 深度值相关</title>
      <link href="/2019/07/28/Unity/%E5%BD%92%E6%A1%A3/Unity/Unity%20%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2019/07/28/Unity/%E5%BD%92%E6%A1%A3/Unity/Unity%20%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>咕咕咕了半个月。。</p><p>这次从通过 LWRP 的 Render Features 实现遮挡显示轮廓效果来让大家对渲染管线有一个大致的轮廓。</p><p>参考链接</p><ul><li><a href="https://blog.csdn.net/u010019717/article/details/89601586" target="_blank" rel="noopener">使用Unity2019 中LWRP，可以非常轻松地对被墙壁遮挡的角色进行剪影</a></li><li><a href="https://www.youtube.com/watch?v=jqBtaETaNO4" target="_blank" rel="noopener">Introduction to the Lightweight Render Pipeline - Unity at GDC 2019</a></li></ul><a id="more"></a><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>效果：</p><p><img src="https://unixiao.gitee.io/imagebed//imgs/2019/07/ea4cb53a70c3812e.gif" alt></p><p>是一个当固定层级物体被遮挡后显示轮廓的功能，使用 Shader 也可以完成，使用 LWRP 的 Render Features 的话完成的更直观一些。</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ul><li><p><img src="https://unixiao.gitee.io/imagebed/imgs/2019/07/0045d53ced9a80c0.png" alt><br><img src="https://unixiao.gitee.io/imagebed/imgs/2019/07/4a91a03e37b02761.png" alt="安装 LWRP"><br>此次运行版本需要 2019 四月份以后的版本，我选择的是 2019.1.9f1，在创建项目时直接创建 LWRP项目， LWRP 的版本要求是 5.7 以上，在 Windows—&gt;Package Manager 中下载。</p></li><li><p><img src="https://unixiao.gitee.io/imagebed/imgs/2019/07/358e998b5003662c.png" alt="勾选 pre"><br>需要勾选 show preview package 才能显示预览版的功能包。</p></li><li><p><img src="https://unixiao.gitee.io/imagebed/imgs/2019/07/00ab0e417a5fd83c.png" alt><br><img src="https://unixiao.gitee.io/imagebed/imgs/2019/07/527e632dfb752413.png" alt><br>分别创建 管线资源 和 前向渲染器</p></li><li><p><img src="https://unixiao.gitee.io/imagebed/imgs/2019/07/052c795cca26f788.png" alt><br><img src="https://unixiao.gitee.io/imagebed/imgs/2019/07/56f8b4dc7a393926.png" alt><br>在 Project Setting 中 将创建好的渲染管线拖入其中，把 LWRP资源的 渲染模式改为 Custom 并把创建的 前向渲染器资源 拖到 LWRP 资源中。</p></li><li><p><img src="https://unixiao.gitee.io/imagebed/imgs/2019/07/9ac8e5dc25c4c8cf.png" alt><br>新建一个场景，放置几个资源，会发现新建的 3D GameObjcet 使用了不同的 默认 Shader，这是由于更换了渲染管线，具体的 默认Shader 也随之改变了。</p></li><li><p><img src="https://unixiao.gitee.io/imagebed/imgs/2019/07/18c0cd2fe446e39e.png" alt><br><img src="https://unixiao.gitee.io/imagebed/imgs/2019/07/6980ff22ff7d9bcf.png" alt><br>在 前向渲染器 中添加如图所示的一个 RendererFeature，其中的材质是选择的一个 Unity 自带的默认材质，并把如图后面两个资源改为 Character 层级，得到的效果就像第二幅图一样，有个地方不尽人意，就是同为 Character 层级，也出现了遮挡后显示轮廓的效果。</p></li><li><p><img src="https://unixiao.gitee.io/imagebed/imgs/2019/07/e908447ad07013f1.png" alt><br>如图所示，将 ForwardRender 再新建一个 RenderFeatrues，并把 前向渲染器的 默认层级遮罩 取消掉勾选 Character 层级，就大致可以得到文章开头的效果了。</p></li><li><p><img src="https://unixiao.gitee.io/imagebed/imgs/2019/07/52f1d48711525585.png" alt><br><img src="https://unixiao.gitee.io/imagebed/imgs/2019/07/968711ac4aa47778.png" alt><br>存在一个问题，就是同层级的物体之间还是可能会有出现遮挡显示轮廓的效果，但我们可以把他们当做一体选择一个只有颜色没有轮廓的 材质 来做遮挡显示。</p></li></ul><h2 id="讲解"><a href="#讲解" class="headerlink" title="讲解"></a>讲解</h2><p>前面的创建与设置过程不做讲解，主要是一些默认操作，很多参数也是保持了默认。主要是对效果实现的讲解。</p><h3 id="原理科普"><a href="#原理科普" class="headerlink" title="原理科普"></a>原理科普</h3><ul><li><p>渲染队列</p><p>场景中有一个一个的 GameObject（下面简称为 GO），对于这些 GO，我们要根据其身上的材质进行渲染，这里有一个问题，即先渲染哪一个后渲染哪一个，不要以为渲染顺序不会影响最终效果，渲染顺序透明度实现上会产生很大的影响。</p><p>而这里使用 Rendere Feature 强行改变了渲染队列，以及后续渲染采用的 材质。</p></li><li><p>深度值 </p><p>即 Z。摄像机在游戏中相当于我们的眼睛，我们只能看到眼睛最前面的片元A，而看不到挡在后面的片元B，就是说B离我们远，抽象到渲染中就是 Z 值比较大，这样的话我们可以在渲染物体时判断其 Z值 是否大于当前存储的 Z值，如果大于就不渲染，如果小于就渲染，并把存储的 Z值 更新。</p><p>深度测试通过，深度写入开启：写入深度缓冲区，写入颜色缓冲区<br>深度测试通过，深度写入关闭：不写深度缓冲区，写入颜色缓冲区<br>深度测试失败，深度写入开启：不写深度缓冲区，不写颜色缓冲区<br>深度测试失败，深度写入关闭：不写深度缓冲区，不写颜色缓冲区</p></li></ul><ul><li><p>ZTest 深度值测试，通过测试才进行渲染<br> ZTest Less：深度小于当前缓存则通过<br> ZTest Greater：深度大于当前缓存则通过<br> ZTest LEqual/on：深度小于等于当前缓存则通过<br> ZTest GEqual：深度大于等于当前缓存则通过<br> ZTest Equal：深度等于当前缓存则通过<br> ZTest NotEqual：深度不等于当前缓存则通过<br> ZTest Always/off：不论如何都通过</p></li><li><p>ZWrite  on/off   深度值写入，当渲染通过是是否写入新的深度值</p><p>在 Renderer Feature 中，也是将这个深度测试与深度写入单独抽出来，在外部进行更改。</p></li></ul><h3 id="面板分析"><a href="#面板分析" class="headerlink" title="面板分析"></a>面板分析</h3><p><img src="https://unixiao.gitee.io/imagebed/imgs/2019/07/f0c87c41c8c2b572.png" alt><br>  让我们分析一下这个面板</p><ul><li>Deafult Layer Mask，这个分层级进行渲染，如果我们选择 Nothing，那么所有的层级都不会被渲染</li><li>Overrids，这个是指覆盖，即通过筛选之后得到需要进行操作的部分进行覆盖绘制，Stencil 这里没有用到，后续会进行讲解。</li><li>Renderer Features<ul><li>Name，Renderer Features 的名字</li><li>Event，指在什么时候进行操作</li><li>Fliters<ul><li>Queue，队列，Opaque 指筛选不透明的队列</li><li>Layer Mask，筛选 Character 层级</li><li>Shader Passes，具体使用到的 Shader Pass</li></ul></li><li>Overrieds  覆盖绘制<ul><li>Material 覆盖绘制的材质</li><li>Depth 深度<ul><li>是否把深度写入</li><li>是否测试深度，这里选择深度大于渲染过程中的深度值才进行渲染，即当物体深度值比较大被其他物体遮挡住的时候被渲染，也就是只有被遮挡的部分才会被渲染</li><li>其余待后续测试</li></ul></li></ul></li></ul></li></ul><h3 id="效果实现"><a href="#效果实现" class="headerlink" title="效果实现"></a>效果实现</h3><p><img src="https://unixiao.gitee.io/imagebed/imgs/2019/07/c55d508d32f8852e.png" alt></p><p><img src="https://unixiao.gitee.io/imagebed/imgs/2019/07/50318a9fed67dc34.gif" alt><br>实际上我们分为三个步骤</p><ul><li><p>对遮挡部分进行渲染，然后发现被同一层级遮挡的部分也被渲染了；</p></li><li><p>然后取消一开始对 Character 层级的渲染，即在 前向渲染器中 的 Deafult Layer Mask 取消对 Character 的勾选；</p></li><li><p>然后发现不被遮挡的部分不会被渲染，这个时候我们选择正常根据深度值缓存来渲染出不被遮挡的部分。</p></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>其实使用 Shader 我们一样可以实现相同的效果，甚至在原理上也差不多，但是使用编写的方式相当于改变了 Shader 效果本身，使用 RenderFeatures 相当于在外部来更改其一些参数来使用，把 Shader、材质当做对象在不同的条件下调用可以说是 渲染管线 的一部分责任。</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shader </tag>
            
            <tag> 渲染管线 </tag>
            
            <tag> 图形学 </tag>
            
            <tag> Unity渲染管线 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shader3_UI滤波扩展以及铅笔画效果</title>
      <link href="/2019/07/24/Unity/%E5%BD%92%E6%A1%A3/Unity/Shader3_UI%E6%BB%A4%E6%B3%A2%E6%89%A9%E5%B1%95%E4%BB%A5%E5%8F%8A%E9%93%85%E7%AC%94%E7%94%BB%E6%95%88%E6%9E%9C/"/>
      <url>/2019/07/24/Unity/%E5%BD%92%E6%A1%A3/Unity/Shader3_UI%E6%BB%A4%E6%B3%A2%E6%89%A9%E5%B1%95%E4%BB%A5%E5%8F%8A%E9%93%85%E7%AC%94%E7%94%BB%E6%95%88%E6%9E%9C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Pencil-铅笔画效果"><a href="#Pencil-铅笔画效果" class="headerlink" title="Pencil 铅笔画效果"></a>Pencil 铅笔画效果</h2><p><img src="https://unixiao.gitee.io/imagebed/imgs/2019/08/85072b634f10adec.png" alt><img src="https://unixiao.gitee.io/imagebed/imgs/2019/08/d2d636bd8e1058ce.gif" alt></p><a id="more"></a><p>最终效果就是这个样子啦，也是使用了上节课提到滤波，因为使用滤波可以让边界变得突出或者模糊，上节课是使用滤波让边界变得模糊，这节课就是使用滤波让边界突出，然后再进行一些颜色处理就可以了。</p><p>首先，明确一下铅笔画的数学含义，就是把将颜色连续的地方填充为白色，颜色不连续的地方即边界改为黑色，所以我们首先需要使用滤波让边界突出，就是让边界的颜色值变得更大，其余部分更小或者反过来，使用的滤波矩阵是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">float3x3 pencilFilter = </span><br><span class="line">             &#123;</span><br><span class="line">                 -0.5, -1.0, 0.0,</span><br><span class="line">                 -1.0,  0.0, 1.0,</span><br><span class="line">                  0.0,  1.0, 0.5</span><br><span class="line">             &#125;;</span><br></pre></td></tr></table></figure><p>让我们来分析一下这个矩阵，通过上节课我们知道对于坐标(x,y)来说，分别取自己和其余八个方位的颜色值与矩阵对应值的乘积做加法，那么就相当于是把左上角三个方位的颜色值和右下角的颜色值做了减法，可以想象，如果是连续的颜色的话做了减法基本上就为0了，因为左上颜色和右下颜色基本是一致的，而边界的话是不同的，得到值就不会是0，数值就分别开了。由于颜色值不能为0，这里我们对滤波方法进行扩充，最后的返回值加个 abs() 取绝对值方法再返回。</p><p>让我们看一下只做了滤波后的效果：<br><img src="https://unixiao.gitee.io/imagebed/imgs/2019/08/44af1ecd7dbc9b85.gif" alt></p><p>可以发现，颜色的确突出了，而且好像这个效果还挺不错。只是与模糊效果不同，我们希望他不要扩散到本来图片透明的地方，模糊效果倒是应该扩散到原本透明地方，毕竟重影嘛。为了实现不扩散到透明地方的效果，让我们再回顾一下之前的滤波方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">// 3x3 滤波</span><br><span class="line">    float4 filterWithA(float3x3 filter,float _BlurOffset, sampler2D tex, float2 coord)</span><br><span class="line">    &#123;</span><br><span class="line">                float4 outCol = float4(0,0,0,0);</span><br><span class="line">                for (int i = 0; i &lt; 3; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    for (int j = 0; j &lt; 3; j++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        //计算采样点，得到当前像素附近的像素的坐标</span><br><span class="line">                        float2 newUV= float2(coord.x + (i-1)*_BlurOffset, coord.y + (j-1)*_BlurOffset);</span><br><span class="line">                        //采样并乘以滤波器权重，然后累加</span><br><span class="line">                        outCol += tex2D(tex, newUV) * filter[i][j];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                //这里改了下位置。。之前不太对，虽然之前也是注释掉了</span><br><span class="line">//是否处理透明度 </span><br><span class="line">//outCol.a = tex2D(tex, coord).a;</span><br><span class="line">                return abs(outCol);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>可以发现，之前这个滤波方法在进行颜色混合师把透明度也按照比例进行了混合，我把方法重命名了，加了个 WithA 的后缀，即对透明度也进行滤波，我们把下面注释掉的那句代码改回来，意思是透明度维持原来图片的值不变。<strong>outCol.a = tex2D(tex, coord).a;</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">float4 filterWithoutA(float3x3 filter, float _BlurOffset, sampler2D tex, float2 coord)</span><br><span class="line">&#123;</span><br><span class="line">float4 outCol = float4(0, 0, 0, 0);</span><br><span class="line">for (int i = 0; i &lt; 3; i++)</span><br><span class="line">&#123;</span><br><span class="line">for (int j = 0; j &lt; 3; j++)</span><br><span class="line">&#123;</span><br><span class="line">//计算采样点，得到当前像素附近的像素的坐标</span><br><span class="line">float2 newUV = float2(coord.x + (i - 1)*_BlurOffset, coord.y + (j - 1)*_BlurOffset);</span><br><span class="line">//采样并乘以滤波器权重，然后累加</span><br><span class="line">outCol += tex2D(tex, newUV) * filter[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//是否处理透明度</span><br><span class="line">outCol.a = tex2D(tex, coord).a;</span><br><span class="line">return abs(outCol);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>让我们使用这个方法来看下效果<br><img src="https://unixiao.gitee.io/imagebed/imgs/2019/08/b430ec310bf5930a.gif" alt><br>达到效果啦！</p><p>然后我们需要做的是什么呢，把图片中黑色的部分(原先图片颜色连续的部分)改为白色，把有颜色的部分改为铅笔的颜色，这里黑色的部分改为白色很简单，黑色的RGB值是(0,0,0)，而白色是(1,1,1)，在 Shader 中都进行了归一化，只要用1-去颜色值就好了，1-0=1。</p><p>而把有颜色的部分改为铅笔的感觉就用到了灰度图的原理，使用公式将颜色转为灰色<br><img src="https://unixiao.gitee.io/imagebed/imgs/2019/08/be739070f55b35ee.png" alt></p><p>具体代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">fixed4 ProcessColor(v2f IN)</span><br><span class="line">&#123;</span><br><span class="line"> float3x3 pencilFilter = </span><br><span class="line">                &#123;</span><br><span class="line">                    -0.5, -1.0, 0.0,</span><br><span class="line">                    -1.0,  0.0, 1.0,</span><br><span class="line">                     0.0,  1.0, 0.5</span><br><span class="line">                &#125;;</span><br><span class="line"></span><br><span class="line">                float4 filterCol = filterWithoutA(pencilFilter,_BlurOffset, _MainTex, IN.texcoord);</span><br><span class="line">                float gray = 0.3 * filterCol.x + 0.59 * filterCol.y + 0.11 * filterCol.z;</span><br><span class="line">                gray = 1.0 - gray;</span><br><span class="line">                return float4(gray, gray, gray, filterCol.a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>依次进行了滤波、灰度图处理、1-操作</p><ul><li>滤波的效果是突出边界，把连续颜色值归为0。</li><li>灰度图处理的效果是把边界的颜色改为铅笔的效果，而黑色的地方是(0,0,0)，即使进行了灰度计算也还是(0,0,0)。</li><li>1- 操作就是将黑色部分变为了白色，铅笔画效果基本不变，或者说变成了1-，翻转的效果23333。</li></ul><p>另外最后返回的值中透明度使用的是 filterCol.a，即原图的透明度分布。对于导入的图片没有透明度通道的话，这个算法就会出现问题了，但是游戏开发中的图片一般都是具有透明度通道的，所以这个基本上够用了，如果没有透明度通道的话，所有的透明度都应该是1，在最后返回的值把 filter.a 改为 1 即可。</p><h2 id="滤波的其他效果"><a href="#滤波的其他效果" class="headerlink" title="滤波的其他效果"></a>滤波的其他效果</h2><p>通过学习了这两个例子我们可以发现滤波和颜色边界值是息息相关的，使用这个方法我们还可以实现很多有关边界的效果，这里提一个锐化，另外这个效果只需要改动滤波矩阵就可以实现了，大家可以尝试一下，锐化的效果是 边界两侧的颜色值相差越大边界的颜色就越突出，其他效果大家就多多探索吧！  <img src="https://unixiao.gitee.io/imagebed/imgs/2019/08/0c0d7993ae640d8c.gif" alt></p><p><strong>计算机图形学第一定律：如果它看起来是对的，那么它就是对的。</strong></p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shader </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shader2_UI模糊效果(滤波)</title>
      <link href="/2019/07/21/Unity/%E5%BD%92%E6%A1%A3/Unity/Shader2_UI%E6%A8%A1%E7%B3%8A%E6%95%88%E6%9E%9C(%E6%BB%A4%E6%B3%A2)/"/>
      <url>/2019/07/21/Unity/%E5%BD%92%E6%A1%A3/Unity/Shader2_UI%E6%A8%A1%E7%B3%8A%E6%95%88%E6%9E%9C(%E6%BB%A4%E6%B3%A2)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本章使用 滤波效果来介绍使用 .cginc。</p><p>模糊效果，其实模糊也可以称之为重影，一般的模糊是边线分的不太清，而用重影解释的话，就是由于出现多个边线叠在一起了。滤波是数学或者物理上的一个概念，总体可以理解成将波动较大的波变成相对平缓的波，如果清晰对应于边线明显、边线两边颜色值跳跃过大的话，模糊就对应于边线不清晰，颜色值过度平缓，所以使用滤波是可以达到这种效果的。这里先看一张模糊的效果图，可以发现模糊的比较厉害的时候就出现了很明显的多个影子。</p><p><img src="https://unixiao.gitee.io/imagebed/imgs/2019/08/dc2f9f1e87ff4dda.gif" alt></p><a id="more"></a><h2 id="滤波、模糊"><a href="#滤波、模糊" class="headerlink" title="滤波、模糊"></a>滤波、模糊</h2><p>filter 方法是一个支持 3x3 滤波矩阵的滤波方法，在上节课中，我们已经将该方法写到 .cginc 文件中了，只需要调用即可。</p><p>下面是关键部分代码。其实是针对每一个像素的颜色值，将其与周围八个像素的颜色值进行平均混合，如图，对于箭头所指向的像素点(请无视我的画工 ORZ)来说，就好比将中间的白色取 1/9，其余八个其他颜色的格子也各取1/9，然后加在一起，这就是滤波的原理，因为混合在了一起，所以颜色就会相对之前趋于平缓、模糊。</p><p><img src="https://unixiao.gitee.io/imagebed/imgs/2019/08/99eb1f3db60fd539.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">float _BlurOffset;</span><br><span class="line"></span><br><span class="line">fixed4 ProcessColor(v2f IN)</span><br><span class="line">&#123;          </span><br><span class="line">                float3x3 boxFilter = </span><br><span class="line">                &#123;</span><br><span class="line">                    1.0f/9, 1.0f/9, 1.0f/9, </span><br><span class="line">                    1.0f/9, 1.0f/9, 1.0f/9, </span><br><span class="line">                    1.0f/9, 1.0f/9, 1.0f/9, </span><br><span class="line">                &#125;;</span><br><span class="line">                </span><br><span class="line">                return filter(boxFilter,_BlurOffset, _MainTex,IN.texcoord);  </span><br><span class="line">&#125;</span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">float4 filter(float3x3 filter, sampler2D tex, float2 coord, float2 texSize)</span><br><span class="line">            &#123;</span><br><span class="line">                float4 outCol = float4(0,0,0,0);</span><br><span class="line">                for (int i = 0; i &lt; 3; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    for (int j = 0; j &lt; 3; j++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        //计算采样点，得到当前像素附近的像素的坐标</span><br><span class="line">                        float2 newCoord = float2(coord.x + (i-1)*_BlurOffset, coord.y + (j-1)*_BlurOffset);</span><br><span class="line">                        float2 newUV = float2(newCoord.x / texSize.x, newCoord.y / texSize.y);</span><br><span class="line">                        //采样并乘以滤波器权重，然后累加</span><br><span class="line">                        outCol += tex2D(tex, newUV) * filter[i][j];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                return outCol;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h2 id="具体代码-使用-cginc"><a href="#具体代码-使用-cginc" class="headerlink" title="具体代码 使用.cginc"></a>具体代码 使用.cginc</h2><p>具体 shader 代码如下，其中有一句  #include “Assets/Shader/UIDefault.cginc”，就把上节课的 .cginc 拿了过来，就可以使用其中的代码了。</p><p>有些部分还是得写在具体 Shader 中，而不能放到 .cginc，比如 Properities，自定义的属性，一些标签等。</p><p>由于我们实现模糊效果，只需要对颜色值进行一些操作，所以只需要自定义 ProcessColor 方法，在其中调用 filter实现，其余部分调用 vertdefault 和 fragdefault 即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">Shader &quot;UI/Blur&quot;</span><br><span class="line">&#123;</span><br><span class="line">    Properties</span><br><span class="line">    &#123;</span><br><span class="line">        [PerRendererData] _MainTex (&quot;Sprite Texture&quot;, 2D) = &quot;white&quot; &#123;&#125;</span><br><span class="line">        _Color (&quot;Tint&quot;, Color) = (1,1,1,1)</span><br><span class="line">        _BlurOffset(&quot;Blur Offset&quot;, Range(0, 0.5)) = 0.05</span><br><span class="line"></span><br><span class="line">        _StencilComp (&quot;Stencil Comparison&quot;, Float) = 8</span><br><span class="line">        _Stencil (&quot;Stencil ID&quot;, Float) = 0</span><br><span class="line">        _StencilOp (&quot;Stencil Operation&quot;, Float) = 0</span><br><span class="line">        _StencilWriteMask (&quot;Stencil Write Mask&quot;, Float) = 255</span><br><span class="line">        _StencilReadMask (&quot;Stencil Read Mask&quot;, Float) = 255</span><br><span class="line"></span><br><span class="line">        _ColorMask (&quot;Color Mask&quot;, Float) = 15</span><br><span class="line"></span><br><span class="line">        [Toggle(UNITY_UI_ALPHACLIP)] _UseUIAlphaClip (&quot;Use Alpha Clip&quot;, Float) = 0</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    SubShader</span><br><span class="line">    &#123;</span><br><span class="line">        Tags</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;Queue&quot;=&quot;Transparent&quot;</span><br><span class="line">            &quot;IgnoreProjector&quot;=&quot;True&quot;</span><br><span class="line">            &quot;RenderType&quot;=&quot;Transparent&quot;</span><br><span class="line">            &quot;PreviewType&quot;=&quot;Plane&quot;</span><br><span class="line">            &quot;CanUseSpriteAtlas&quot;=&quot;True&quot;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Stencil</span><br><span class="line">        &#123;</span><br><span class="line">            Ref [_Stencil]</span><br><span class="line">            Comp [_StencilComp]</span><br><span class="line">            Pass [_StencilOp]</span><br><span class="line">            ReadMask [_StencilReadMask]</span><br><span class="line">            WriteMask [_StencilWriteMask]</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Cull Off</span><br><span class="line">        Lighting Off</span><br><span class="line">        ZWrite Off</span><br><span class="line">        ZTest [unity_GUIZTestMode]</span><br><span class="line">        Blend SrcAlpha OneMinusSrcAlpha</span><br><span class="line">        ColorMask [_ColorMask]</span><br><span class="line"></span><br><span class="line">        Pass</span><br><span class="line">        &#123;</span><br><span class="line">            Name &quot;Default&quot;</span><br><span class="line">            CGPROGRAM</span><br><span class="line">            #pragma vertex vert</span><br><span class="line">            #pragma fragment frag</span><br><span class="line">            #pragma target 2.0</span><br><span class="line"></span><br><span class="line">            #include &quot;UnityCG.cginc&quot;</span><br><span class="line">            #include &quot;UnityUI.cginc&quot;</span><br><span class="line"></span><br><span class="line">            #pragma multi_compile __ UNITY_UI_CLIP_RECT</span><br><span class="line">            #pragma multi_compile __ UNITY_UI_ALPHACLIP</span><br><span class="line"></span><br><span class="line">#include &quot;Assets/Shader/UIDefault.cginc&quot;</span><br><span class="line"></span><br><span class="line">            float _BlurOffset;</span><br><span class="line">            fixed4 ProcessColor(v2f IN)</span><br><span class="line">&#123;          </span><br><span class="line">                float3x3 boxFilter = </span><br><span class="line">                &#123;</span><br><span class="line">                    1.0f/9, 1.0f/9, 1.0f/9, </span><br><span class="line">                    1.0f/9, 1.0f/9, 1.0f/9, </span><br><span class="line">                    1.0f/9, 1.0f/9, 1.0f/9, </span><br><span class="line">                &#125;;</span><br><span class="line">                </span><br><span class="line">                return filter(boxFilter,_BlurOffset, _MainTex,IN.texcoord);  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">            v2f vert(appdata_t IN) </span><br><span class="line">            &#123;</span><br><span class="line">                return vert_default(IN);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            fixed4 frag(v2f IN) : SV_Target </span><br><span class="line">            &#123;</span><br><span class="line">                return frag_default(IN);</span><br><span class="line">            &#125;</span><br><span class="line">           </span><br><span class="line">            ENDCG</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="滤波的其他用法"><a href="#滤波的其他用法" class="headerlink" title="滤波的其他用法"></a>滤波的其他用法</h2><p>其实不光是 模糊效果，其余效果使用该方法也很可以实现，想一想和周围的像素进行比例取样，很多关于边界的效果都可以实现，主要针对的就是 矩阵里面的数值。大家可以改改数值试试能不能得到一些有趣的效果。</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shader </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shader1_Unity 默认渲染管线 与 .cginc</title>
      <link href="/2019/07/21/Unity/%E5%BD%92%E6%A1%A3/Unity/Shader1_Unity%20%E9%BB%98%E8%AE%A4%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%20%E4%B8%8E%20.cginc/"/>
      <url>/2019/07/21/Unity/%E5%BD%92%E6%A1%A3/Unity/Shader1_Unity%20%E9%BB%98%E8%AE%A4%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%20%E4%B8%8E%20.cginc/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><strong>首先要有一个概念，即 渲染管线 和 Shader 是对应的，同一个 Shader 放到不同的渲染管线里可能就会出现问题。</strong></p><p>一般情况下我们使用的渲染管线都是 Unity 默认的渲染管线，使用的 Shader 默认也 Unity 提供相对应的默认 Shader，这里我们要继续使用 Unity 默认渲染管线，就最好在原有默认 Shader 的基础上进行修改，这样的话之前 默认Shader 的功能也不会丢失，也不容易出问题。</p><p>即对应不同种类 GameObject 的默认 Shader 相当于我们写 Shader 的模板，在初期很多东西都不了解的情况下，我们需要修改的东西很少很少，而 .cginc文件 相当于一个公共的库，使用 .cginc 可以把重复的部分单独抽出来，这样之后再写会节省很多时间，一些通用的图形学公式也可以放到 .cginc，使用的时候直接调用就可以了。</p><a id="more"></a><h2 id="获取-Unity-内置-Shader"><a href="#获取-Unity-内置-Shader" class="headerlink" title="获取 Unity 内置 Shader"></a>获取 Unity 内置 Shader</h2><p>首先是下载对应的 Unity 默认 Shader，我使用的是18.4.3f1，是长期支持的版本之一。</p><p><img src="https://unixiao.gitee.io/imagebed/imgs/2019/08/115c1c40db195d2c.png" alt></p><p>使用类似 VS Code 的文本工作环境打开整个文件夹，找到 UI-Deafult，默认情况下我们新建 UI/Image就是使用的这个Shader。</p><p><img src="https://unixiao.gitee.io/imagebed/imgs/2019/08/5bb597b258cc765d.png" alt></p><h2 id="集合到-cginc"><a href="#集合到-cginc" class="headerlink" title="集合到 .cginc"></a>集合到 .cginc</h2><p>这里我们新建一个 UIDefault.cginc 文件，用于保存默认的 UI-Default 模板，基本就是把 默认的 UI Shader 复制了过来。下面是一些解释，大家可以先略过，等想看的时候回头再来看。</p><ul><li>#include 了 .cginc，是为了后续调用对应的方法或者值，可以进到这两个文件中查看，在上一步下载到的目录中可以找到具体代码。</li><li>#pragma 是定义宏，在编译的时候可以选择合适的代码编译</li><li>两个 struct 直接 copy 过来，对应使用。</li><li>接下来是 UI 通用的一些属性</li><li>把 vert 和 frag 更改了名字，并在 frag 中修改了直接去颜色的方法，改成自定义的 ProcessColor，这样的话可以在外部进行自定义该方法，实现不同的效果。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line">#include &quot;UnityCG.cginc&quot;</span><br><span class="line">#include &quot;UnityUI.cginc&quot;</span><br><span class="line">// “multi_compile_instancing”会使你的Shader生成两个Variant，其中一个定义了Shader关键字INSTANCING_ON，另外一个没有定义此关键字。</span><br><span class="line">// 除了这个#pragma指令，下面所列其他的修改都是使用了在UnityInstancing.cginc里定义的宏（此cginc文件位于Unity_Install_Dir\Editor\Data\CGIncludes）。</span><br><span class="line">// 取决于关键字INSTANCING_ON是否被定义，这些宏将展开为不同的代码。</span><br><span class="line">#pragma multi_compile __ UNITY_UI_CLIP_RECT</span><br><span class="line">#pragma multi_compile __ UNITY_UI_ALPHACLIP</span><br><span class="line"></span><br><span class="line">// 其实是，传说中的 a2v 就是从 Unity App 传过来的数据</span><br><span class="line">struct appdata_t </span><br><span class="line">&#123;</span><br><span class="line">// 网格顶点 (一个 UIImage ，其实是两个三角形组成的矩形网格)</span><br><span class="line">float4 vertex   : POSITION;</span><br><span class="line">// 顶点的颜色（一般就是白色）</span><br><span class="line">float4 color    : COLOR;</span><br><span class="line">// 纹理坐标(俗称 uv)</span><br><span class="line">float2 texcoord : TEXCOORD0;</span><br><span class="line">// 用于在Vertex Shader输入 / 输出结构中定义一个语义为SV_InstanceID的元素。</span><br><span class="line">UNITY_VERTEX_INPUT_INSTANCE_ID</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 这个应该熟悉了，是 Vertex Shader to Fragment Shader Data</span><br><span class="line">struct v2f </span><br><span class="line">&#123;</span><br><span class="line">// 这个是三维转换为屏幕坐标之后的顶点</span><br><span class="line">float4 vertex   : SV_POSITION;</span><br><span class="line">// 顶点颜色</span><br><span class="line">fixed4 color : COLOR;</span><br><span class="line">// 纹理坐标（UV）</span><br><span class="line">float2 texcoord  : TEXCOORD0;</span><br><span class="line">// 世界坐标系其实是 三维的 vertex 坐标系</span><br><span class="line">float4 worldPosition : TEXCOORD1;</span><br><span class="line">// 不用管</span><br><span class="line">UNITY_VERTEX_OUTPUT_STEREO</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 用于计算的纹理 (UIImage 的 Sprite)</span><br><span class="line">sampler2D _MainTex;</span><br><span class="line">fixed4 _Color;</span><br><span class="line">// 用于采样叠加的纹理(不用管,是固定套路)</span><br><span class="line">fixed4 _TextureSampleAdd;</span><br><span class="line">float4 _MainTex_ST;</span><br><span class="line">// 裁剪区域(不用管)</span><br><span class="line">float4 _ClipRect;</span><br><span class="line"></span><br><span class="line">// 顶点着色器(固定套路)</span><br><span class="line">v2f vert_default(appdata_t IN) </span><br><span class="line">&#123;</span><br><span class="line">v2f OUT;</span><br><span class="line">// 这个宏必须在Vertex Shader的最开始调用，如果你需要在Fragment Shader里访问Instanced属性，</span><br><span class="line">// 则需要在Fragment Shader的开始也用一下。这个宏的目的在于让Instance ID在Shader函数里也能够被访问到。</span><br><span class="line">UNITY_SETUP_INSTANCE_ID(IN);</span><br><span class="line">UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(OUT);</span><br><span class="line"></span><br><span class="line">// 缓存三维顶点坐标</span><br><span class="line">OUT.worldPosition = IN.vertex;</span><br><span class="line"></span><br><span class="line">// 三维顶点坐标变换二维顶点坐标</span><br><span class="line">OUT.vertex = UnityObjectToClipPos(OUT.worldPosition);</span><br><span class="line">OUT.texcoord = TRANSFORM_TEX(IN.texcoord, _MainTex);</span><br><span class="line"></span><br><span class="line">OUT.texcoord = IN.texcoord;</span><br><span class="line"></span><br><span class="line">OUT.color = IN.color * _Color;</span><br><span class="line">return OUT;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fixed4 ProcessColor(v2f IN);</span><br><span class="line"></span><br><span class="line">// 片元着色器</span><br><span class="line">fixed4 frag_default(v2f IN)</span><br><span class="line">&#123;</span><br><span class="line">// 生成灰度颜色(不用考虑  lerp 只看 float4里的就好</span><br><span class="line">fixed4 color = (ProcessColor(IN)+ _TextureSampleAdd) * IN.color;</span><br><span class="line"></span><br><span class="line">// 下边就是固定套路</span><br><span class="line">    #ifdef UNITY_UI_CLIP_RECT</span><br><span class="line">    color.a *= UnityGet2DClipping(IN.worldPosition.xy, _ClipRect);</span><br><span class="line">    #endif</span><br><span class="line"></span><br><span class="line">#ifdef UNITY_UI_ALPHACLIP</span><br><span class="line">clip(color.a - 0.001);</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">return color;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 各种自定义方法</span><br><span class="line"></span><br><span class="line">// 3x3 滤波</span><br><span class="line">    float4 filter(float3x3 filter,float _BlurOffset, sampler2D tex, float2 coord)</span><br><span class="line">    &#123;</span><br><span class="line">                float4 outCol = float4(0,0,0,0);</span><br><span class="line">                for (int i = 0; i &lt; 3; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    for (int j = 0; j &lt; 3; j++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        //计算采样点，得到当前像素附近的像素的坐标</span><br><span class="line">                        float2 newUV= float2(coord.x + (i-1)*_BlurOffset, coord.y + (j-1)*_BlurOffset);</span><br><span class="line">                        //采样并乘以滤波器权重，然后累加</span><br><span class="line">                        outCol += tex2D(tex, newUV) * filter[i][j];</span><br><span class="line">//是否处理透明度</span><br><span class="line">//outCol.a = tex2D(tex, coord).a;</span><br><span class="line">                    &#125; </span><br><span class="line">                &#125;</span><br><span class="line">                return outCol;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="具体使用"><a href="#具体使用" class="headerlink" title="具体使用"></a>具体使用</h2><p>具体使用会讲解一个案例来使用，blur 效果。</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shader </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity渲染管线（一）</title>
      <link href="/2019/07/13/Unity/%E5%BD%92%E6%A1%A3/Unity/Unity%20%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2019/07/13/Unity/%E5%BD%92%E6%A1%A3/Unity/Unity%20%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>其实一直以来使用 Unity，我没有意识到图形渲染这一块，只是在考虑游戏的逻辑方面，即使后面接触到了 Shader 也没有考虑渲染管线，只是一直用 Unity 内置的渲染管线，知乎收藏了很多大佬的文章也没有看。后面学习 Shader 也是感觉不透彻，看了一些渲染管线的文章却感觉理解更透彻一些了，所以这里开个专栏梳理并尝试自己使用一下 Unity 提供的不同管线方案。</p><p>在我看来，Unity 中的渲染管线可以这样理解：通过摄像头、光源、游戏对象的数据，将游戏对象以某种形式表现在屏幕上，有时候可能会用不到光源甚至摄像头，例如 UI 系统就可以不需要摄像头，而默认的 2D 游戏不会用到光源。所以需要厘清在渲染时传入这三种对象的具体数据定义，会遇到一些比较难以理解的术语。</p><p>本专栏主要研究 SRP 与 LWRP，通过两种渲染管线快速理解渲染过程并制作自己的渲染管线。</p><a id="more"></a><p>参考文章</p><ul><li><a href="http://www.geekfaner.com/unity/blog13_SRP.html" target="_blank" rel="noopener">SRP</a></li><li><a href="https://unity.com/cn/srp" target="_blank" rel="noopener">SRP官方介绍</a>，含其他管线方案介绍视频，视频需要 fq，也有国内版</li><li><a href="https://unity.com/cn/lightweight-render-pipeline" target="_blank" rel="noopener">LWRP官方介绍</a></li><li><a href="https://connect.unity.com/events/2019_lwrp_new_features" target="_blank" rel="noopener">LWRP视频讲解</a></li><li><a href="https://zhuanlan.zhihu.com/p/35862626" target="_blank" rel="noopener">知乎SRP专栏</a></li><li><a href="https://zhuanlan.zhihu.com/p/72818693" target="_blank" rel="noopener">知乎HDRP项目</a></li><li><a href="https://zhuanlan.zhihu.com/p/67923713" target="_blank" rel="noopener">知乎2D光照系统</a></li></ul><h2 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h2><h3 id="五种渲染管线介绍"><a href="#五种渲染管线介绍" class="headerlink" title="五种渲染管线介绍"></a>五种渲染管线介绍</h3><p>Unity 目前来看可以分为五种渲染管线，<strong>Unity Build-in</strong>、<strong>SRP(Scriptable)</strong>、<strong>LWRP(轻量级)</strong>、<strong>HDRP(高清)</strong>、<strong>Custom RP</strong>，而 LWRP、HDRP 可以看做是 SRP 的一种，是官方目前提供的 SRP 的一种模板，根据名字也可以发现，LWRP 偏向性能，HDRP 偏向效果，截止到19.7.13，LWRP 结束了预览版本，而 HDRP 和 SRP 还是预览版本。</p><p>Unity Build-in 就是 Unity 默认一直在使用的渲染管线，优点是有很多的效果已经集成在里面了，很多内置的 Shader 可以直接拿来用，不过可能很多地方我们的游戏并没有用到，如果用起来感觉效果不太符合预期可能就要自己自定义管线了。</p><p>Custom RP，这个应该是难度最高的，是自己纯手撸一套管线，此专栏不做研究，Unity 官方也是建议先去考虑或学习 SRP 后再考虑或学习此方案，可以参考 <a href="https://unity.com/cn/srp" target="_blank" rel="noopener">SRP官方介绍</a> 中的视频(需fq)。</p><p>不同的管线在渲染路径、照明模型等各方面有着不同的方案，为的就是达到不同的目的，例如 LWRP 为了性能就对光源数量做了限制；自定义管线可以制作出更统一更合适的游戏风格，也可以更好地把控渲染的流程与性能。</p><p><img src="https://unixiao.gitee.io/imagebed/imgs/2019/07/b6320937926aeeae.png" alt="SRP常见问题"></p><h3 id="Shader-分类"><a href="#Shader-分类" class="headerlink" title="Shader 分类"></a>Shader 分类</h3><p>创建默认对应 GameObject，如 sprite 和 cube，查看其默认的材质以及材质上的 Shader 就可以发现一些不同的地方。</p><ul><li>根据接不接收光照分类<ul><li>不接收光照：Unity 的 2D 贴图、UI系统等默认其实都是不接收光照的 Shader，无论场景中是否有光源，都可以渲染出来，这是因为对应的 Shader 并没有对光照做处理，只是根据 GameObject 本身进行了渲染。</li><li>接受光照：Unity 的 3D对象默认是接收光照的，因为一张平面的图不接收光照我们可以直接描述出来其本来的样子，但是 3D 的不进行光照的话就感觉都是一个样子没有明暗对比，会看不出其是立体的。</li></ul></li></ul><hr><p>第一次先讲到这里0-0    很多地方可能落下了，可能也有一部分不够明确，大佬们多担待，后续会慢慢补充。</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shader </tag>
            
            <tag> 渲染管线 </tag>
            
            <tag> 图形学 </tag>
            
            <tag> Unity渲染管线 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实用Shader</title>
      <link href="/2019/07/11/Unity/%E5%BD%92%E6%A1%A3/Unity/%E5%AE%9E%E7%94%A8%20Shader/"/>
      <url>/2019/07/11/Unity/%E5%BD%92%E6%A1%A3/Unity/%E5%AE%9E%E7%94%A8%20Shader/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>实用的一些 Shader，语雀迁移</p><a id="more"></a><h2 id="2D-Shader"><a href="#2D-Shader" class="headerlink" title="2D Shader"></a>2D Shader</h2><p><a href="https://github.com/nightyan/Shader2D" target="_blank" rel="noopener">nightyan/Shader2D</a></p><p><a href="https://blog.csdn.net/ynnmnm/article/details/69791337" target="_blank" rel="noopener">CSDN说明地址</a></p><p>之后如果没有什么事情的话应该一天更新一个讲解</p><p>github 下载可能会比较慢或者下不下来，这里放到<a href="https://pan.baidu.com/s/1ZAqZRzeXlxcW62mPnF1w_Q" target="_blank" rel="noopener">百度云</a>上应该比较容易下载， 提取码：pw1u 。稍微改了一点之前的BUG，虽然有不少警告，不过至少看 Shader 效果是够了。</p><p>该项目的缺点以及改进</p><ul><li>另外，这个项目面板的位移和缩放，即 offset 和 tiling 是不可用的，如果需要只用在 vert 中修改一行代码就好了，即把下面的注释掉，加上上面的一行就可以了。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">o.texcoord.xy = TRANSFORM_TEX(v.texcoord, _MainTex);</span><br><span class="line">//o.texcoord = v.texcoord;</span><br></pre></td></tr></table></figure><ul><li>IN.color默认就是白色的，想要加上颜色调整的话，可以在面板上加个属性，然后在 vert 中给 o.color 赋值，之后在 frag 中进行了乘法的话就会实现对应的效果。</li></ul><p>其中可以分下类，这里可以先总体说明一下，可能和目录不是很对应，大体理解一下就好。</p><ul><li><p>Filter 用来算和周边八个位置的颜色的一些差异等。</p></li><li><p>有一些是通过固定的公式计算的，比如老照片效果、灰化效果、调整饱和度，都是有相关的数学公式，然后再转换成代码。</p></li><li><p>另外 UV 和 COLOR 的取值都是从0到1，COLOR 是 RGB 通道的。所以有时候会看到1-或者取绝对值的操作，前者可能是为了把偏白色变成偏黑色，后者可能是计算后有负数然后转换一下。</p></li><li><p>待总结</p></li></ul><h3 id="Filter-滤波操作"><a href="#Filter-滤波操作" class="headerlink" title="Filter 滤波操作"></a>Filter 滤波操作</h3><h4 id="Blur-模糊"><a href="#Blur-模糊" class="headerlink" title="Blur 模糊"></a>Blur 模糊</h4><p><img src="https://cdn.nlark.com/yuque/0/2019/png/227328/1547908110670-42a7fa71-3655-4a9e-8511-6a7eaadc520d.png#align=left&display=inline&height=294&originHeight=347&originWidth=686&status=done&width=582" alt>原理: 采样附近上下左右四个相邻像素的颜色，与当前像素颜色按比例混合（简单滤波） </p><p>这是最简单的滤波操作，只进行了上下左右四个位置上的颜色混合，没有使用到滤波函数，后面的进阶用到了，不过对于理解滤波也有帮助。vert 里面只是常规的操作，在 frag 函数中，把当前片元的颜色与上下左右四个位置的颜色进行了混合，然后输出，上下左右加上本身的颜色分别占比0.2。</p><p>Shader 中 有个 uvOffset，没有暴露在面板上，是通过脚本控制来实现这个值的赋值，进而控制模糊程度。Shader.SetGlobalFloat(“uvOffset”, (clearTime/length) * 0.005f);    原项目里是使用的这个API。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">Shader &quot;Custom/Blur&quot; &#123;</span><br><span class="line">    Properties &#123;</span><br><span class="line">        _MainTex (&quot;Base (RGB)&quot;, 2D) = &quot;white&quot; &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    SubShader</span><br><span class="line">    &#123;</span><br><span class="line">         Tags&#123;&quot;Queue&quot;=&quot;Transparent&quot;&#125;</span><br><span class="line">     </span><br><span class="line">        pass</span><br><span class="line">        &#123;</span><br><span class="line">            Cull Off</span><br><span class="line">            </span><br><span class="line">            CGPROGRAM</span><br><span class="line">            #pragma vertex vert</span><br><span class="line">            #pragma fragment frag</span><br><span class="line">           </span><br><span class="line">            #include &quot;UnityCG.cginc&quot;</span><br><span class="line">            sampler2D _MainTex;</span><br><span class="line">            float4 _MainTex_ST;</span><br><span class="line">            float uvOffset;</span><br><span class="line">           </span><br><span class="line">            struct v2f</span><br><span class="line">            &#123;</span><br><span class="line">                float4  pos : SV_POSITION;</span><br><span class="line">                float2  uv : TEXCOORD0;</span><br><span class="line">            &#125;;</span><br><span class="line">            </span><br><span class="line">            v2f vert (appdata_base v)</span><br><span class="line">            &#123;</span><br><span class="line">                v2f o;</span><br><span class="line">                o.pos = UnityObjectToClipPos(v.vertex);</span><br><span class="line">                o.uv =  TRANSFORM_TEX(v.texcoord,_MainTex);</span><br><span class="line">                return o;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            float4 frag (v2f i) : COLOR</span><br><span class="line">            &#123;</span><br><span class="line">                float4 s1 = tex2D(_MainTex, i.uv + float2(uvOffset,0.00));</span><br><span class="line">                float4 s2 = tex2D(_MainTex, i.uv + float2(-uvOffset,0.00));</span><br><span class="line">                float4 s3 = tex2D(_MainTex, i.uv + float2(0.00,uvOffset));</span><br><span class="line">                float4 s4 = tex2D(_MainTex, i.uv + float2(0.00,-uvOffset));</span><br><span class="line">               </span><br><span class="line">                float4 texCol = tex2D(_MainTex, i.uv);</span><br><span class="line">                float4 outp;</span><br><span class="line">                float pct = 0.2;</span><br><span class="line">                outp = texCol * (1- pct*4) + s1* pct + s2* pct+ s3* pct + s4* pct;</span><br><span class="line">                return outp;</span><br><span class="line">            &#125;</span><br><span class="line">            ENDCG</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Blur进阶，以及锐化"><a href="#Blur进阶，以及锐化" class="headerlink" title="Blur进阶，以及锐化"></a>Blur进阶，以及锐化</h4><p>BlurBox     效果: box模糊      原理: 采样周边8个相邻像素的颜色，与当前像素颜色按平均比例混合（Box滤波器）BlurGauss   效果: 高斯模糊     原理: 采样周边8个相邻像素的颜色，与当前像素颜色按比例混合（高斯滤波器）Sharpen     效果: 拉普拉斯锐化 原理: 先将自身与周围的8个象素相减，表示自身与周围象素的差别，再将这个差别加上自身作为新象素的颜色<img src="https://cdn.nlark.com/yuque/0/2019/png/227328/1547981944573-b5e48ac5-37c2-48a0-925b-bfedfdf4134d.png#align=left&display=inline&height=296&originHeight=607&originWidth=850&status=done&width=414" alt></p><p>这三种和 Blur 一样都是通过和周围颜色进行一些混合后进行的操作可以看到 filter 方法都一样，都是对周围八个方向进行颜色采样，通过不同的3x3矩阵进行配比相加，对应的3x3矩阵应该是通过数学计算得到的，不过也很容易理解，模糊就是周围颜色按比例混合使之模糊，锐化就是相减计算与周围颜色差异，差异越大边缘越明显。可以把 filter 滤波方法提取出来，滤波方法在第二个代码块中。</p><p>三个3x3矩阵分别是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">float3x3 boxFilter = </span><br><span class="line">                &#123;</span><br><span class="line">                    1.0f/9, 1.0f/9, 1.0f/9, </span><br><span class="line">                    1.0f/9, 1.0f/9, 1.0f/9, </span><br><span class="line">                    1.0f/9, 1.0f/9, 1.0f/9, </span><br><span class="line">                &#125;;</span><br><span class="line">Box模糊</span><br><span class="line"></span><br><span class="line"> float3x3 gaussFilter = </span><br><span class="line">                &#123;</span><br><span class="line">                    1.0f/16, 2.0f/16, 1.0f/16, </span><br><span class="line">                    2.0f/16, 4.0f/16, 2.0f/16, </span><br><span class="line">                    1.0f/16, 2.0f/16, 1.0f/16, </span><br><span class="line">                &#125;;</span><br><span class="line">高斯模糊</span><br><span class="line"></span><br><span class="line"> float3x3 laplaceFilter = </span><br><span class="line">                &#123;</span><br><span class="line">                    -1, -1, -1,</span><br><span class="line">                    -1,  9, -1,</span><br><span class="line">                    -1, -1, -1,</span><br><span class="line">                &#125;;</span><br><span class="line">拉普拉斯锐化</span><br></pre></td></tr></table></figure><p>三段代码都有两个 SubShader，其中第二个 LOD 100应该作为备用的，只贴出了对应的关键部分代码。LOD的使用方法是，找到小于等于当前 Shader LOD<br> 最大的那一个 SubShader 执行。</p><p>这里只放出一个的核心部分作为参考</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Shader &quot;Custom/BlurBox&quot;</span><br><span class="line"></span><br><span class="line">            //对图像做滤波操作</span><br><span class="line">            float4 filter(float3x3 filter, sampler2D tex, float2 coord, float2 texSize)</span><br><span class="line">            &#123;</span><br><span class="line">                float4 outCol = float4(0,0,0,0);</span><br><span class="line">                for (int i = 0; i &lt; 3; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    for (int j = 0; j &lt; 3; j++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        //计算采样点，得到当前像素附近的像素的坐标</span><br><span class="line">                        float2 newCoord = float2(coord.x + (i-1)*_BlurOffset, coord.y + (j-1)*_BlurOffset);</span><br><span class="line">                        float2 newUV = float2(newCoord.x / texSize.x, newCoord.y / texSize.y);</span><br><span class="line">                        //采样并乘以滤波器权重，然后累加</span><br><span class="line">                        outCol += tex2D(tex, newUV) * filter[i][j];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                return outCol;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            fixed4 frag (v2f IN) : COLOR</span><br><span class="line">            &#123;</span><br><span class="line">                float3x3 boxFilter = </span><br><span class="line">                &#123;</span><br><span class="line">                    1.0f/9, 1.0f/9, 1.0f/9, </span><br><span class="line">                    1.0f/9, 1.0f/9, 1.0f/9, </span><br><span class="line">                    1.0f/9, 1.0f/9, 1.0f/9, </span><br><span class="line">                &#125;;</span><br><span class="line">                </span><br><span class="line">                float2 coord = float2(IN.uv.x * _TexSize.x, IN.uv.y * _TexSize.y);</span><br><span class="line">                return filter(boxFilter, _MainTex, coord, _TexSize);</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h4 id="Pencil-效果-铅笔画描边"><a href="#Pencil-效果-铅笔画描边" class="headerlink" title="Pencil 效果: 铅笔画描边"></a>Pencil 效果: 铅笔画描边</h4><p>Pencil 效果: 铅笔画描边 原理: 如果在图像的边缘处，灰度值肯定经过一个跳跃，我们可以计算出这个跳跃，并对这个值进行一些处理，来得到边缘浓黑的描边效果，就像铅笔画一样。<img src="https://cdn.nlark.com/yuque/0/2019/png/227328/1548132110986-9be08ca6-c1e2-41db-bd6b-ebf74e968650.png#align=left&display=inline&height=177&originHeight=285&originWidth=559&status=done&width=348" alt></p><p>Pencil 用到了滤波方法，用来突出图像边缘，一般和周围片元进行一些操作的都会用到滤波，比如模糊、锐化、突出边缘等。这里先使用了 pencilFilter 来进行滤波，根据矩阵的分布可以看到是减去左上加上左下，是通过对比左上和左下的差异度得出边界。然后使用了灰度因子进行了灰度转换，然后进行了取绝对值和1-的操作，进行灰度转换是为了让颜色看起来统一，取绝对值并用1-操作是为了转换成为白色背景和黑色线条，否则效果相反。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">fixed4 frag (v2f IN) : COLOR</span><br><span class="line">            &#123;</span><br><span class="line">                float3x3 pencilFilter = </span><br><span class="line">                &#123;</span><br><span class="line">                    -0.5, -1.0, 0.0,</span><br><span class="line">                    -1.0,  0.0, 1.0,</span><br><span class="line">                     0.0,  1.0, 0.5</span><br><span class="line">                &#125;;</span><br><span class="line">                </span><br><span class="line">                float2 coord = float2(IN.uv.x * _TexSize.x, IN.uv.y * _TexSize.y);</span><br><span class="line">                float4 filterCol = filter(pencilFilter, _MainTex, coord, _TexSize);</span><br><span class="line">                float gray = 0.3 * filterCol.x + 0.59 * filterCol.y + 0.11 * filterCol.z;</span><br><span class="line">                gray = abs(gray);</span><br><span class="line">                gray = 1.0 - gray;</span><br><span class="line">                return float4(gray, gray, gray, 1);</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h3 id="Emboss-浮雕-以及-Gray-灰化"><a href="#Emboss-浮雕-以及-Gray-灰化" class="headerlink" title="Emboss 浮雕 以及 Gray 灰化"></a>Emboss 浮雕 以及 Gray 灰化</h3><p>浮雕原理: 图像的前景前向凸出背景。把象素和左上方的象素进行求差运算，并加上一个灰度(背景)。 灰化原理：进行灰度公式计算。</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/227328/1548066674487-bf01eacb-1f8e-4966-97cf-c529e8e56162.png#align=left&display=inline&height=168&originHeight=274&originWidth=545&status=done&width=335" alt><img src="https://cdn.nlark.com/yuque/0/2019/png/227328/1548068662122-a3cba1f5-0370-4ee5-9923-67ca199763fc.png#align=left&display=inline&height=107&originHeight=195&originWidth=354&status=done&width=195" alt></p><p>先讲解浮雕的计算，主要代码在 frag 中</p><ul><li>第一步是进行了与左上方像素的求差运算，这样就把边缘颜色突出出来了，不是边缘的颜色就基本为0，黑色。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">float2 leftUpUV = float2(IN.uv.x - 1/_TexSize.x, IN.uv.y - 1/_TexSize.y);</span><br><span class="line">fixed4 leftUpCol = tex2D(_MainTex, leftUpUV);</span><br><span class="line">fixed4 deffCol = col - leftUpCol;</span><br></pre></td></tr></table></figure><ul><li><p>第二步是进行了背景填充和灰度算法，就是把边缘进行了灰度处理</p><ul><li><p><img src="https://cdn.nlark.com/yuque/0/2019/png/227328/1548068105048-6feba29d-c99f-4aab-bb9c-ccfcd90c2b77.png#align=left&display=inline&height=201&originHeight=626&originWidth=886&status=done&width=284" alt></p></li><li><p>先是进行了边缘的 dot 点积运算，就是与灰度因子进行了乘法，使之颜色相对变灰。然后进行了背景填充，把非边缘的纯黑区域填充成了灰色，而原来的边缘部分也相应更加突出了。所谓的灰度因子也就是(0.3,0.59,0.11)吧（我猜的。。或者说个人理解）。</p></li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fixed4 outCol;</span><br><span class="line">                outCol.rgb = dot(deffCol, fixed3(0.3, 0.59, 0.11));</span><br><span class="line">                outCol = outCol + fixed4(0.5, 0.5, 0.5, 0);</span><br><span class="line">                outCol.a = col.a;</span><br><span class="line">                return outCol;</span><br></pre></td></tr></table></figure><p>这样灰化的原理就很简单了，只有一句关键代码col.rgb = dot(col.rgb, fixed3(0.3, 0.59, 0.11));    进行了灰度公式计算。</p><h3 id="Mosaic-效果-马赛克"><a href="#Mosaic-效果-马赛克" class="headerlink" title="Mosaic 效果: 马赛克"></a>Mosaic 效果: 马赛克</h3><p><img src="https://cdn.nlark.com/yuque/0/2019/png/227328/1548236328319-18c286f5-e0b4-459c-ac06-ddefe79b8e47.png#align=left&display=inline&height=204&originHeight=282&originWidth=578&status=done&width=419" alt>原理: n x n方块内取同一颜色</p><p>这里是采用了取整的方式实现了 nxn 方块内取同一颜色并没有判断每一个方块是否在对应的范围内，先是用从0到1的 UV 坐标值乘以贴图的长度避免取整后都为1了，再除以单个马赛克方格的边长这样除以同一个范围内的就会取得同一个整数值，最后用这个整数值除以贴图长度，就得到了对应位置的 UV 坐标值，然后通过 UV 值取得坐标，就得到了对应马赛克方格的颜色。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">fixed4 frag (v2f IN) : COLOR</span><br><span class="line">            &#123;</span><br><span class="line">                float pixelX = int(IN.uv.x * _TexSize.x / _SquareWidth) * _SquareWidth;</span><br><span class="line">                float pixelY = int(IN.uv.y * _TexSize.y / _SquareWidth) * _SquareWidth;</span><br><span class="line">                float2 uv = float2(pixelX / _TexSize.x, pixelY / _TexSize.y);</span><br><span class="line">                fixed4 col = tex2D(_MainTex, uv);</span><br><span class="line">                return col;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h3 id="OldPhoto-效果-老照片"><a href="#OldPhoto-效果-老照片" class="headerlink" title="OldPhoto 效果: 老照片"></a>OldPhoto 效果: 老照片</h3><p><img src="https://cdn.nlark.com/yuque/0/2019/png/227328/1548132139793-8ed24d1c-1c24-4bd2-b175-a6f606a4830a.png#align=left&display=inline&height=176&originHeight=322&originWidth=630&status=done&width=345" alt>OldPhoto 效果: 老照片 原理: r = 0.393<em>r + 0.769</em>g + 0.189<em>b; g = 0.349</em>r + 0.686<em>g + 0.168</em>b; b = 0.272<em>r + 0.534</em>g + 0.131*b; </p><p>对于  OldPhtoto，关键代码在 frag 中，代码很简单，就是套用了上面说的原理，RGB 分别做了不同的颜色获得操作，展示出老照片的效果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">fixed4 frag (v2f IN) : COLOR</span><br><span class="line">            &#123;</span><br><span class="line">                fixed4 col = tex2D(_MainTex, IN.texcoord);</span><br><span class="line">                fixed r = 0.393*col.r + 0.769*col.g + 0.189*col.b;</span><br><span class="line">                fixed g = 0.349*col.r + 0.686*col.g + 0.168*col.b;</span><br><span class="line">                fixed b = 0.272*col.r + 0.534*col.g + 0.131*col.b;</span><br><span class="line">                col.r = r;</span><br><span class="line">                col.g = g;</span><br><span class="line">                col.b = b;</span><br><span class="line">                return col;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h3 id="Saturation-效果-调整饱和度"><a href="#Saturation-效果-调整饱和度" class="headerlink" title="Saturation 效果: 调整饱和度"></a>Saturation 效果: 调整饱和度</h3><p><img src="https://cdn.nlark.com/yuque/0/2019/png/227328/1548237478702-f791aed1-24ed-4580-9b26-b2142dff2de4.png#align=left&display=inline&height=218&originHeight=255&originWidth=534&status=done&width=456" alt>原理: RGB转HSL，增加S再转回RGB</p><p>RGB 和 HSL 分别是颜色的不同标准，RGB是通过红绿蓝三个通道来表示;而 HLS 是用另三个通道来表示，Hue 色度, Lightness 亮度, Saturation 饱和度。</p><p>具体关于 RGB、HSL、HSB 的区别和转换可以参考这个答案 <a href="https://www.zhihu.com/question/22077462/answer/342570140" target="_blank" rel="noopener">色彩空间中的HSL、HSV、HSB有什么区别？</a>下面的代码应该就是对公式进行了代码化，加上用户对饱和度的调整最后输出新的 RGB 三通道的值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">float4 frag (v2f i) : COLOR</span><br><span class="line">            &#123;</span><br><span class="line">                float4 col = tex2D(_MainTex, i.uv);</span><br><span class="line">                float rgbmax = max(col.r, max(col.g, col.b));</span><br><span class="line">                float rgbmin = min(col.r, min(col.g, col.b));</span><br><span class="line">                float delta = rgbmax - rgbmin;</span><br><span class="line">                if (delta == 0)</span><br><span class="line">                    return col;</span><br><span class="line">                </span><br><span class="line">                float value = (rgbmax + rgbmin);</span><br><span class="line">                float light = value / 2;</span><br><span class="line">                float cmp = step(light, 0.5);</span><br><span class="line">                float sat = lerp(delta/(2-value), delta/value, cmp);</span><br><span class="line">                if (_SatIncrement &gt;= 0)</span><br><span class="line">                &#123;</span><br><span class="line">                    cmp = step(1, _SatIncrement + sat);</span><br><span class="line">                    float a = lerp(1-_SatIncrement, sat, cmp);</span><br><span class="line">                    a = 1/a - 1;</span><br><span class="line">                    col.r = col.r + (col.r - light) * a;</span><br><span class="line">                    col.g = col.g + (col.g - light) * a;</span><br><span class="line">                    col.b = col.b + (col.b - light) * a;</span><br><span class="line">                &#125;</span><br><span class="line">                else</span><br><span class="line">                &#123;</span><br><span class="line">                    float a = _SatIncrement;</span><br><span class="line">                    col.r = light + (col.r - light) * (1+a);</span><br><span class="line">                    col.g = light + (col.g - light) * (1+a);</span><br><span class="line">                    col.b = light + (col.b - light) * (1+a);</span><br><span class="line">                &#125;</span><br><span class="line">                return col;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h3 id="HDR-效果"><a href="#HDR-效果" class="headerlink" title="HDR 效果"></a>HDR 效果</h3><p>原理: 让亮的地方更亮，同时为了过渡更平滑柔和，亮度采用高斯模糊后的亮度（灰度值）<img src="https://cdn.nlark.com/yuque/0/2019/png/227328/1548336597077-0beb7b79-e4bd-41f9-8714-fcc5539e8904.png#align=left&display=inline&height=248&originHeight=451&originWidth=600&status=done&width=330" alt></p><p>这里只是套用了一个公式，简单的 2D HDR 效果。其中用了个高斯模糊后的纹理，是通过面板选择进去的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">// 调整亮度，让亮的地方更亮  公式: y = x * [(2-4k)*x + 4k-1]</span><br><span class="line">            float4 hdr(float4 col, float gray, float k)</span><br><span class="line">            &#123;</span><br><span class="line">                float b = 4*k - 1;</span><br><span class="line">                float a = 1 - b;</span><br><span class="line">                float f = gray * ( a * gray + b);</span><br><span class="line">                return f * col;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            fixed4 frag (v2f IN) : COLOR</span><br><span class="line">            &#123;</span><br><span class="line">                float4 col = tex2D(_MainTex, IN.uv);</span><br><span class="line">                float4 blurCol = tex2D(_BlowTex, IN.uv);// 高斯模糊后的纹理，让过渡更柔和、平滑</span><br><span class="line">                float gray = 0.3 * blurCol.r + 0.59 * blurCol.g + 0.11 * blurCol.b;</span><br><span class="line">//float gray = 0.3 * col.r + 0.59 * col.g + 0.11 * col.b;</span><br><span class="line">                return hdr(col, gray, _Param);</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h3 id="背景滚动（一般是作为移动场景背景表现使用）"><a href="#背景滚动（一般是作为移动场景背景表现使用）" class="headerlink" title="背景滚动（一般是作为移动场景背景表现使用）"></a>背景滚动（一般是作为移动场景背景表现使用）</h3><ul><li><p>效果展示<img src="https://cdn.nlark.com/yuque/0/2018/gif/227328/1545404140968-11c16321-50cf-4e9a-b448-107e4ca083be.gif#align=left&display=inline&height=226&originHeight=318&originWidth=351&status=done&width=250" alt></p></li><li><p>使用注意事项</p><ul><li><p>图片资源 要设置成 Repeat 模式，不然滚动会出现拖影的错误。</p></li><li><p>可以把 Sprite 放在 Camera 下，然后放大到填充整个摄像机范围，就可以很好实现远景滚动效果。</p></li><li><p>要把图片拖到材质上。</p></li><li><p>可以直接使用 Sprite GO，也可以新建类似 Quad 的 mesh 类型的 GO。 mesh 相关文章可以在理论部分查到，简单的说 mesh 包括了一个模型或者Sprite或者一个UI（即所有展示出来的东西）的所有信息。</p></li></ul></li><li><p>原理简单地通过调用时间参数移动了 uv 的位置。</p></li></ul><p>frac 是取小数的意思，float2 的 y 值为0，所以只会平移水平方向，竖直方向不会变，这个应该是为了实现循环滚动，只用从0到1的部分，不过具体 UV 的取值范围还没有详细去了解。  UV的取值范围是从(0,0)到(1,1)</p><blockquote><p>// Transforms 2D UV by scale/bias property</p><p>#define TRANSFORM_TEX(tex,name) (tex.xy * name##_ST.xy + name##_ST.zw)<br>配合使用时的代码：<br>o.uv = TRANSFORM_TEX (v.texcoord, _MainTex);<br>其中<br>v是appdata_base类型，v.texcoord就是模型顶点的uv数据。<br>_MainTex是使用的图片。<br>namexx_ST实际上就是_MainTex_ST。<br>namexx_ST.xy就是Tiling的xy值。<br>namexx_ST.zw就是Offset的xy值。</p><p>作者：HelloMingo<br>来源：CSDN<br>原文：<a href="https://blog.csdn.net/u010133610/article/details/78789940" target="_blank" rel="noopener">https://blog.csdn.net/u010133610/article/details/78789940</a><br>版权声明：本文为博主原创文章，转载请附上博文链接！</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">Shader &quot;Unity Shaders Book/Chapter 11/Scrolling Background&quot; &#123;</span><br><span class="line">Properties &#123;</span><br><span class="line">_MainTex (&quot;Base Layer (RGB)&quot;, 2D) = &quot;white&quot; &#123;&#125;</span><br><span class="line">_ScrollX (&quot;Base layer Scroll Speed&quot;, Float) = 1.0</span><br><span class="line">&#125;</span><br><span class="line">SubShader &#123;</span><br><span class="line">Tags &#123; &quot;RenderType&quot;=&quot;Opaque&quot; &quot;Queue&quot;=&quot;Geometry&quot;&#125;</span><br><span class="line"></span><br><span class="line">Pass &#123; </span><br><span class="line">Tags &#123; &quot;LightMode&quot;=&quot;ForwardBase&quot; &#125;</span><br><span class="line"></span><br><span class="line">CGPROGRAM</span><br><span class="line"></span><br><span class="line">#pragma vertex vert</span><br><span class="line">#pragma fragment frag</span><br><span class="line"></span><br><span class="line">#include &quot;UnityCG.cginc&quot;</span><br><span class="line"></span><br><span class="line">sampler2D _MainTex;</span><br><span class="line">float4 _MainTex_ST;</span><br><span class="line">float _ScrollX;</span><br><span class="line"></span><br><span class="line">struct a2v &#123;</span><br><span class="line">float4 vertex : POSITION;</span><br><span class="line">float4 texcoord : TEXCOORD0;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">struct v2f &#123;</span><br><span class="line">float4 pos : SV_POSITION;</span><br><span class="line">float2 uv : TEXCOORD0;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">v2f vert (a2v v) &#123;</span><br><span class="line">v2f o;</span><br><span class="line">o.pos = UnityObjectToClipPos(v.vertex);</span><br><span class="line">o.uv.xy = TRANSFORM_TEX(v.texcoord, _MainTex) + frac(float2(_ScrollX, 0.0) * _Time.y);</span><br><span class="line"></span><br><span class="line">return o;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fixed4 frag (v2f i) : SV_Target &#123;</span><br><span class="line">fixed4 firstLayer = tex2D(_MainTex, i.uv.xy);</span><br><span class="line"></span><br><span class="line">return firstLayer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ENDCG</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">FallBack &quot;VertexLit&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="背景滚动V0-0-2（根据输入进行滚动以及不规则图片的滚动问题）"><a href="#背景滚动V0-0-2（根据输入进行滚动以及不规则图片的滚动问题）" class="headerlink" title="背景滚动V0.0.2（根据输入进行滚动以及不规则图片的滚动问题）"></a>背景滚动V0.0.2（根据输入进行滚动以及不规则图片的滚动问题）</h3>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shader </tag>
            
            <tag> 2D </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用Shader函数</title>
      <link href="/2019/07/11/Unity/%E5%BD%92%E6%A1%A3/Unity/%E5%B8%B8%E7%94%A8%20Shader%20%E5%87%BD%E6%95%B0/"/>
      <url>/2019/07/11/Unity/%E5%BD%92%E6%A1%A3/Unity/%E5%B8%B8%E7%94%A8%20Shader%20%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>查找对应函数时用法时可以直接 Ctrl/Command + F</p><a id="more"></a><h2 id="Unity-内置辅助方法"><a href="#Unity-内置辅助方法" class="headerlink" title="Unity 内置辅助方法"></a>Unity 内置辅助方法</h2><p>摘自<a href="https://docs.unity3d.com/Manual/SL-BuiltinFunctions.html" target="_blank" rel="noopener">官方API文档 </a> 与  <a href="http://www.bubuko.com/infodetail-1551762.html" target="_blank" rel="noopener">民间汉化</a></p><h3 id="顶点变换函数-in-UnityCG-cginc"><a href="#顶点变换函数-in-UnityCG-cginc" class="headerlink" title="顶点变换函数 (in UnityCG.cginc)"></a>顶点变换函数 (in UnityCG.cginc)</h3><table><thead><tr><th>函数名</th><th>使用说明</th></tr></thead><tbody><tr><td>float4 UnityObjectToClipPos(float3 pos)</td><td>将点从对象空间转换为相机<br>齐次坐标下的剪辑空间。这相当于mul(UNITY_MATRIX_MVP，float4(pos，1.0))。</td></tr><tr><td>float3 UnityObjectToViewPos(float3 pos)</td><td>将点从对象空间转换为视图空间。这相当于mul(UNITY_MATRIX_MV，float4(pos，1.0)).xyz。</td></tr></tbody></table><h3 id="通用辅助函数-in-UnityCG-cginc"><a href="#通用辅助函数-in-UnityCG-cginc" class="headerlink" title="通用辅助函数 (in UnityCG.cginc)"></a>通用辅助函数 (in UnityCG.cginc)</h3><table><thead><tr><th>函数名</th><th>使用说明</th></tr></thead><tbody><tr><td>float3 WorldSpaceViewDir (float4 v)</td><td>返回从给定对象空间顶点位置到摄像机的世界空间方向（未归一化）。</td></tr><tr><td>float3 ObjSpaceViewDir (float4 v)</td><td>返回从给定对象空间顶点位置到相机的对象空间方向（未归一化）。</td></tr><tr><td>float2 ParallaxOffset (half h, half height, half3 viewDir)</td><td>计算视差法线映射的UV偏移。<a href="https://www.cnblogs.com/zdlbbg/p/4329514.html" target="_blank" rel="noopener">可参考文章</a><br>可以理解成针对摄像机角度做了处理的凹凸效果。</td></tr><tr><td>fixed Luminance (fixed3 c)</td><td>将颜色转换为亮度（灰度）。</td></tr><tr><td>fixed3 DecodeLightmap (fixed4 color)</td><td>从Unity光照贴图解码颜色（基于平台为RGBM 或dLDR）</td></tr><tr><td>float4 EncodeFloatRGBA (float v)</td><td>为储存低精度的渲染目标，编码[0..1)范围的浮点数到RGBA颜色。</td></tr><tr><td>float DecodeFloatRGBA (float4 enc)</td><td>解码RGBA颜色到float。</td></tr><tr><td>float2 EncodeFloatRG (float v)</td><td>编码到RG通道</td></tr><tr><td>float DecodeFloatRG (float2 enc)</td><td>从RG通道解码到浮点数</td></tr><tr><td>float2 EncodeViewNormalStereo (float3 n)</td><td>编码视图空间法线到在0到1范围的两个数。</td></tr><tr><td>float3 DecodeViewNormalStereo (float4 enc4)</td><td>从enc4.xy解码视图空间法线</td></tr></tbody></table><h3 id="正向渲染辅助函数-in-UnityCG-cginc"><a href="#正向渲染辅助函数-in-UnityCG-cginc" class="headerlink" title="正向渲染辅助函数 (in UnityCG.cginc)"></a>正向渲染辅助函数 (in UnityCG.cginc)</h3><table><thead><tr><th>float3 WorldSpaceLightDir (float4 v)</th><th>计算世界空间方向(非归一化),给定对象空间顶点位置。</th></tr></thead><tbody><tr><td>float3 ObjSpaceLightDir (float4 v)</td><td>计算对象空间方向(非归一化),给定对象空间顶点位置。</td></tr><tr><td>float3 Shade4PointLights (…)</td><td>从4个点光源计算亮度，来将光照数据牢固的装入向量中。正向渲染使用此来计算逐顶点光照。</td></tr></tbody></table><h3 id="屏幕辅助函数（in-UnityCG-cginc）"><a href="#屏幕辅助函数（in-UnityCG-cginc）" class="headerlink" title="屏幕辅助函数（in UnityCG.cginc）"></a>屏幕辅助函数（in UnityCG.cginc）</h3><table><thead><tr><th>float4 ComputeScreenPos (float4 clipPos)</th><th>计算用于执行屏幕空间映射纹理采样的纹理坐标。输入是剪辑空间位置。Computes texture coordinate for doing a screenspace-mapped texture sample. Input is clip space position.</th></tr></thead><tbody><tr><td>float4 ComputeGrabScreenPos (float4 clipPos)</td><td>计算纹理坐标以对抓取过程纹理进行采样。输入是剪辑空间位置。Computes texture coordinate for sampling a GrabPass texure. Input is clip space position.</td></tr></tbody></table><h3 id="顶点照明辅助函数（in-UnityCG-cginc）"><a href="#顶点照明辅助函数（in-UnityCG-cginc）" class="headerlink" title="顶点照明辅助函数（in UnityCG.cginc）"></a>顶点照明辅助函数（in UnityCG.cginc）</h3><table><thead><tr><th>float3 ShadeVertexLights (float4 vertex, float3 normal)</th><th>根据局部空间位置和法线，从4个逐顶点灯光和环境光计算亮度。<br>Computes illumination from four per-vertex lights and ambient, given object space position &amp; normal.</th></tr></thead></table><h2 id="Shader-数学函数-摘自-CSDN博文"><a href="#Shader-数学函数-摘自-CSDN博文" class="headerlink" title="Shader 数学函数 摘自 CSDN博文"></a>Shader 数学函数 摘自 <a href="https://blog.csdn.net/escapist_zw/article/details/82968820" target="_blank" rel="noopener">CSDN博文</a></h2><ol><li><p>abs(x) 返回输入参数的绝对值；</p></li><li><p>acos(x) 反余弦函数，输入参数范围[-1,1],返回[0,π]区间的角度值；</p></li><li><p>all(x) 如果输入的参数均不为0，则返回true，否则返回false；</p></li><li><p>any(x) 输入的参数只要有一个不为0，则返回true；</p></li><li><p>asin(x) 反正弦函数，输入的参数取值区间[-1,1],返回角度值范围为[-π/2,π/2];</p></li><li><p>atan(x) 反正切函数，返回角度值范围[-π/2,π/2];</p></li><li><p>atan2(y,x) 计算y/x的反正切值；</p></li><li><p>ceil(x) 对输入的参数向上取整；</p></li><li><p>clamp(x,a,b) 如果x小于a，返回a；x大于b，则返回b；否则，返回x；</p></li><li><p>cos(x) 返回x的余弦值，返回值范围[-1,1];</p></li><li><p>cosh(x) 双曲余弦函数，计算x的双曲余弦值；</p></li><li><p>cross(A,B) 返回两个三元向量的叉积，注意参数必须是三元向量；</p></li><li><p>degrees(x) 输入参数为弧度值，函数将其转换为角度值；</p></li><li><p>determinant(m) 计算矩阵的行列式因子；</p></li><li><p>dot(A,B) 返回A和B的点积，参数可以是标量，也可以是向量；</p></li><li><p>exp(x) 计算e^x的值，e=2.71828;</p></li><li><p>exp2(x) 计算2^x的值；</p></li><li><p>floor(x) 对输入的参数向下取整；</p></li><li><p>fmod(x,y) 返回x/y的余数。如果y为0，结果不可预料；</p></li><li><p>frac(x) 返回标量或者是每个向量组件的分数部分；</p></li><li><p>frexp(x,out exp) 将浮点数x分解为尾数和指数，x=m*2^exp返回m，并将指数存入exp中，如果x为0，则尾数和指数都返回0；（不是很明白？）</p></li><li><p>isfinite(x) 判断标量或者向量中的每个数据是否是无限，如果是返回true，否则返回false；</p></li><li><p>isnan(x) 判断标量或者向量中的每个数据是否是非数据，如果是返回true，否则返回false；</p></li><li><p>ldexp(x,n) 计算x*(2^n)的值；</p></li><li><p>lerp(a,b,f) 计算(1-f)<em>a + b*f 或者 a+f</em>(b-a)的值，即在下限a和上限b之间进行插值，f表示权值。注意，如果a和b是向量，则权值f必须是标量或者等长的向量；</p></li><li><p>lit(NdotL,NdotH,m) N表示法向量。L表示入射光向量。H表示半角向量。m表示高光向量。函数计算环境光，散射光，镜面光的贡献，返回四元向量： X表示环境光的贡献，总是1；Y表示散射光的贡献，如果N.L&lt;0,则为0，否则为N.L; Z表示镜面光的贡献，如果N.L&lt;0或者N.H&lt;0，则为0；否则为(N.H)^m;W始终为1；</p></li><li><p>log(x) 计算ln(x)的值，x必须大于0；</p></li><li><p>log2(x) 计算log2^x的值，x必须大于0；</p></li><li><p>log10(x) 计算log10^x的值，x必须大于0；</p></li><li><p>max(a,b) 比较两个标量或者等长向量元素，返回最大值；</p></li><li><p>min(a,b) 比较两个标量或者等长向量元素，返回最小值；</p></li><li><p>mul(M,N) 计算两个矩阵相乘，如果M为AxB矩阵，N为BxC矩阵，则返回AxC矩阵；</p></li><li><p>mul(M,v) 计算矩阵和向量相乘；</p></li><li><p>mul(v,M) 计算向量与矩阵相乘；</p></li><li><p>noise(x) 噪声函数，返回值始终在0-1之间，对于同样的输入，返回相同的值（也就是说并不是真正意义上的随机噪声）；</p></li><li><p>pow(x,y) 表示x^y;</p></li><li><p>radians(x) 函数将角度值转换成弧度值；</p></li><li><p>round(x) 四舍五入；</p></li><li><p>saturate(x) 如果x小于0，返回0；如果x大于1，返回1；否则返回x；</p></li><li><p>sign(x) 符号函数 ，如果x大于0，返回1；如果小于0，返回-1；否则返回0；</p></li><li><p>sin(x) 输入参数为弧度，计算正弦值，返回值范围[-1,1]；</p></li><li><p>sincos(float x ,out s, out c) 该函数是同时计算x的sin值和cos值，其中s=sin(x),c=cos(x),这样比分开计算要快；</p></li><li><p>smoothstep(min,max,x) x位于min和max之间，若x=min,返回0；若x=max,返回1；若x在两者之间，按下列公式返回数据：-2<em>((x-min)/(max-min))^3+3</em>((x-min)/(max-min))^2;</p></li><li><p>step(a,x) 若x&lt; a,返回0，否则返回1；</p></li><li><p>sqrt(x) 求x的平方根，x必须大于0；</p></li><li><p>tan(x) 输入参数为弧度，计算正切值；</p></li><li><p>tanh(x) 计算双曲正切值；</p></li><li><p>transpose(M) M为矩阵，计算其转置矩阵； </p></li><li><p>distance(pt1,pt2)  两点之间的欧几里得距离；</p></li><li><p>faceforword(N,I,Ng)   若Ng*I&lt;0,返回N，否则返回-N；</p></li><li><p>length(v)  返回一个向量的模；</p></li><li><p>normalize(v) 归一化向量；</p></li><li><p>reflect(I,N)   根据入射光方向向量，和顶点法向量N，计算反射光方向向量，其中I和N必须被归一化，需要注意的是：这个I是指向顶点的；函数只对三元向量有效；</p></li><li><p>refract(I,N,eta)  计算折射向量，I为入射光线，N为法向量，eta为折射系数；其中I和N必须被归一化，如果I和N之间夹角太大，则返回(0,0,0),也就是没有折射光线；函数只对三元向量有效； <br>纹理映射函数</p></li><li><p>tex1D(sampler1D tex,float s)  一维纹理查询；</p></li><li><p>tex1D(sampler1D tex, float s, float dsdx, float dsdy)   使用导数值查询一维纹理；</p></li><li><p>Tex1Dproj(sampler1D tex, float2 sq)  一维投影纹理查询；</p></li><li><p>Tex2D(sampler2D tex,float2 s)  二维查询纹理；</p></li><li><p>Tex2Dproj(sampler2D tex, float4 szq) 二维投影纹理查询；</p></li><li><p>Tex3D(sampler3D tex, float s)   三维纹理查询；</p></li><li><p>Tex3Dproj(sampler3D tex, float4 szq)   查询三维投影纹理，并进行深度值比较；</p></li><li><p>texCUBE(samplerCUBE tex, float3 s)    查询立方体纹理；</p></li><li><p>texCUBEproj (samplerCUBE tex, float4 sq)    查询立方体投影纹理；</p></li><li><p>ddx(a) 参数a对应一个像素位置，返回该像素值在X轴的偏导数；</p></li><li><p>ddy(a)  参数a对应一个像素位置，返回该像素值在X轴上的偏导数；</p></li><li><p>void debug(float4 x)    如果在编译时设置了debug，片段着色程序中调用该函数可以将值x作为COLOR语义的最终输出，否则该函数什么也不做；</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shader </tag>
            
            <tag> 查询 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编辑器思想之为什么做怎么做？</title>
      <link href="/2019/07/11/Unity/%E5%BD%92%E6%A1%A3/Unity/%E7%BC%96%E8%BE%91%E5%99%A8%E6%80%9D%E6%83%B3%E4%B9%8B%E4%B8%BA%E4%BB%80%E4%B9%88%E5%81%9A%E6%80%8E%E4%B9%88%E5%81%9A/"/>
      <url>/2019/07/11/Unity/%E5%BD%92%E6%A1%A3/Unity/%E7%BC%96%E8%BE%91%E5%99%A8%E6%80%9D%E6%83%B3%E4%B9%8B%E4%B8%BA%E4%BB%80%E4%B9%88%E5%81%9A%E6%80%8E%E4%B9%88%E5%81%9A/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这里的编辑器开发指的是针对游戏运行时功能开发的编辑器，更多是针对策划使用的，而不是一键生成脚本的这种。 像是程序自己使用方便自己、一键生成配置文件对应脚本之类的完全可以只做成一个按钮，因为程序使用的编辑器基本上只涉及到一些路径之类的参数，参数修改过一次后在项目开发中也不会去动，如果有改动也只需要在代码里修改就好了。</p><p>其实可能是我自己比较钻牛角尖，导致很多时候开发不必要的编辑器，到最后发现还不如直接改代码或者怎么样，切记…游戏开发是面向游戏的，开发工具也是面向工具的，而不是面向技术的…</p><a id="more"></a><h2 id="为什么要使用编辑器"><a href="#为什么要使用编辑器" class="headerlink" title="为什么要使用编辑器"></a>为什么要使用编辑器</h2><p>在游戏开发的过程中，有时候我们需要开发编辑器来使得工作更加便捷，有的模块只需要进行配置表格就可以，而有的模块由于外部的工具并不合适需要自行开发编辑器，比如用 Excel 编辑帧动画，虽然也可以做到但是会变得很难实时预览导致效率低下（拿Unity自带的编辑器举个栗子），但是例如一些语言表功能之类的，可能用配置表更合适，因为本身 Excel 或其他 文本编辑器 就包含了大部分文本操作的功能。</p><p>其实分析下来，无论是编辑器还是配置表甚至是 Unity，都需要有一个数据的保存以及其序列化的方式，把具体的部分进行数据结构的定义，然后选择保存的数据格式以及序列化的方法，在运行时载入到对应的 C#类中，可以以文本方式打开 Unity 的 prefab文件，就可以发现在 Unity 属性面板上填入的数据都已经在这个文本中了，具体可以参照此链接<a href="https://www.cnblogs.com/CodeGize/p/8697227.html" target="_blank" rel="noopener">Unity文件、文件引用、meta详解</a>。</p><p><img src="https://unixiao.gitee.io/imagebed/imgs/2019/07/d2fd7b95edcd0800.png" alt="编辑器与配置表的对比"></p><p>如上图一样，当编辑只需要进行文本的一些操作，那就使用配置表的方案，而需要实时查看一些效果或者需要对照图片、音乐等资源进行操作时就可以选择编辑器的方案。</p><h2 id="采用何种编辑器方案"><a href="#采用何种编辑器方案" class="headerlink" title="采用何种编辑器方案"></a>采用何种编辑器方案</h2><p>在进行编辑器制作的过程中，也要明确一些东西，编辑器不仅仅只有做 Unity Editor 的方案，还可以选择做运行时编辑器，做运行时编辑器的好处是通过接入同样逻辑的脚本可以在编辑的过程中看到和游戏运行时的一样的效果，方便测试，坏处也比较明显，可能要维护两份代码，复用性差一些，针对性强一些，实际上已经使用了编辑器就说明这个需求是针对某一类型甚至特定的游戏了。</p><p>另外在序列化的方面，有些插件习惯把数据保存到 Prefab 上，我感觉这种不太好，很容易造成数据的丢失，对 Prefab 的修改比较频繁是一方面，数据耦合在一起其实也容易出现一些问题，也不太合适做扩展。可以选择使用 Unity 的 ScriptableObject，在运行时动态载入，或者其他一些用的比较顺手的文件保存方法，毕竟数据的修改、展示都可以在编辑器中进行了，不用太在意数据保存方案本身的展示、编辑问题。</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏开发 </tag>
            
            <tag> 编辑器 </tag>
            
            <tag> 思想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>天才绿萝</title>
      <link href="/2019/07/10/%E8%AF%BB%E4%B9%A6/%E8%AF%BB%E4%B9%A6/%E5%A4%A9%E6%89%8D%E7%BB%BF%E8%90%9D/"/>
      <url>/2019/07/10/%E8%AF%BB%E4%B9%A6/%E8%AF%BB%E4%B9%A6/%E5%A4%A9%E6%89%8D%E7%BB%BF%E8%90%9D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="体会"><a href="#体会" class="headerlink" title="体会"></a>体会</h2><p>作者 蔡青<br>文艺小说  21000字</p><p><strong>自我的不妥协，每个人都是天才，每个人都有自己心中的那一团火，却被人看成烟。</strong></p><a id="more"></a><p>分类为文艺小说，的确有文艺的气息，整个故事也是围绕画画展开。全文以第一人称来写，感觉就是“我”的自我独白，叙述这些事情，所以很流畅，很亲近，也有了文艺的气息，让人感觉和现实脱离。</p><p>可能是之前先看了评论，看到开头引入了个比我小很多的一起学画画的绿萝，再结合天才绿萝的标题，自我代入了，以为绿萝是那种别人家的孩子，起跑线领先很多的那种，不自觉就代入了一二线大城市，不自觉以为是哪个别的国家的大都市，看到再后面才知道并不是这样，生生被拉进凡尘的感觉，加上绿萝的经历还有些悲剧，感觉有点难过和心疼。</p><p>理想终归还是理想，现实终归还是现实。</p><hr><h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>一千个读者一千个哈姆雷特，在我看来这是一部描写自我如何在社会中迷失，如何被柴米油盐淹没，而又如何去在洪流中保持，任性生活的小说。</p><p>小说描述了我和绿萝的故事，我比绿萝大10岁，在我18岁那年和绿萝相识。在我看来绿萝是一个画画的天才，然而所有人都没有那么认为，反而自认为没有绘画天赋的我成绩一直很理想表现也很优异。毕业后的我本可以继续深造，却放弃了深造回到了当初的培训机构——蓝鸟画社一家非常平民的培训机构当一名培训老师，在三年的时间里免费为绿萝提供一切任由她画画，蓝鸟可以给绿萝免费的培训课程。我也经常带着绿萝去看各种展览，我成了月光族，被别人当作异类。 </p><p>我不会去干扰绿萝的绘画，不会给她过多的指导，在我看来，那些指导恰恰是毁掉天才的做法。</p><p>我身边的男朋友好像都是因为绿萝的原因才离开的，不论是太穷了太富了太矮了太高了。</p><p>除了我支持绿萝的绘画，没有任何一个人再去支持，绿萝父母从小没有想过让绿萝画画，后来他们离婚，一直想着让绿萝去参加普通高考，他们负担不起绿萝的艺术之旅，也不愿去负担。</p><p>绿萝离开了。</p><p>我试着去找过绿萝，甚至给她的手机冲了话费，然而还是联系不上。</p><p>绿萝离开后我的第一任男朋友 林 回来了，林回来之后带着我去开办了一家培训机构，一切都在向着正常且富足的方向发展。一年后，我正真诚地迎合着林的情意时，绿萝打开了房门，我用被子裹住自己，林慌张穿上内裤，她径直走过来脱下衣服和我亲热起来，林是个自以为是的人，他整理了一下那半边床铺走了。</p><p>如果故事到这里结束的话，我可能会有些开心。但是，并没有。</p><p>绿萝走进了自己的房间，我想着等等要去上课，给绿萝留下了200块钱，还有一张纸条：等我回来。到了地方却发现培训机构没有人。回到公寓，绿萝走了，留下了她许许多多的画作，留下了她离开这段时间的故事。</p><ul><li>她被各种人推来推去，两个家庭都不愿意去承担，独自一人承受恶意并不好受，“他们的爱，只是见不得我的好”。</li><li>她被迫去做了那样的事情，却没有停止过画画。</li><li>最后一副画是关于我的，我不太敢看，更不太敢看背面写的字，“此生至爱，谢谢你让我看到了世界的另一面”。</li></ul><hr><h2 id="片段"><a href="#片段" class="headerlink" title="片段"></a>片段</h2><blockquote><p>我叫了一声“绿萝？”我想确认是她。<br>林本能地去抓他的内裤。<br>我用被子裹紧自己。<br>绿萝的表情淡然，她径直朝床上走过来。以前她也偶尔会撒娇地和我挤在一张床上睡觉。<br>她不看林一眼，只是将他往旁边推了推。那种不屑一顾的表情，令我毛骨悚然。<br>我心里清楚我现在应该做的正确的事情是喝止她，或者更正确的做法是将她赶出去。但是，我的喉咙仿佛被什么东西哽住了一样，我什么也说不出来。我只是目瞪口呆地呆在那里。<br>和我同样目瞪口呆的，还有林。<br>她脱去自己的衣服，伏在我的身上，开始亲吻我。旁若无人地，看上去十分熟稔，却又透着青涩。<br>我不知道自己怎么啦，我的思想已经完全停滞，我竟然连逃跑都做不到。我任由她做着不应该的事情，当着林的面。<br>她的舌头伸进了我的嘴里。我发誓，我并不喜欢这种感觉。但是，我本该吼叫着让她滚开的，但是我却放纵了她。<br>我眼角的余光看见林诧异的眼神，还有一种恍然大悟的顿悟感。该死的。我知道的，林最大的毛病就是自以为是。他一定以为他知道了真相。他一定会以为他终于知道了这一切是如何发生的。<br>他仔细地穿好了裤子，然后是上衣，还整了整他那半边的床铺，然后，他昂首挺胸地，走了。<br>他再也不欠我的了，如果他以前有过歉意的话。<br>摘自：《天才绿萝》 — 蔡青<br>在豆瓣阅读书店查看：<a href="https://read.douban.com/ebook/45957695/" target="_blank" rel="noopener">https://read.douban.com/ebook/45957695/</a><br>本作品由蔡青授权豆瓣阅读全球范围内电子版制作与发行。<br>© 版权所有，侵权必究。</p></blockquote><blockquote><p>然而，他的手机已经再也打不通了。我再看他的微信和QQ, 他所有的联系方式，全都消失了。看来他已经铁了心，快刀斩乱麻，这是他的风格。<br>我的心中腾地升起一团火焰。<br>林。<br>他已经将我设入了黑名单。这一世，他是再也不想见我。我就真的那么肮脏吗？<br>我无力地倒在画室的门廊里。我不知道为什么会这样？我好不容易建立起来的幸福感，原来一切都只是一个假象。但是，我能怪得了林吗？我该怪绿萝吗？这个小女生。<br>摘自：《天才绿萝》 — 蔡青<br>在豆瓣阅读书店查看：<a href="https://read.douban.com/ebook/45957695/" target="_blank" rel="noopener">https://read.douban.com/ebook/45957695/</a><br>本作品由蔡青授权豆瓣阅读全球范围内电子版制作与发行。<br>© 版权所有，侵权必究。</p></blockquote><blockquote><p>我仔细地打量那些人群，我仿佛看见父亲，母亲，那高耸着发髻的女人，老师，同学，那些木讷的面孔，那些麻木的人，这其中也有我吧？我不敢确认，我虽然没有直接赶走她，但是她父母来找过我以后的情绪波动一定是让敏感小心的她捕捉到了。<br>我在这幅画的背面，看见一排小字，他们的爱，只是见不得我的好。这是多么悲凉。<br>我不知道她何时画的这幅画和写下这行字。我抓了一包餐巾纸，不让自己的眼泪喷涌而出。我可以想象得出，她回去后，父亲和母亲家，继父，继母的脸色，两家的互相推诿，学校里老师对她成绩跟不上的冷淡，还有其他，我不知道的，她还在何处碰了多少壁，她才会画出那样绝望的眼神。让人一眼就感觉到寒冷，冷到了骨头里。<br>她的每一幅 […]她的每一幅画都是天才之作。我不知道她居然能画得这么好。我甚至要庆幸离开了我的指导，她的画才真正地脱了窠臼，有了思想。<br>这一幅是在KTV里的场景吧，女人们年轻，穿着清凉，男人们慵懒，眼神茫然却又透着欲望。其中一个应该是她。我不知道她用这样的方式赚过钱，维持自己的生活。<br>女孩子没钱，没人管，总是会滑到那一边去的。<br>还有一幅，她的同伴们在化妆，打闹，吃喝，在窗帘的后面的黑影里有一个人在画板上作画，旁边的人露出嘲笑的眼神。是的，她心中的火不曾熄灭过。虽然路过的人只是看到烟。<br>我的手停在纸箱底下的最后一幅画上。我甚至不敢将它取出来。因为我看见了黄色和绿色。我感觉这是与我有关的一幅画。我的直觉一向很好。在绘画方面，所以完全地否定自己其实是不对的。<br>果然，穿黄裙子的年轻女孩和绿裙的小女孩。那是我们初识时的样子。温馨，明亮，坦诚，这是没有一丝阴郁的一幅作品，和她其他的作品大相径庭，你甚至都要怀疑这幅画不是出自同一人之手。<br>我的眼泪再也挡不住，即使用一包餐巾纸堵住也没有用。我不敢翻过来，我害怕看见画的背后的字，我不知道她会写下什么。<br>“此生至爱，谢谢你让我看到了世界的另一面。”<br>摘自：《天才绿萝》 — 蔡青<br>在豆瓣阅读书店查看：<a href="https://read.douban.com/ebook/45957695/" target="_blank" rel="noopener">https://read.douban.com/ebook/45957695/</a><br>本作品由蔡青授权豆瓣阅读全球范围内电子版制作与发行。<br>© 版权所有，侵权必究。</p></blockquote><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我更想把这部小说的主旨看成是自我的不妥协，每个人都是天才，每个人都有自己心中的那一团火，却被被人看成烟。</p><p>绿萝一次次推开我身边的男朋友，让我的生活变得另类，让我的父母不以我为荣，但其实这都是我自己的做法，因为我知道，不这样做我就不是我了。这种感觉和月亮与六便士中的画家一样，被那种感觉强烈地攫住，不画画，毋宁死？<br>然而生活还是现实的，一次次对天才的扼杀，一次次的为你好，一次次的遭遇现实的残酷，艺术和理想毕竟是不能拿来吃的。<br>但是，有些人终究摆脱不了，也不愿摆脱，共勉。</p><p>阅读平台：豆瓣</p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文艺小说 </tag>
            
            <tag> 豆瓣阅读 </tag>
            
            <tag> 理想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏开发思想总结</title>
      <link href="/2019/06/30/Unity/%E5%BD%92%E6%A1%A3/Unity/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E6%80%9D%E6%83%B3%E6%80%BB%E7%BB%93/"/>
      <url>/2019/06/30/Unity/%E5%BD%92%E6%A1%A3/Unity/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E6%80%9D%E6%83%B3%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>真正的游戏开发并不是一味的追求技术，和所有的项目开发一样，是面向项目的。这里想记录一些自己关于游戏开发的想法，有游戏开发流程的，有针对不同游戏类型的，有针对不同游戏体量的，等等。</p><a id="more"></a><h2 id="关于配置文件"><a href="#关于配置文件" class="headerlink" title="关于配置文件"></a>关于配置文件</h2><ul><li><p>配置文件工具 <a href="https://git.dev.tencent.com/Xiaoxiao__/Excel2CSFromExcelLENT.git" target="_blank" rel="noopener">Excel</a></p></li><li><p>配置文件和协议交互的区别</p><p><img src="https://i.loli.net/2019/07/03/5d1ca42b4fbc118215.png" alt></p></li></ul><h2 id="关于游戏类型"><a href="#关于游戏类型" class="headerlink" title="关于游戏类型"></a>关于游戏类型</h2><h2 id="关于游戏体量"><a href="#关于游戏体量" class="headerlink" title="关于游戏体量"></a>关于游戏体量</h2>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏开发 </tag>
            
            <tag> 思想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小偷家族</title>
      <link href="/2019/06/22/%E7%94%B5%E5%BD%B1/%E7%94%B5%E5%BD%B1/%E5%B0%8F%E5%81%B7%E5%AE%B6%E6%97%8F/"/>
      <url>/2019/06/22/%E7%94%B5%E5%BD%B1/%E7%94%B5%E5%BD%B1/%E5%B0%8F%E5%81%B7%E5%AE%B6%E6%97%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>是18年的电影了，记得电影院上映的时候，她还去看了。</p><p>一直想看没有看，拖到了19年才在B站上看的。</p><p>真可爱。</p><p><img src="https://unixiao.gitee.io/imagebed/imgs/2020/03/96389068d8a3388f.png" alt></p><a id="more"></a><h2 id="初看"><a href="#初看" class="headerlink" title="初看"></a>初看</h2><p>一共看了两次。  一次是自己用室友的bilibili大会员在宿舍看的，一次是在家里从半截开始看的。</p><p>情节从一开始的日常到后面的反转，蕴含着一些触动人的东西。</p><p>是枝裕和的电影也看过《步履不停》，原著也看了，是一种从平常中透露力量的艺术表现形式。</p><p>一句话，一个眼神，一个动作，一个画面。</p><p><strong>《小偷家族》也是这样，日常生活的一点点铺叙，给观众一丝丝地透露细节，埋下伏笔。等到并没有给观众隐藏的真实情况爆发时，让人去想，到底哪样才是对的呢，这样或许也不错？</strong></p><p>活着真的是很实在的一件事情。</p><h2 id="次看"><a href="#次看" class="headerlink" title="次看"></a>次看</h2><p>第二次看的时候是一家人一起，爸妈还有妹妹，不同的观念在那里。</p><p>已经忘了自己当时的一些想法。。   拖了好久的文章了。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>有想说的话再说吧。</p><p>当作A站头像的小女孩，真的很像，表情很像。</p>]]></content>
      
      
      <categories>
          
          <category> 电影 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本电影 </tag>
            
            <tag> 是枝裕和 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ProtocolBuf 协议</title>
      <link href="/2019/06/22/Unity/%E5%BD%92%E6%A1%A3/Unity/ProtocolBuf/"/>
      <url>/2019/06/22/Unity/%E5%BD%92%E6%A1%A3/Unity/ProtocolBuf/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>主要参考 <a href="https://zhuanlan.zhihu.com/p/41206307" target="_blank" rel="noopener"><strong>知乎上皮皮关专栏</strong></a></p><blockquote><p>今天主角是来自谷歌的——Protocol Buffer，简称protobuf。英文直译过来就是协议缓冲区。是一种独立于语言，独立于平台的数据交换格式。<br>protobuf有自己专用的描述文件(.proto)，有自己的编译器protoc与对多种编程语言提供的API。<br>主要作用在于为数据储存、网络通信等提供一种基于二进制的格式，是一种高效率的序列化工具。<br>想必熟悉编程的小伙伴们一定对序列化有所认识，特别是Json，XML这一类比较常用的数据交换格式。</p></blockquote><a id="more"></a><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><p><a href="https://github.com/protocolbuffers/protobuf" target="_blank" rel="noopener"><strong>谷歌项目地址</strong></a></p><p><a href="https://github.com/Orangexx/ProtocForUnity" target="_blank" rel="noopener"><strong>项目示例</strong></a>，使用3.7.1版本，后续版本引入 system.memory，Unity 使用的是 .net framework，并没有 system.memory，而 .net core 中有，还未尝试自行引入行不行。</p><ul><li><p>下载对应版本对应语言的项目代码。</p><p><img src="https://i.loli.net/2019/07/03/5d1c76d51354962546.png" alt></p></li><li><p>编译后得到对应的 .dll文件 并导入 Unity 中，这里的示例不光导入了最原始的 Protoc库 也导入了对应的 Json库。</p><p><img src="https://i.loli.net/2019/07/03/5d1c776339bcb89557.png" alt></p><p><img src="https://i.loli.net/2019/07/03/5d1cb11ec9b5310628.png" alt></p></li></ul><ul><li><p>下载对应的根据.protoc 生成代码工具，并使用批处理命令批量处理。参考<a href="https://blog.csdn.net/qq_15020543/article/details/87877353" target="_blank" rel="noopener">自动生成(使用.bat批处理命令)</a>，示例中也进行了整合。</p><p><img src="https://i.loli.net/2019/07/03/5d1c76f7b983211627.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">for %%i in (*.proto) do (</span><br><span class="line">    protoc --csharp_out=../ProtocCS/ %%i</span><br><span class="line">    rem 从这里往下都是注释，可忽略</span><br><span class="line">    echo From %%i To %%~ni.cs Successfully!  </span><br><span class="line">)</span><br><span class="line">pause</span><br></pre></td></tr></table></figure></li><li><p>最后一步，整合到 Unity 项目中。具体可以参照示例。</p></li></ul><h2 id="Protoc-语法"><a href="#Protoc-语法" class="headerlink" title="Protoc 语法"></a>Protoc 语法</h2><p><a href="https://developers.google.com/protocol-buffers/" target="_blank" rel="noopener"><strong>官方文档</strong></a>  需要梯子</p><p><a href="https://blog.csdn.net/u011518120/article/details/54604615/" target="_blank" rel="noopener"><strong>翻译参考</strong></a></p><h2 id="Protoc-调用方法"><a href="#Protoc-调用方法" class="headerlink" title="Protoc 调用方法"></a>Protoc 调用方法</h2><p><a href="https://developers.google.com/protocol-buffers/" target="_blank" rel="noopener"><strong>官方文档</strong></a>  需要梯子</p><p><a href="https://blog.csdn.net/u011518120/article/details/54604615/" target="_blank" rel="noopener"><strong>翻译参考</strong></a></p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> 游戏开发 </tag>
            
            <tag> 序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows操作技巧 (持续更新中~~~)</title>
      <link href="/2019/06/15/%E5%99%A8/%E5%90%9B%E5%AD%90%E4%B8%8D%E5%99%A8%E4%BD%86%E7%94%A8%E5%99%A8/Windows%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/"/>
      <url>/2019/06/15/%E5%99%A8/%E5%90%9B%E5%AD%90%E4%B8%8D%E5%99%A8%E4%BD%86%E7%94%A8%E5%99%A8/Windows%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>一些平时可能用到或用不到的小技巧</p><a id="more"></a><h2 id="将-exe-文件添加到右键"><a href="#将-exe-文件添加到右键" class="headerlink" title="将 .exe 文件添加到右键"></a>将 .exe 文件添加到右键</h2><p>可能不同类型的文件需要放在不同的地方，例如有些是需要选中文件才要打开，有些是在文件夹下就可以打开，有些可能还需要加入一些参数，总的来说可以参考其他鼠标右键扩展的设置。下面两个参考有根据不同的可执行文件进行了不同路径的配置。<br><a href="https://www.cnblogs.com/cn2018/p/10273261.html" target="_blank" rel="noopener">参考链接1</a>、<a href="https://www.cnblogs.com/rnckty/p/7607445.html" target="_blank" rel="noopener">参考链接2</a>，总结来说就是通过注册表添加 .exe 路径，和图标路径(图标路径可有可无)。<br><img src="https://i.loli.net/2019/06/15/5d046c8a8222a96837.png" alt="参考链接1示例"><br><img src="https://i.loli.net/2019/06/15/5d046cadeec7379078.png" alt="参考链接2示例"></p>]]></content>
      
      
      <categories>
          
          <category> 器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 小技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>外设记录</title>
      <link href="/2019/06/15/%E5%99%A8/%E5%90%9B%E5%AD%90%E4%B8%8D%E5%99%A8%E4%BD%86%E7%94%A8%E5%99%A8/%E5%A4%96%E8%AE%BE%E8%AE%B0%E5%BD%95/"/>
      <url>/2019/06/15/%E5%99%A8/%E5%90%9B%E5%AD%90%E4%B8%8D%E5%99%A8%E4%BD%86%E7%94%A8%E5%99%A8/%E5%A4%96%E8%AE%BE%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>键鼠啥的</p><a id="more"></a><h2 id="键盘"><a href="#键盘" class="headerlink" title="键盘"></a>键盘</h2><h3 id="京东K1矮红轴机械键盘"><a href="#京东K1矮红轴机械键盘" class="headerlink" title="京东K1矮红轴机械键盘"></a>京东K1矮红轴机械键盘</h3><ul><li><p>初衷：看到有出矮红轴，就打算试试，一个是键程短的键盘很适合玩需要手速的游戏，比如说DNF和LOL，但是普通的巧克力键盘是没有全键无冲的，所以想买矮轴机械键盘；另一个是因为矮轴的都看了，这款87的布局是最合理的，而且还有键线分离，适合需要高反应速度的游戏。选红轴只是因为感觉红轴可能声音轻点，加上本身对于红轴的好感，京东也没有红轴的货了猜想是卖断了，但没想到…</p></li><li><p>到手：到手第一感觉是太拘束了，手太局促了，键帽做得太小，可能是为了扩大间隙；矮轴加红轴可能不是一个好的组合，太容易直接到底，有很轻很轻的黑轴的感觉，会顶到手。所以这两点来看大手最好不要买。</p></li><li><p>反思：一开始这个的定位就不符合我的初衷吧，应该是偏向办公和轻度的，还有蓝牙适合外带，而不是我这种想着无冲加巧克力的组合，或许买茶轴、青轴这种有段落感的会好很多，因为阻力大一些，但键帽过小这个事情就没办法了。后续再使用试试，毕竟才刚上手没有多久，不知道为什么打字的时候老是会空格按不出来，可能是因为太灵敏了，先按到了其他的键？。。</p></li><li><p>经过了一晚上的使用，差不多已经习惯了这个K1键盘，但是大键还是感觉有点不对劲，说肉不肉说硬不硬的，小键的确还是硬，但实际上玩DNF的体验还是不错的，矮轴的确和红轴不搭，还得是有段落感的轴体。</p><p>先这样吧，可以使用着，感觉能换下键帽的话可能体验会上升一个档次，办公用的话其实也一般，感觉用mac的可能需求更高一点，如果是win不如直接买个有线的薄膜键盘来办公了，反正没有全键无冲的需求。我甚至感觉玩激战2用薄膜键盘更舒服emmm</p><p>但这个键盘估计也不会出手了，先自己用着吧，关于矮轴，有机会入个矮茶轴或者矮青轴，偏向矮茶轴，青轴声音可能会有点大，但怕茶轴用起来就没有机械键盘的感觉了，可能还会有其他的轴体，到时候再说吧，感觉以后会流行起来。</p><p>说起来不像那个B站国外键盘测评视频说的那样，我不是因为从笔记本键盘过度而想用巧克力，只是单纯因为触发快，所以可能达尔优的那个更适合我？不清楚了，暂时先这样吧，感觉目前这个矮红轴最多给个及格分6分，因为键帽的触感实在是太差了，还有那个顶手的感觉，空格键每次按下去，都会硌一下手，顶手加不理想的键帽会带来硌手的额外效果。</p></li></ul><h3 id="高斯G87红轴"><a href="#高斯G87红轴" class="headerlink" title="高斯G87红轴"></a>高斯G87红轴</h3><h3 id="IKBC-87-茶轴"><a href="#IKBC-87-茶轴" class="headerlink" title="IKBC 87 茶轴"></a>IKBC 87 茶轴</h3><h3 id="蝰蛇鼠标"><a href="#蝰蛇鼠标" class="headerlink" title="蝰蛇鼠标"></a>蝰蛇鼠标</h3><h3 id="雷蛇无线鼠标"><a href="#雷蛇无线鼠标" class="headerlink" title="雷蛇无线鼠标"></a>雷蛇无线鼠标</h3><h3 id="普通巧克力薄膜键盘"><a href="#普通巧克力薄膜键盘" class="headerlink" title="普通巧克力薄膜键盘"></a>普通巧克力薄膜键盘</h3><h3 id="小米显示器灯"><a href="#小米显示器灯" class="headerlink" title="小米显示器灯"></a>小米显示器灯</h3><h3 id="声音外设"><a href="#声音外设" class="headerlink" title="声音外设"></a>声音外设</h3>]]></content>
      
      
      <categories>
          
          <category> 器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 外设 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>张爱玲</title>
      <link href="/2019/06/15/%E6%96%87%E5%AD%A6/%E8%AF%BB%E4%B9%A6/%E5%BC%A0%E7%88%B1%E7%8E%B2%E4%B8%AD%E7%9F%AD%E7%AF%87%E5%B0%8F%E8%AF%B4/"/>
      <url>/2019/06/15/%E6%96%87%E5%AD%A6/%E8%AF%BB%E4%B9%A6/%E5%BC%A0%E7%88%B1%E7%8E%B2%E4%B8%AD%E7%9F%AD%E7%AF%87%E5%B0%8F%E8%AF%B4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>todo</p><a id="more"></a><h2 id="第一炉香"><a href="#第一炉香" class="headerlink" title="第一炉香"></a>第一炉香</h2><h2 id="第二炉香"><a href="#第二炉香" class="headerlink" title="第二炉香"></a>第二炉香</h2><h2 id="茉莉香片"><a href="#茉莉香片" class="headerlink" title="茉莉香片"></a>茉莉香片</h2><h2 id="心经"><a href="#心经" class="headerlink" title="心经"></a>心经</h2><h2 id="封锁"><a href="#封锁" class="headerlink" title="封锁"></a>封锁</h2><h2 id="倾城之恋"><a href="#倾城之恋" class="headerlink" title="倾城之恋"></a>倾城之恋</h2><h2 id="琉璃瓦"><a href="#琉璃瓦" class="headerlink" title="琉璃瓦"></a>琉璃瓦</h2><h2 id="金锁记"><a href="#金锁记" class="headerlink" title="金锁记"></a>金锁记</h2><h2 id="连环套"><a href="#连环套" class="headerlink" title="连环套"></a>连环套</h2>]]></content>
      
      
      <categories>
          
          <category> 文学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 近现代文学 </tag>
            
            <tag> 张爱玲 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>外面的世界</title>
      <link href="/2019/06/15/%E5%99%A8/%E5%90%9B%E5%AD%90%E4%B8%8D%E5%99%A8%E4%BD%86%E7%94%A8%E5%99%A8/%E5%A4%96%E9%9D%A2%E7%9A%84%E4%B8%96%E7%95%8C/"/>
      <url>/2019/06/15/%E5%99%A8/%E5%90%9B%E5%AD%90%E4%B8%8D%E5%99%A8%E4%BD%86%E7%94%A8%E5%99%A8/%E5%A4%96%E9%9D%A2%E7%9A%84%E4%B8%96%E7%95%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Who am I ？" />    <label for="pass">Who am I ？</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
            <tag> VPN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Next 定制化记录</title>
      <link href="/2019/06/13/%E5%99%A8/%E5%90%9B%E5%AD%90%E4%B8%8D%E5%99%A8%E4%BD%86%E7%94%A8%E5%99%A8/Next%20%E5%AE%9A%E5%88%B6%E5%8C%96%E8%AE%B0%E5%BD%95/"/>
      <url>/2019/06/13/%E5%99%A8/%E5%90%9B%E5%AD%90%E4%B8%8D%E5%99%A8%E4%BD%86%E7%94%A8%E5%99%A8/Next%20%E5%AE%9A%E5%88%B6%E5%8C%96%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>作为一个前端小白。。还带点强迫症那种，东改西改改了两三天，大致把想要的效果都改出来了，这里做一个记录。主要是记录，大家也可以当做教程用一下，有些部分不够完善也放了比较详尽的地址。</p><p>便于自己记录，博文不光是采用了根据功能记录的结构还采用了根据文件记录的结构。<br><strong>博客搭建使用</strong> <strong>Hexo Next Mist</strong></p><a id="more"></a><h2 id="根据文件记录"><a href="#根据文件记录" class="headerlink" title="根据文件记录"></a>根据文件记录</h2><h3 id="css-custom-custom-styl"><a href="#css-custom-custom-styl" class="headerlink" title="css/_custom/custom.styl"></a>css/_custom/custom.styl</h3><p>这个文件目录在 next\source\css_custom，一开始是空的，看命名也可以知道是让用户自定义用的。</p><p>这个文件我主要是用来做一些背景的修改，字体颜色的修改以及总体的布局。实际上字体颜色等参数修改还有另一种方式，在下一个文件会介绍。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">// Custom styles.</span><br><span class="line">//设置代码颜色</span><br><span class="line">#posts code &#123;color: #FFFFF0;background-color:#000000;&#125;</span><br><span class="line"></span><br><span class="line">#sidebar &#123;</span><br><span class="line">background-color:rgba(0,0,0,40%);</span><br><span class="line">            background-size: cover;</span><br><span class="line">            background-position:center;</span><br><span class="line">            background-repeat:no-repeat;</span><br><span class="line">            p,span,a&#123;color: #87DAFF;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">body</span><br><span class="line">&#123;</span><br><span class="line">background:url(/images/custom/background.jpg);</span><br><span class="line">    background-size:cover;</span><br><span class="line">    background-repeat:no-repeat;</span><br><span class="line">    background-attachment:fixed;</span><br><span class="line">    background-position:center;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">.content &#123;</span><br><span class="line">padding: 20px;</span><br><span class="line">            border-radius: 10px;</span><br><span class="line">            margin-top: 60px;</span><br><span class="line">            background:rgba(255,251,240,85%) none repeat scroll !important;</span><br><span class="line">         &#125;</span><br><span class="line">.header &#123;</span><br><span class="line">          background:rgba(0,0,0,100%) none repeat scroll !important;</span><br><span class="line">        &#125;</span><br><span class="line">.footer &#123;</span><br><span class="line">          background:rgba(0,0,0,30%) none repeat scroll !important;</span><br><span class="line">        &#125;</span><br><span class="line">.footer-inner&#123;color:$footer-text-Color;&#125;</span><br><span class="line">.main-inner &#123;</span><br><span class="line">width: 800px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="css-variables-custom-style"><a href="#css-variables-custom-style" class="headerlink" title="css/_variables/custom.style"></a>css/_variables/custom.style</h3><p>目录在next/source/css/_variables/custom，Next 标记了一些例如 $brand-color 格式的参数，而在这个文件中就可以对这些参数赋值。我主要是使用这个进行了一些颜色的设置。也可以自己来创建这种参数，然后在这个文件中进行配置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$brand-color = #EE9572</span><br><span class="line">$menu-textcolor = #EE9572</span><br><span class="line">$grey-dark = #EE9572</span><br><span class="line">$footer-text-Color = #EE9572</span><br><span class="line">$site-description-color = #87DAFF</span><br></pre></td></tr></table></figure><h2 id="根据功能记录"><a href="#根据功能记录" class="headerlink" title="根据功能记录"></a>根据功能记录</h2><h3 id="Hitokoto-调用在侧边框"><a href="#Hitokoto-调用在侧边框" class="headerlink" title="Hitokoto 调用在侧边框"></a>Hitokoto 调用在侧边框</h3><p><img src="https://i.loli.net/2019/06/14/5d035527c6e7464599.jpg" alt="Hitokoto"></p><p>具体效果就是每次刷新界面都会有不一样的句子，<a href="https://hitokoto.cn/" target="_blank" rel="noopener"><strong>Hitokoto</strong></a>的介绍可以直接点进去看一下。<br>由于是前端小白。。就硬着头皮找侧边框的文件，然后添加上去，文件在 \next\layout_macro\sidebar.swig，具体的修改是在渲染描述那行前面加了两行代码。原理就是调用了 Hitokoto 官方提供的 Script 标签，然后使用 div 用  Description 的模式展示出来，用 id 来标定文本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;https://v1.hitokoto.cn/?c=d&amp;encode=js&amp;select=%23hitokoto&quot; defer&gt;&lt;/script&gt;</span><br><span class="line">    &lt;div class=&quot;site-description motion-element&quot; id=&quot;hitokoto&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;site-description motion-element&quot; itemprop=&quot;description&quot;&gt;&#123;&#123; description &#125;&#125;&lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="文章加密"><a href="#文章加密" class="headerlink" title="文章加密"></a>文章加密</h3><p>加密方法网上主要有两种，一种是直接加脚本判断，不过只要浏览者看一下源码就能看到，而另一种是使用 <a href="https://github.com/MikeCoder/hexo-blog-encrypt" target="_blank" rel="noopener"><strong>hexo-blog-encrypt</strong></a> 插件，说明很详细，但是在使用的时候和 next 有冲突，文档中的一些方法还用不了，我出现的问题是加密的文档没法显示目录，经过一番修改后也只是做成了加密文档的目录不会加密的效果，勉勉强强解决了，具体解决方法在此 GitHub仓库 的 <a href="https://github.com/MikeCoder/hexo-blog-encrypt/issues/16" target="_blank" rel="noopener">这个Issues</a> 下，由于版本不同源代码已经进行了更新，大家还是对着这解决方案自己一点点改比较好，感谢 edward-p 和 xmeng1 的分享，对于 mist 来说两位大佬的方案都要采用，其他的主题模式不太清楚。</p><h3 id="字数、时间统计"><a href="#字数、时间统计" class="headerlink" title="字数、时间统计"></a>字数、时间统计</h3><p>此功能使用的是 next 自带的 <a href="https://github.com/theme-next/hexo-symbols-count-time" target="_blank" rel="noopener"><strong>symbols_count_time</strong></a>，根据 GitHub 上的文档操作，先在 Hexo项目 根目录下打开命令行工具，输入指令下载插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure><p>这里有个地方要注意一下，下载完成之后需要对 Hexo 的 _config 和 Next 的 _Config 两个文件进行配置，具体配置参考 GitHub 说明文档。</p><h3 id="阅读量统计"><a href="#阅读量统计" class="headerlink" title="阅读量统计"></a>阅读量统计</h3><p>Next 自带了 busuanzi 的访客统计(其实我也记不清当时怎么做的了。。)，在 next 的 _config.yml 文件中搜索到 busuanzi_count，进行相关开关及配置即可。</p><p>这里是我这个版本的配置，大家可以根据初始状态的模板进行修改。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line">  enable: true</span><br><span class="line">  total_visitors: false</span><br><span class="line">  total_visitors_icon: user</span><br><span class="line">  total_views: false</span><br><span class="line">  total_views_icon: eye</span><br><span class="line">  post_views: true</span><br><span class="line">  post_views_icon: eye</span><br></pre></td></tr></table></figure><h3 id="简易评论功能"><a href="#简易评论功能" class="headerlink" title="简易评论功能"></a>简易评论功能</h3><p>简易评论功能这里使用的是 <a href="https://valine.js.org/" target="_blank" rel="noopener"><strong>Valine</strong></a>，目前对于访客评论没有任何限制，只是会提示访客输入邮箱和博客地址。Valine 使用 LeanCloud 做评论存储和管理，需要先注册 <a href="https://leancloud.cn/" target="_blank" rel="noopener"><strong>LeanCloud</strong></a> 并配置，然后就是对于 Next _config 的配置，根据<a href="https://nobige.cn/post/20180725-forHexoAddValine/" target="_blank" rel="noopener">这篇文章</a>操作就可以了(才不是我懒！！！)。</p><p>Next 评论框样式是透明的，由于和我设置了背景，导致我这边看起来很不舒服，之后研究一番改了评论框的样式，是在这个文件中进行修改next\source\css_common\components\comments.styl，下面的代码分别是指页边距、圆角、整体间距？背景颜色。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.comments &#123; </span><br><span class="line">padding: 10px;</span><br><span class="line">border-radius: 10px;</span><br><span class="line">margin: 60px 20px 0;</span><br><span class="line">background-color:rgba(255,239,213,85%); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="为搜索引擎收录（待做）"><a href="#为搜索引擎收录（待做）" class="headerlink" title="为搜索引擎收录（待做）"></a>为搜索引擎收录（待做）</h3><h2 id="其他分享"><a href="#其他分享" class="headerlink" title="其他分享"></a>其他分享</h2><h3 id="图床工具"><a href="#图床工具" class="headerlink" title="图床工具"></a>图床工具</h3><p>由于 GitHub 的速度问题，一般大家会把图片放到国内的图床上，这里推荐一个图床工具 <a href="https://molunerfinn.com/PicGo/" target="_blank" rel="noopener"><strong>PicGo</strong></a>。</p><h3 id="MarkDown-编辑器"><a href="#MarkDown-编辑器" class="headerlink" title="MarkDown 编辑器"></a>MarkDown 编辑器</h3><p>Next 介绍中有一款专门针对 Hexo 的工具 <a href="https://github.com/zhuzhuyule/HexoEditor" target="_blank" rel="noopener"><strong>HexoEditor</strong></a>，之前我一直在用的是 <a href="https://www.typora.io/" target="_blank" rel="noopener"><strong>Typora</strong></a>，两款都不错。</p>]]></content>
      
      
      <categories>
          
          <category> 器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Next </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity插件收集</title>
      <link href="/2019/06/12/Unity/%E5%BD%92%E6%A1%A3/Unity/Unity%E6%8F%92%E4%BB%B6%E6%94%B6%E9%9B%86/"/>
      <url>/2019/06/12/Unity/%E5%BD%92%E6%A1%A3/Unity/Unity%E6%8F%92%E4%BB%B6%E6%94%B6%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>这里是对插件的积累，主要是商店链接和简单介绍。</p><p>以前做游戏的时候，对用插件很抵触，一是感觉很多里面的东西不容易摸清楚用起来不爽，二是心高气傲想什么都自己写，后来思维就变了，插件是用来提高开发、创作效率的东西，把精力提出来去做更重要的事情才是正道。特别是看了这篇<a href="https://zhuanlan.zhihu.com/p/64524598" target="_blank" rel="noopener"><strong>开发日志</strong></a>之后，对于插件的感觉就又不一样了，对于不同类型的游戏来说所用的技术大相径庭，而对于有些模板固定的游戏来说使用插件很节省时间精力，甚至可以说不用在代码上消费精力，而把精力放到设计上。</p><a id="more"></a><p>在公司做游戏和独立开发者开发游戏又是不一样的事情，思维上的转变很重要，不要对工具、代码过度追求，最终本末倒置就不好了。之前有几天根据一位大佬配置文件自动生成代码的方案来做自己的编辑器工具，最后问了一下大佬的做法，发现自己做了很多很多的无用功，配置文件自动生成代码这种事情一个项目基本上只会做一次，而我扩展了很多输入框，这就没必要了，是过度设计，要吸取教训啊！！！我的时间都没了！！！</p><h2 id="序列化、反序列化，配置类自动生成"><a href="#序列化、反序列化，配置类自动生成" class="headerlink" title="序列化、反序列化，配置类自动生成"></a>序列化、反序列化，配置类自动生成</h2><h3 id="ExcelLENT"><a href="#ExcelLENT" class="headerlink" title="ExcelLENT"></a>ExcelLENT</h3><h2 id="2D"><a href="#2D" class="headerlink" title="2D"></a>2D</h2><h3 id="HitboxStudio-Pro"><a href="#HitboxStudio-Pro" class="headerlink" title="HitboxStudio Pro"></a>HitboxStudio Pro</h3><h3 id="Anima2D"><a href="#Anima2D" class="headerlink" title="Anima2D"></a>Anima2D</h3><h3 id="Sprite-两个-一个20刀-一个5刀"><a href="#Sprite-两个-一个20刀-一个5刀" class="headerlink" title="Sprite 两个 一个20刀 一个5刀"></a>Sprite 两个 一个20刀 一个5刀</h3>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏开发 </tag>
            
            <tag> Unity插件 </tag>
            
            <tag> 独立游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工具收集（不断更新中 ~~）</title>
      <link href="/2019/06/12/%E5%99%A8/%E5%90%9B%E5%AD%90%E4%B8%8D%E5%99%A8%E4%BD%86%E7%94%A8%E5%99%A8/%E5%B7%A5%E5%85%B7/"/>
      <url>/2019/06/12/%E5%99%A8/%E5%90%9B%E5%AD%90%E4%B8%8D%E5%99%A8%E4%BD%86%E7%94%A8%E5%99%A8/%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>一些平时增加生产效率或生活品质的工具。</p><a id="more"></a><h2 id="知识梳理类"><a href="#知识梳理类" class="headerlink" title="知识梳理类"></a>知识梳理类</h2><p>一些用于理清思路，搭起架构、大纲的工具。</p><ul><li><p><a href="https://www.xmind.cn/" target="_blank" rel="noopener"><strong>XMind</strong></a>，思维导图类推广最好的一款软件吧，官方说要收费，不过下载XMind 8，并不是专业版的可以免费使用，一些攻击功能无法使用，但是也日常梳理程序、写作思路等也够用了。</p><p><img src="https://i.loli.net/2019/06/30/5d18c422be2df82746.png" alt="思维导图"></p></li><li><p><a href="https://workflowy.com/" target="_blank" rel="noopener"><strong>WorkFlowy</strong></a>，在线的嵌套无序列表。</p><p><img src="https://i.loli.net/2019/06/30/5d18c6bfcb15666977.png" alt="WorkFlowy"></p></li><li><p><a href="https://mubu.com/" target="_blank" rel="noopener"><strong>幕布</strong></a>，没有实际使用过，相当于 WrokFlowy 和 思维导图 的结合，其实思维导图是扩展型的嵌套无序列表。</p></li></ul><h2 id="知识管理类"><a href="#知识管理类" class="headerlink" title="知识管理类"></a>知识管理类</h2><p>用过许多的笔记本类软件，现在自己搭了博客，打算笔记全部放在这里，不过还是有一些比较强大的笔记软件，这里推荐一下。</p><ul><li><a href="https://www.yuque.com/" target="_blank" rel="noopener"><strong>语雀平台</strong></a>，web 在线编辑，支持 .md，支持团队合作，很强大。</li><li><a href="https://www.yinxiang.com/" target="_blank" rel="noopener"><strong>印象笔记</strong></a>，支持网页截图、标签等功能，支持的平台也比较多，不过我用的不是很多，大家感兴趣可以去试试。</li><li><a href="https://calibre-ebook.com/" target="_blank" rel="noopener"><strong>calibre</strong></a>，一款书籍管理工具，有 Kindle 的强烈推荐一波，支持转各种格式，一键推送设备、邮箱。</li></ul><h2 id="时间管理类"><a href="#时间管理类" class="headerlink" title="时间管理类"></a>时间管理类</h2><p>摇摇晃晃一整天，睁眼一看第二天。</p><ul><li><a href="https://www.pomotodo.com/" target="_blank" rel="noopener"><strong>番茄土豆</strong></a>，这款工具比较能使人集中注意力，还可以提醒大家不要久坐。。。原理就是每25分钟休息5分钟，类似仪式性的自我提醒，使得效率提高。设计合理，Windows平台可以右下角托盘，开机启动很方便。</li></ul><h2 id="同步工具"><a href="#同步工具" class="headerlink" title="同步工具"></a>同步工具</h2><p>文档、项目、资源同步。</p><ul><li><a href="https://www.jianguoyun.com/" target="_blank" rel="noopener"><strong>坚果云</strong></a>，平时个人同步文档之类的很好用，支持历史回退，以前我用的是 OneDrive，很久没用了，这个感觉完全可以替代。开会员可以团队同步。</li><li><a href="https://www.sourcetreeapp.com/" target="_blank" rel="noopener"><strong>SourceTree</strong></a>，git同步工具，适合刚使用 git 的小白，可以不用一行行敲指令。不过由于某些原因，不太容易注册并使用，可以参考前辈们提供的免注册方法。</li></ul><h2 id="写作工具"><a href="#写作工具" class="headerlink" title="写作工具"></a>写作工具</h2><p><strong>文本编辑器</strong></p><ul><li><a href="https://github.com/zhuzhuyule/HexoEditor" target="_blank" rel="noopener"><strong>HexoEditor</strong></a>，Hexo 比较推荐的一款 md 编辑器，有很多专门针对 Hexo 写博文的功能，推荐。</li><li><a href="https://www.typora.io/" target="_blank" rel="noopener"><strong>Typora</strong></a>，也是一款 md 编辑器，本地用起来也比较舒服。</li><li><a href="https://notepad-plus-plus.org/" target="_blank" rel="noopener"><strong>Notead++</strong></a>，一款轻量级的文本编辑器，集成到右键平时看文件挺好用的。</li></ul><p><strong>图床工具</strong><br>由于 GitHub 的速度问题，一般大家会把图片放到国内的图床上，本来这里用的是新浪的图床，发现加载有问题，问了大佬才知道新浪不对外开放外链了。由于本身也不会上传私密的图片，目前也不想去弄服务器之类的，就先使用了免费的<a href="https://sm.ms/" target="_blank" rel="noopener">sm.ms</a> 图床，PicGo 支持，HexoEditor 也支持，很方便，不过不能设置图片质量。</p><ul><li><a href="https://molunerfinn.com/PicGo/" target="_blank" rel="noopener"><strong>PicGo</strong></a>，一款图床工具，支持多种图床，感觉这一个就够了以后不用装插件、收藏网页了。</li></ul><p><strong>图片压缩</strong></p><p>写记录文章上传的图片比较大，图床还没搞压缩功能，找了个本地压缩图片的工具。在知乎收藏夹了。</p><ul><li><a href="http://tu.qikegu.com/site/yatu" target="_blank" rel="noopener">奇客谷压缩</a></li></ul><h2 id="Chrome插件"><a href="#Chrome插件" class="headerlink" title="Chrome插件"></a>Chrome插件</h2><p>Chrome 自认为比较好用必备的插件。<br>这里就不贴链接了，大家去商店下载，鉴于网络原因，可能需要自行折腾一番。</p><ul><li><strong>Pure Newtab</strong>，一款新标签页插件，美化用的，新建标签是打开的是自己设置的一张图片，强迫症美化用 =-=。<br><img src="https://i.loli.net/2019/06/14/5d03be4d7e68386991.png" alt="pure Newtab"></li><li><strong>Octotree</strong>，程序员必备，查看 GitHub 时会扩展一个侧边栏。<br><img src="https://i.loli.net/2019/06/14/5d03bf09261e869242.png" alt="Octotree"></li><li><strong>划词翻译</strong>，必备，翻译用，很好用。<br><img src="https://i.loli.net/2019/06/14/5d03bf5d07a5487133.png" alt="划词翻译"></li><li><strong>阅读模式</strong>，看网页的时候有时候感觉广告很多，影响集中注意力，可以使用这个。拿我的博客做个示例。<br><img src="https://i.loli.net/2019/06/14/5d03c00ed900d43256.png" alt="阅读模式"></li><li><strong>Bookmarkie</strong>，书签管理工具，不过不支持同步到第三方云，后面使用了 Raindrop。<br><img src="https://i.loli.net/2019/06/14/5d03c0793f57499615.png" alt="Bookmarkie"></li><li><strong>Raindrop</strong>，支持同步到 Raindrop 上，需要注册，支持不同的平台，只是书签管理免费版也够了，会员版本有扩展一些其他功能，一个月3刀，具体功能还没看，不过添加书签的时候没有原版方便。6.16更新：后发现此同步工具不能嵌套文件夹，弃用，采取 Bookmarkie 与 Floccus 的方案，具体看下一条。<img src="https://i.loli.net/2019/06/15/5d03cbf49f4fe44500.png" alt="Raindrop"></li><li><strong>Floccus</strong>，在国内 Chromebook 的书签同步是个问题，最终找到了这个插件，通过配置 WebDAV 的方案同步在坚果云。具体请参考 <a href="https://orangexx.github.io/2019/06/16/计院素养/WebDAV%20同步文件">WebDAV 文件同步</a>。</li><li><strong>书签同步</strong>，不同于 Floccus，使用的是 GitHub 同步，不过需要 repo权限的 全局 token，感觉有些安全问题（最多给你删掉以往记录。。。），介于已经用 Floccus 实现了同步，且没有安全问题，就没有再换了，可以参考一下。</li><li><strong>gk7-豆瓣阅读推送</strong>，只针对既是 Kindle用户 又是 豆瓣阅读用户的群体，可以将豆瓣阅读的文章推送到 Kindle。就不贴图了，插件介绍里面都有。</li></ul><h2 id="歪门邪道"><a href="#歪门邪道" class="headerlink" title="歪门邪道"></a>歪门邪道</h2><p>一些拿不上台面的东西。</p><ul><li><strong>速盘</strong>  由于是歪门邪道，就不提供链接了，大家一搜就有，突破百度网盘的下载速度，现在速度好像没有以前快了，我用的是 vip版，流量计费，很便宜，不用登陆账号，只用分享链接。</li><li><a href="https://www.baiduwp.com/" target="_blank" rel="noopener"><strong>百度云 快速下载</strong></a>，也是一个用于快速下载百度网盘的方案。</li></ul><h2 id="怡然自得"><a href="#怡然自得" class="headerlink" title="怡然自得"></a>怡然自得</h2><p>像素画、简单音乐、体素等简单的数码艺术工具。</p><ul><li><p><a href="https://ephtracy.github.io/" target="_blank" rel="noopener"><strong>MagicalVoxel</strong> </a> 一款体素制作工具，支持多种格式，还附带了渲染的一些功能，很棒，作者国人，且还一直在更新，可以去关注下微博。<br><img src="https://i.loli.net/2019/06/14/5d0360043384288036.png" alt="MagicalVoxel"></p></li><li><p><a href="https://boscaceoil.net/" target="_blank" rel="noopener"><strong>Bosca Ceoil</strong></a> 一款简易的音乐制作软件，可以根据这个了解一下电子音乐的制作流程，并制作一些简单的音乐，支持 web 在线使用、Win、Linux、Mac。<br><img src="https://i.loli.net/2019/06/14/5d036117b4a7656920.png" alt="Bosca Ceoil"></p></li><li><p><a href="https://store.steampowered.com/app/431730/Aseprite/?l=schinese&curator_clanid=31406066" target="_blank" rel="noopener"><strong>Aseprite</strong></a> 一款像素画工具，支持时间轴制作帧动画，还有很多有趣的小东西，<a href="https://github.com/aseprite/aseprite" target="_blank" rel="noopener">GitHub</a> 上有源码，需要 CMake 编译，比较麻烦，这里是<a href="https://www.aseprite.org/" target="_blank" rel="noopener">官方网址</a>。<img src="https://i.loli.net/2019/06/14/5d0362538857293897.png" alt="Aseprite"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网文作者推荐</title>
      <link href="/2019/06/12/%E8%AF%BB%E4%B9%A6/%E8%AF%BB%E4%B9%A6/%E7%BD%91%E6%96%87%E4%BD%9C%E8%80%85%E6%8E%A8%E8%8D%90/"/>
      <url>/2019/06/12/%E8%AF%BB%E4%B9%A6/%E8%AF%BB%E4%B9%A6/%E7%BD%91%E6%96%87%E4%BD%9C%E8%80%85%E6%8E%A8%E8%8D%90/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>从五年级开始，偶然间被妹妹带入《盘龙》的坑，也看了很多年网文了，到了现在这个年纪，有些想分享的作者。毕竟是网文嘛，很多东西也就是看的时候开心一下，不过大家看的时候心态肯定也有不同的，我这里是站在 19年6月的我 的观念来讲，大家看看借鉴一下就好啦。我是相对来说比较较真的人，文质不彬彬，相对更重质一些。</p><a id="more"></a><p>不过刷网文、刷剧、刷漫画，我老是有不看完不罢休的坏习惯，反而误了其他的事情，大家不要学我，艺术再高，生活才最重要。而且网文很多地方不够严谨，大家也大气一些，看个意也挺好嘛，而有些并非严不严谨的问题却要记下，不能让带跑了。</p><h2 id="作者推荐"><a href="#作者推荐" class="headerlink" title="作者推荐"></a>作者推荐</h2><p>目前在追并且比较认同的作者只有三位，烽火、猫腻、香蕉，这三位都有自己独特的文风，并且不同于那些一味求爽的网文，只有那些套路，而是真真正正去融入了作者自己的经历、处世态度，所以可能有些时候甚至会读不下去（猫腻的基本上不会）。推荐这三位作者也与我之前一味追求质的毛病有关，看书、听音乐、玩游戏、看视频都喜欢去追求一个内容的意义，不好不好。</p><h3 id="烽火戏诸侯"><a href="#烽火戏诸侯" class="headerlink" title="烽火戏诸侯"></a>烽火戏诸侯</h3><p>文笔顶尖，博览群书，擅用各种典故，对儒家、道家、佛家都有涉及，有时候会有些给人掉书袋的感觉，特别当下的风气，可能大家有时候会看不下去，需要耐着性子。</p><p>看的第一本烽火的书是《陈二狗的妖孽人生》，那时候是高一，这本书在很长一段时间里对我影响很大，记得当时烽火说过一段话，大致意思是 如果写的文章能让看书的少年、青年在夜里生起斗志哪怕第二天醒来就没了也让人感到值得了。这本书讲的是小山村里二狗崛起的故事，被烽火那网文中顶尖的文笔写得文章处处透着穷苦家出人投地的一股气，王侯将相，宁有种乎？当时年少无知，甚至有点看魔怔了，不过倒是自己每天努力学习给高中打下了学业上的基础。现在想想，自己远远不如那时候了。</p><p>接下来就是近来追的烽火的《剑来》了，比起《二狗》的那一股小人物如履薄冰、屏息前行的一股气，《剑来》有的是一股浩然正气以及砥砺前行的茕茕孑立感，看的是平安的经历、成长，问的是自己的心，加上最近在刷的《雪中悍刀行》，是对世事的观摩以及细微之处的情字，这三本书串成了一条线，从个人到人间再到个人，从底层到高层再到平常，烽火的网文值得一看。</p><h3 id="猫腻"><a href="#猫腻" class="headerlink" title="猫腻"></a>猫腻</h3><p>猫腻的文章我看的不多，也不好评价，很久前看过一本《将夜》，不过也没看完，中途直接翻到最后看了结尾，内容已经记不清大半，也就不评价了。不过最近在追《大道朝天》，猫腻文笔随性，偶有妙手，追猫腻的书就好像喝了一碗清冽的泉水，舒服。</p><p>《大道朝天》与普通的书不同，主角从一开始就相当于站在了山巅上，这种设定很少见，而这样写，更契合了猫腻的随性，主角也随性，就好像看到了主角和作者的重合。逻辑或许漏洞百出，文风不能紧，给人懒洋洋的感觉，却突然来一招妙手，让人欲罢不能，嗯，就是这样。《大道朝天》更新的字数速度不如《剑来》，但每天晚上八点都会有，字数也不多，不至于让人耐不下性子，好比之前猫腻中午也更新的时候说的那样，大伙在吃中饭的时候看了，舒服一下。但就是这样一本随性的书，也有着作者自己放的料，“我是我之所有因果的指向”这类装逼的话还真是让懂的人看的头皮一麻，心里爽一番，看不懂的人就会说又水了一篇。</p><h3 id="香蕉"><a href="#香蕉" class="headerlink" title="香蕉"></a>香蕉</h3><p>香蕉，这位作者可谓呕心沥血，一本架空历史《赘婿》从2011年写到了现在，不过感觉距离完结还可以写很多东西。前期是言情加商战，中期是政治斗争，再后面是战争，见证了作者的成长与文风的变化，到现在很多场面描写偏向剧本，读起来直接就出现画面了，可能在为之后的影视化做准备。而且难能可贵的是蕉姐写了儒家的弊端、愚民还是开智的讨论，这种谁写谁难受，谁写谁掉头发的东西，吃力不讨好，但蕉姐就是硬着往下写了，我当时看着就想到了呕心沥血这个词，所以蕉姐现在即使一个月一更，还有读者在追，每次更还有大家在贴吧讨论。蕉姐每年过生日的时候还会写个随笔，不是在正文下面那种寥寥几笔，是很正式的一篇总结、展望，可能比平时的正文都长，认真写网文的人不多，蕉姐算一个，认真写一本书写了七八年还要继续写下去的人更少了，蕉姐绝对算一个。蕉姐是男的。</p><p>蕉姐的文风嘛，感觉没有烽火那么擅用典故，也不是猫腻那么随性，但也有着自己的特色，一篇文章的标题分一二三四五六七在往下去都有可能，可能写着写着上中下就改成了一二三四，名字很简短，有的很意象有的很白话，什么野火、无归、转折点、大决战的，这几天没看，蕉姐又更了。几天没看是因为看到了战争中荒唐的一个情节，让我难受得看不下去，也就放了几天，不过肯定还会看下去的，前面言情商战、政治描写的时候主角还经常登场，到了战争这里，主角就少了，更多是各种人物，各类脸孔的描写，让人觉得天道无情，心里难受。可是啊，就是得面对着这些东西往前走，好比蕉姐敢写愚民开智，敢写弑君扯华夏旗，敢面对这些一般人不敢写的东西，还是那种认认真真一丝不苟去往前写，虽难吾往矣。祝蕉姐文笔越来越好，身体健康。</p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络小说 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
